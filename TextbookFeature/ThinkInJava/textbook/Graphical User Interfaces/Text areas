  A JTextArea is like a JTextField except that it can have multiple lines and has more functionality. A particularly useful method is append( ); with this you can easily pour output into the JTextArea. Because you can scroll backwards, this is an improvement over command-line programs that print to standard output. As an example, the following program fills a JTextArea with the output from the Countries generator in the Containers in Depth chapter: 
  In the constructor, the Map is filled with all the countries and their capitals. Note that for both buttons, the ActionListener is created and added without defining an intermediate variable, since you never need to refer to that listener again during the program. The "Add Data" button formats and appends all the data, and the "Clear Data" button uses setText( ) to remove all the text from the JTextArea. 
  As the JTextArea is added to the JFrame, it is wrapped in a JScrollPane to control scrolling when too much text is placed on the screen. Thatâ€™s all you must do in order to produce full scrolling capabilities. Having tried to figure out how to do the equivalent in some other GUI programming environments, I am very impressed with the simplicity and good design of components like JScrollPane. 
  Exercise 6: (7) Turn strings/TestRegularExpression.java into an interactive Swing program that allows you to put an input string in one JTextArea and a regular expression in a JTextField. The results should be displayed in a second JTextArea. 
  Exercise 7: (5) Create an application using SwingConsole, and add all the Swing components that have an addActionListener( ) method. (Look these up in the JDK documentation from http://java.sun.com. Hint: Search for addActionListener( ) using the index.) Capture their events and display an appropriate message for each inside a text field. 
  Exercise 8: (6) Almost every Swing component is derived from Component, which has a setCursor( ) method. Look this up in the JDK documentation. Create an application and change the cursor to one of the stock cursors in the Cursor class. 
