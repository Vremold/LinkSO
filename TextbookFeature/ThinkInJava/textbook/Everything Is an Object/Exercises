  Normally, exercises will be distributed throughout the chapters, but in this chapter you were learning how to write basic programs so all the exercises were delayed until the end. 
  The number in parentheses after each exercise number is an indicator of how difficult the exercise is, in a ranking from 1-10. 
  Solutions to selected exercises can be found in the electronic document The Thinking in Java Annotated Solution Guide, available for sale from www.MindView.net. 
  these guidelines could be followed, but you’ll see that the style I use here matches the Java standard as much as possible. Exercise 1: (2) Create a class containing an int and a char that are not initialized, and print their values to verify that Java performs default initialization. 
  Exercise 2: (1) Following the HelloDate.java example in this chapter, create a “hello, world” program that simply displays that statement. You need only a single method in your class (the “main” one that gets executed when the program starts). Remember to make it static and to include the argument list, even though you don’t use the argument list. Compile the program with javac and run it using java. If you are using a different development environment than the JDK, learn how to compile and run programs in that environment. 
  Exercise 3: (1) Find the code fragments involving ATypeName and turn them into a program that compiles and runs. 
  Exercise 4: (1) Turn the DataOnly code fragments into a program that compiles and runs. 
  Exercise 5: (1) Modify the previous exercise so that the values of the data in DataOnly are assigned to and printed in main( ). 
  Exercise 6: (2) Write a program that includes and calls the storage( ) method defined as a code fragment in this chapter. 
  Exercise 7: (1) Turn the Incrementable code fragments into a working program. 
  Exercise 8: (3) Write a program that demonstrates that, no matter how many objects you create of a particular class, there is only one instance of a particular static field in that class. 
  Exercise 9: (2) Write a program that demonstrates that autoboxing works for all the primitive types and their wrappers. 
  Exercise 10: (2) Write a program that prints three arguments taken from the command line. To do this, you’ll need to index into the command-line array of Strings. 
  Exercise 11: (1) Turn the AllTheColorsOfTheRainbow example into a program that compiles and runs. 
  Exercise 12: (2) Find the code for the second version of HelloDate.java, which is the simple comment documentation example. Execute Javadoc on the file and view the results with your Web browser. 
  Exercise 13: (1) Run Documentation1.java, Documentation2.java, and Documentation3.java through Javadoc. Verify the resulting documentation with your Web browser. 
  Exercise 14: (1) Add an HTML list of items to the documentation in the previous exercise. 
  Exercise 15: (1) Take the program in Exercise 2 and add comment documentation to it. Extract this comment documentation into an HTML file using Javadoc and view it with your Web browser. 
  Exercise 16: (1) In the Initialization & Cleanup chapter, locate the Overloading.java example and add Javadoc documentation. Extract this comment documentation into an HTML file using Javadoc and view it with your Web browser. 
