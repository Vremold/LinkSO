Error Handling with Exceptions	The exception specification	[["exception specification", 0.030307874772292857], ["Java", 0.0031079829704775113], ["client programmer", 0.04017645115076041], ["method", 0.010212106567373447], ["exception", 0.2350635291922929], ["caller", 0.015153937386146428], ["exactly code", 0.015153937386146428], ["potential exception", 0.015153937386146428], ["source code", 0.011929997011449008], ["throw statement", 0.015153937386146428], ["library", 0.02046051723897805], ["source", 0.010044112787690103], ["problem", 0.02000468058658399], ["syntax", 0.017412113273503175], ["part", 0.009868576378467558], ["method declaration", 0.015153937386146428], ["argument list", 0.011929997011449008]]
Error Handling with Exceptions	Error Handling with Exceptions	[["error handling", 0.010044112787690103], ["exception", 0.2350635291922929], ["basic philosophy", 0.015153937386146428], ["Java", 0.0031079829704775113], ["badly form code", 0.015153937386146428]]
Error Handling with Exceptions	Alternative approaches	[["alternative approach", 0.015153937386146428], ["exception-handle system", 0.04546181215843929], ["trapdoor", 0.030307874772292857], ["program", 0.002558355055438474], ["execution", 0.008706056636751587], ["normal sequence", 0.015153937386146428], ["statement", 0.007668179653894798], ["exceptional condition", 0.06061574954458571], ["such that normal execution", 0.015153937386146428], ["exception", 0.2350635291922929], ["condition", 0.015153937386146428], ["current method", 0.030307874772292857], ["reason", 0.017412113273503175], ["approach", 0.023859994022898016], ["possible error condition", 0.015153937386146428], ["function call", 0.011929997011449008], ["programmer", 0.016446348786162506], ["result", 0.006103192506819389], ["error", 0.05367725757726359], ["issue", 0.007668179653894798], ["programmer convenience", 0.015153937386146428], ["prime motivation", 0.015153937386146428], ["first place", 0.015153937386146428]]
Error Handling with Exceptions	Catching any exception	[["exception", 0.2350635291922929], ["handler", 0.015153937386146428], ["type", 0.00644788074939484], ["base-class exception type exception", 0.015153937386146428], ["other type", 0.015153937386146428], ["base exception", 0.015153937386146428], ["base", 0.015153937386146428], ["virtually programming activity", 0.015153937386146428]]
Error Handling with Exceptions	Summary	[["exception", 0.2350635291922929], ["Java", 0.0031079829704775113], ["reason", 0.017412113273503175], ["point", 0.006820172412992684], ["book", 0.005482116262054168], ["many library", 0.015153937386146428]]
Error Handling with Exceptions	Performing cleanup with finally	[["cleanup", 0.010044112787690103], ["piece", 0.010044112787690103], ["code", 0.017275512792731818], ["exception", 0.2350635291922929], ["try block", 0.015153937386146428], ["operation", 0.017412113273503175], ["memory recovery", 0.015153937386146428], ["care", 0.011929997011449008], ["garbage collector", 0.010044112787690103], ["effect", 0.010044112787690103], ["finally clause4", 0.015153937386146428], ["end", 0.006820172412992684], ["exception handler", 0.015153937386146428], ["full picture", 0.015153937386146428], ["exception- handling section", 0.015153937386146428]]
Error Handling with Exceptions	Concepts	[["concept", 0.013640344825985367], ["C", 0.005482116262054168], ["other early language", 0.015153937386146428], ["multiple error-handle scheme", 0.015153937386146428], ["convention", 0.015153937386146428], ["part", 0.009868576378467558], ["programming language", 0.006103192506819389], ["special value", 0.015153937386146428], ["flag", 0.023859994022898016], ["recipient", 0.015153937386146428], ["value", 0.004934288189233779], ["year", 0.011929997011449008], ["programmer", 0.016446348786162506], ["library", 0.02046051723897805], ["error", 0.05367725757726359], ["other", 0.011929997011449008], ["code", 0.017275512792731818], ["error condition", 0.030307874772292857], ["for1", 0.015153937386146428], ["method", 0.010212106567373447], ["unreadable nightmare", 0.015153937386146428], ["system", 0.005482116262054168], ["language", 0.00322394037469742], ["truth", 0.011929997011449008], ["approach", 0.023859994022898016], ["major limitation", 0.015153937386146428], ["large robust maintainable program", 0.015153937386146428]]
Error Handling with Exceptions	Exception restrictions	[["exception restriction", 0.015153937386146428], ["method", 0.010212106567373447], ["only exception", 0.015153937386146428], ["base-class version", 0.015153937386146428], ["useful restriction", 0.015153937386146428], ["code", 0.017275512792731818], ["base class", 0.012206385013638778], ["object", 0.004376617100302906], ["fundamental OOP concept", 0.015153937386146428], ["course", 0.011929997011449008], ["exception", 0.2350635291922929]]
Error Handling with Exceptions	Exception matching	[["exception", 0.2350635291922929], ["exception-handle system", 0.04546181215843929], ["near handler", 0.015153937386146428], ["order", 0.00322394037469742], ["match", 0.015153937386146428], ["far searching", 0.015153937386146428]]
Error Handling with Exceptions	Catching an exception	[["exception", 0.2350635291922929], ["concept", 0.013640344825985367], ["guard region", 0.015153937386146428], ["section", 0.005482116262054168], ["code", 0.017275512792731818]]
Error Handling with Exceptions	Exception guidelines	[["exception guideline", 0.015153937386146428], ["exception", 0.2350635291922929]]
Error Handling with Exceptions	Creating your own exceptions	[["own exception", 0.015153937386146428], ["exist Java exception", 0.015153937386146428], ["Java exception hierarchy", 0.015153937386146428], ["error", 0.05367725757726359], ["special problem", 0.015153937386146428], ["library", 0.02046051723897805]]
Error Handling with Exceptions	Constructors	[["constructor", 0.03834089826947399], ["exception", 0.2350635291922929], ["time", 0.0035962320382952636], ["problem", 0.02000468058658399], ["object", 0.004376617100302906], ["safe starting state", 0.015153937386146428], ["operation", 0.017412113273503175], ["filethat", 0.015153937386146428], ["user", 0.007668179653894798], ["special cleanup method", 0.015153937386146428], ["cleanup behavior", 0.015153937386146428]]
Error Handling with Exceptions	Basic exceptions	[["basic exception", 0.015153937386146428], ["exceptional condition", 0.06061574954458571], ["problem", 0.02000468058658399], ["continuation", 0.015153937386146428], ["current method", 0.030307874772292857], ["scope", 0.011929997011449008], ["normal problem", 0.015153937386146428], ["enough information", 0.015153937386146428], ["current context", 0.04546181215843929], ["difficulty", 0.011929997011449008], ["information", 0.006103192506819389], ["high context", 0.015153937386146428], ["exception", 0.2350635291922929]]
Error Handling with Exceptions	Standard Java exceptions	[["Standard Java exception", 0.015153937386146428], ["Java class throwable", 0.015153937386146428], ["exception", 0.2350635291922929], ["two general type", 0.015153937386146428], ["throwable object", 0.015153937386146428], ["type", 0.00644788074939484], ["error", 0.05367725757726359], ["compile-time and system error", 0.015153937386146428], ["very special case", 0.015153937386146428], ["basic type", 0.015153937386146428], ["standard Java library class method", 0.015153937386146428], ["method", 0.010212106567373447], ["runtime accident", 0.015153937386146428], ["Java programmer s base type", 0.015153937386146428], ["interest", 0.015153937386146428]]
B: Resources	Editors & IDEs	[["editor", 0.14809529718279466], ["ide", 0.14809529718279466], ["healthy competition", 0.14809529718279466], ["arena", 0.14809529718279466], ["many offering", 0.14809529718279466], ["non-free one", 0.14809529718279466], ["free trial", 0.14809529718279466], ["good bet", 0.14809529718279466], ["one", 0.048221452758421025], ["need", 0.11658860715734258]]
B: Resources	Software	[["software", 0.14809529718279466], ["JDK", 0.2944751249118234], ["third-party development environment", 0.14809529718279466], ["good idea", 0.14809529718279466], ["hand", 0.11658860715734258], ["case", 0.07493902843579008], ["compiler error", 0.14809529718279466], ["touchstone", 0.14809529718279466], ["bug", 0.09815837497060782], ["chance", 0.14809529718279466]]
Preface	Note on the cover design	[["cover design", 0.03466060146831364], ["cover", 0.03466060146831364], ["Java", 0.005331513340313816], ["American Arts & Crafts Movement", 0.03466060146831364], ["turn", 0.045946473390497275], ["century", 0.06932120293662727], ["zenith", 0.03466060146831364], ["England", 0.03466060146831364], ["reaction", 0.027286695292144007], ["both machine production", 0.03466060146831364], ["Industrial Revolution", 0.03466060146831364], ["highly ornamental style", 0.03466060146831364], ["victorian era", 0.03466060146831364], ["Arts", 0.03466060146831364], ["Crafts", 0.03466060146831364], ["spare design", 0.03466060146831364], ["form", 0.010165015372632301], ["nature", 0.05457339058428801], ["art nouveau movement", 0.03466060146831364], ["hand-crafting", 0.03466060146831364], ["importance", 0.022973236695248637], ["individual craftsperson", 0.03466060146831364], ["use", 0.01559933051907901], ["modern tool", 0.03466060146831364], ["many echo", 0.03466060146831364], ["situation", 0.017538921548801933], ["evolution", 0.027286695292144007], ["raw beginning", 0.03466060146831364], ["computer revolution", 0.027286695292144007], ["emphasis", 0.03466060146831364], ["software craftsmanship", 0.03466060146831364], ["just manufacture code", 0.03466060146831364], ["same way", 0.03466060146831364], ["attempt", 0.027286695292144007], ["programmer", 0.02507776587960949], ["operate system mechanic", 0.03466060146831364], ["software craftsman", 0.03466060146831364]]
Preface	Preface	[["preface", 0.03466060146831364], ["Java", 0.005331513340313816], ["just programming language", 0.03466060146831364], ["many sense", 0.03466060146831364]]
Preface	Acknowledgements	[["acknowledgement", 0.03466060146831364], ["associate", 0.03466060146831364], ["seminar", 0.022973236695248637], ["consulting", 0.027286695292144007], ["teaching project", 0.03466060146831364], ["Dave Bartlett", 0.03466060146831364], ["Bill Venners", 0.027286695292144007], ["Chuck Allison", 0.027286695292144007], ["Jeremy Meyer", 0.03466060146831364], ["Jamie King", 0.03466060146831364], ["patience", 0.03466060146831364], ["good model", 0.03466060146831364], ["independent folk", 0.03466060146831364]]
Preface	Java SE5 and SE6	[["Java SE5", 0.01830215457921514], ["SE6", 0.03466060146831364], ["edition", 0.027286695292144007], ["book benefit", 0.03466060146831364], ["improvement", 0.027286695292144007], ["Java language", 0.027286695292144007], ["Sun", 0.027286695292144007], ["JDK", 0.022973236695248637], ["JDK5", 0.03466060146831364], ["J2SE5", 0.03466060146831364], ["Java SE5 language change", 0.03466060146831364], ["experience", 0.019912789115974376], ["programmer", 0.02507776587960949], ["Java language designer", 0.03466060146831364], ["task", 0.019912789115974376], ["large step", 0.03466060146831364], ["right direction", 0.03466060146831364]]
Preface	The 4th edition	[["4th edition", 0.03466060146831364], ["satisfaction", 0.03466060146831364], ["new edition", 0.03466060146831364], ["book", 0.012538882939804746], ["thing", 0.01559933051907901], ["last edition", 0.03466060146831364], ["insight", 0.027286695292144007], ["nature", 0.05457339058428801], ["saying", 0.03466060146831364], ["learn experience", 0.03466060146831364], ["opportunity", 0.03466060146831364], ["next edition", 0.03466060146831364], ["fascinating new idea", 0.03466060146831364], ["embarrassment", 0.03466060146831364], ["delight", 0.03466060146831364], ["discovery", 0.03466060146831364], ["ability", 0.019912789115974376], ["idea", 0.010165015372632301], ["well form", 0.03466060146831364]]
Reusing Classes	The final keyword	[["final keyword", 0.048993932902578675], ["Java s final keyword", 0.024496966451289338], ["slightly different meaning", 0.024496966451289338], ["context", 0.024496966451289338], ["change", 0.019285333514748395], ["two reason", 0.03857066702949679], ["design", 0.016236723679348662], ["efficiency", 0.019285333514748395]]
Reusing Classes	Reusing Classes	[["class", 0.01460173882050228], ["most compelling feature", 0.024496966451289338], ["Java", 0.0037681372480413435], ["code reuse", 0.019285333514748395], ["code", 0.004654430138392658]]
Reusing Classes	Upcasting	[["most important aspect", 0.024496966451289338], ["inheritance", 0.15785700919893758], ["method", 0.004716655020376565], ["new class", 0.11365706575544063], ["relationship", 0.032473447358697324], ["base class", 0.009866063074933599], ["type", 0.005211632936540942], ["exist class", 0.019285333514748395]]
Reusing Classes	Summary	[["inheritance", 0.15785700919893758], ["composition", 0.21213866866223235], ["new type", 0.022050181485615442], ["exist type", 0.048993932902578675], ["part", 0.015952961814815977], ["underlying implementation", 0.024496966451289338], ["interface", 0.005813457806266779]]
Reusing Classes	Delegation	[["delegation", 0.048993932902578675], ["third relationship", 0.024496966451289338], ["Java", 0.0037681372480413435], ["inheritance", 0.15785700919893758], ["composition", 0.21213866866223235], ["member object", 0.048993932902578675], ["class", 0.01460173882050228], ["same time", 0.019285333514748395], ["method", 0.004716655020376565], ["new class", 0.11365706575544063], ["example", 0.009583831442825546], ["spaceship", 0.024496966451289338], ["control module", 0.024496966451289338]]
Reusing Classes	Combining composition and inheritance	[["composition", 0.21213866866223235], ["inheritance", 0.15785700919893758], ["follow example", 0.014073700578207452], ["creation", 0.016236723679348662], ["more complex class", 0.024496966451289338], ["necessary constructor initialization", 0.024496966451289338]]
Reusing Classes	protected	[["inheritance", 0.15785700919893758], ["keyword", 0.016236723679348662], ["meaning", 0.016236723679348662], ["ideal world", 0.024496966451289338], ["private keyword", 0.024496966451289338], ["real project", 0.024496966451289338], ["time", 0.005813457806266779], ["world", 0.016236723679348662], ["access", 0.016236723679348662], ["member", 0.014073700578207452], ["derive class", 0.016236723679348662]]
Reusing Classes	Initialization and class loading	[["initialization", 0.06494689471739465], ["class loading", 0.048993932902578675], ["more traditional language", 0.024496966451289338], ["program", 0.008271373487507849], ["part", 0.015952961814815977], ["startup process", 0.024496966451289338], ["process", 0.012395929515694598], ["language", 0.005211632936540942], ["order", 0.005211632936540942], ["static", 0.03857066702949679], ["trouble", 0.024496966451289338], ["C++", 0.005813457806266779], ["example", 0.009583831442825546], ["problem", 0.0064676786858880566], ["one static", 0.024496966451289338], ["second one", 0.024496966451289338]]
Reusing Classes	Choosing composition vs. inheritance	[["composition", 0.21213866866223235], ["inheritance", 0.15785700919893758], ["subobject", 0.024496966451289338], ["new class", 0.11365706575544063], ["difference", 0.019285333514748395]]
Reusing Classes	Inheritance syntax	[["inheritance syntax", 0.024496966451289338], ["inheritance", 0.15785700919893758], ["integral part", 0.024496966451289338], ["Java", 0.0037681372480413435], ["class", 0.01460173882050228], ["other class", 0.019285333514748395], ["Java s standard root class object", 0.024496966451289338]]
Reusing Classes	Composition syntax	[["composition syntax", 0.024496966451289338], ["composition", 0.21213866866223235], ["point", 0.011025090742807721], ["book", 0.008862067641666513], ["reference", 0.017724135283333026], ["new class", 0.11365706575544063], ["example", 0.009583831442825546], ["object", 0.004716655020376565], ["several String object", 0.024496966451289338], ["couple", 0.024496966451289338], ["primitive", 0.024791859031389196], ["class", 0.01460173882050228], ["non- primitive object", 0.024496966451289338]]
Initialization & Cleanup	Initialization & Cleanup	[["Initialization", 0.013359111236778836], ["Cleanup", 0.026718222473557672], ["computer revolution", 0.013359111236778836], ["unsafe programming", 0.016969252802195217], ["major culprit", 0.016969252802195217], ["programming", 0.02249462759743096]]
Initialization & Cleanup	Member initialization	[["member initialization", 0.016969252802195217], ["Java", 0.005220440145723945], ["way", 0.003224162543782414], ["variable", 0.02249462759743096], ["case", 0.01717352734986856], ["method s local variable", 0.016969252802195217], ["guarantee", 0.016969252802195217], ["form", 0.004976622109517897], ["compile- time error", 0.016969252802195217]]
Initialization & Cleanup	Summary	[["seemingly elaborate mechanism", 0.016969252802195217], ["initialization", 0.06748388279229288], ["constructor", 0.0858676367493428], ["strong hint", 0.016969252802195217], ["critical importance", 0.016969252802195217], ["language", 0.007220283130832763], ["Bjarne Stroustrup", 0.016969252802195217], ["inventor", 0.016969252802195217], ["C++", 0.008054061335765434], ["first observation", 0.016969252802195217], ["productivity", 0.016969252802195217], ["C", 0.012277656211892148], ["improper initialization", 0.016969252802195217], ["variable", 0.02249462759743096], ["significant portion", 0.013359111236778836], ["programming problem", 0.01124731379871548], ["kind", 0.007637172233299098], ["bug", 0.01124731379871548], ["similar issue", 0.016969252802195217], ["improper cleanup", 0.016969252802195217], ["proper initialization", 0.016969252802195217], ["cleanup", 0.03374194139614644], ["compiler", 0.01366860821839759], ["object", 0.0196035974284401], ["proper constructor call", 0.016969252802195217], ["complete control", 0.016969252802195217], ["safety", 0.016969252802195217]]
Initialization & Cleanup	Default constructors	[["default constructor", 0.05090775840658566], ["-arg constructor", 0.016969252802195217], ["argument", 0.009748969671362455], ["default object", 0.013359111236778836], ["class", 0.010114746162118767], ["constructor", 0.0858676367493428], ["compiler", 0.01366860821839759], ["example", 0.004425866603804853]]
Initialization & Cleanup	Enumerated types	[["enumerate type", 0.026718222473557672], ["apparently small addition", 0.016969252802195217], ["Java SE5", 0.008960429846074078], ["enum keyword", 0.013359111236778836], ["life", 0.013359111236778836], ["set", 0.014929866328553693], ["past", 0.013359111236778836], ["constant integral value", 0.016969252802195217], ["enumerated type", 0.016969252802195217], ["common enough need", 0.016969252802195217], ["C", 0.012277656211892148], ["C++", 0.008054061335765434], ["number", 0.003224162543782414], ["other language", 0.009748969671362455], ["Java programmer", 0.016969252802195217], ["lot", 0.015274344466598196], ["enum effect", 0.016969252802195217], ["Java", 0.005220440145723945], ["enum", 0.01124731379871548], ["C / C++", 0.016969252802195217], ["simple example", 0.016969252802195217]]
Initialization & Cleanup	Guaranteed initialization with the constructor	[["guaranteed initialization", 0.016969252802195217], ["constructor", 0.0858676367493428], ["method", 0.00980179871422005], ["class", 0.010114746162118767], ["name", 0.0429338183746714], ["hint", 0.016969252802195217], ["object", 0.0196035974284401], ["user", 0.01717352734986856], ["Java", 0.005220440145723945], ["class designer", 0.016969252802195217], ["initialization", 0.06748388279229288], ["hand", 0.013359111236778836]]
Initialization & Cleanup	Method overloading	[["important feature", 0.016969252802195217], ["programming language", 0.006834304109198795], ["use", 0.007637172233299098], ["name", 0.0429338183746714], ["object", 0.0196035974284401], ["region", 0.016969252802195217], ["storage", 0.026718222473557672], ["method", 0.00980179871422005], ["action", 0.033938505604390434], ["well-choose name", 0.016969252802195217], ["system", 0.006138828105946074], ["people", 0.01124731379871548], ["lot", 0.015274344466598196], ["write prose", 0.016969252802195217], ["goal", 0.007637172233299098], ["reader", 0.013359111236778836]]
Initialization & Cleanup	The this keyword	[["keyword", 0.01124731379871548], ["two object", 0.016969252802195217], ["same type", 0.033938505604390434], ["method peel", 0.016969252802195217], ["object", 0.0196035974284401]]
Initialization & Cleanup	Array initialization	[["array initialization", 0.016969252802195217], ["array", 0.01366860821839759], ["sequence", 0.00858676367493428], ["object", 0.0196035974284401], ["primitive", 0.00858676367493428], ["same type", 0.033938505604390434], ["one identifier name", 0.016969252802195217], ["square- bracket", 0.016969252802195217], ["indexing operator", 0.016969252802195217], ["array reference", 0.016969252802195217], ["type name", 0.016969252802195217], ["empty square bracket", 0.016969252802195217]]
Initialization & Cleanup	Constructor initialization	[["constructor initialization", 0.016969252802195217], ["constructor", 0.0858676367493428], ["initialization", 0.06748388279229288], ["great flexibility", 0.013359111236778836], ["programming", 0.02249462759743096], ["method", 0.00980179871422005], ["action", 0.033938505604390434], ["run time", 0.009748969671362455], ["initial value", 0.016969252802195217], ["one thing", 0.01124731379871548], ["mind", 0.009748969671362455], ["automatic initialization", 0.016969252802195217], ["example", 0.004425866603804853]]
Initialization & Cleanup	Cleanup: finalization and garbage collection	[["cleanup", 0.03374194139614644], ["finalization", 0.016969252802195217], ["garbage collection", 0.04007733371033651], ["programmer", 0.006138828105946074], ["importance", 0.02249462759743096], ["initialization", 0.06748388279229288], ["int", 0.01124731379871548], ["library", 0.007637172233299098], ["object", 0.0196035974284401], ["Java", 0.005220440145723945], ["garbage collector", 0.03374194139614644], ["memory", 0.02249462759743096], ["unusual case", 0.016969252802195217], ["special memory", 0.016969252802195217], ["object s special memory", 0.016969252802195217], ["case", 0.01717352734986856], ["method", 0.00980179871422005], ["class", 0.010114746162118767], ["storage", 0.026718222473557672], ["next garbage-collection pass", 0.016969252802195217], ["object s memory", 0.016969252802195217], ["ability", 0.009748969671362455], ["important cleanup", 0.016969252802195217], ["time", 0.004027030667882717]]
Introduction	Foundations for Java	[["Foundations", 0.024544969927861593], ["Java", 0.005595112883455329], ["bonus", 0.015588978650820488], ["edition", 0.012272484963930796], ["free multimedia seminar", 0.015588978650820488], ["thinking", 0.024544969927861593], ["c seminar", 0.012272484963930796], ["introduction", 0.02066492104644375], ["C syntax", 0.012272484963930796], ["operator", 0.010332460523221875], ["Java syntax", 0.012272484963930796], ["previous edition", 0.015588978650820488], ["book", 0.07895296626211984], ["Java CD", 0.015588978650820488], ["seminar", 0.030997381569665628]]
Introduction	Introduction	[["introduction", 0.02066492104644375], ["man speech", 0.015588978650820488], ["speech create thought", 0.015588978650820488], ["measure", 0.015588978650820488], ["Universe-Prometheus Unbound", 0.015588978650820488], ["human being", 0.015588978650820488], ["mercy", 0.015588978650820488], ["particular language", 0.015588978650820488], ["medium", 0.015588978650820488], ["expression", 0.008955991277041107], ["society", 0.015588978650820488], ["illusion", 0.015588978650820488], ["one", 0.005075942395623266], ["reality", 0.015588978650820488], ["use", 0.007015966836332186], ["language", 0.019898962121338144], ["incidental mean", 0.015588978650820488], ["specific problem", 0.015588978650820488], ["communication", 0.012272484963930796], ["reflection", 0.008955991277041107], ["fact", 0.005075942395623266], ["matter", 0.015588978650820488], ["real world", 0.015588978650820488], ["large extent", 0.015588978650820488], ["language habit", 0.015588978650820488], ["group", 0.007888318782714744]]
Introduction	Errors	[["error", 0.031553275130858975], ["how many tool", 0.015588978650820488], ["writer", 0.015588978650820488], ["page", 0.010332460523221875], ["fresh reader", 0.015588978650820488], ["link", 0.012272484963930796], ["book", 0.07895296626211984], ["suggest correction", 0.015588978650820488], ["help", 0.012272484963930796]]
Introduction	Exercises	[["exercise", 0.024544969927861593], ["simple exercise", 0.015588978650820488], ["student s understanding", 0.015588978650820488], ["seminar", 0.030997381569665628], ["set", 0.004571825095825054], ["end", 0.007015966836332186], ["chapter", 0.006632987373779381]]
Introduction	Goals	[["goal", 0.007015966836332186], ["previous book", 0.015588978650820488], ["C++", 0.007398946298884991], ["book", 0.07895296626211984], ["one thing", 0.010332460523221875], ["mind", 0.008955991277041107], ["people", 0.030997381569665628], ["language", 0.019898962121338144], ["chapter", 0.006632987373779381], ["term", 0.010332460523221875], ["good lesson", 0.015588978650820488], ["seminar", 0.030997381569665628], ["seminar audience feedback", 0.015588978650820488], ["difficult part", 0.015588978650820488], ["illumination", 0.015588978650820488], ["area", 0.015588978650820488], ["too many feature", 0.015588978650820488], ["process", 0.007888318782714744], ["material", 0.024544969927861593], ["lot", 0.007015966836332186], ["new feature", 0.015588978650820488], ["student s confusion", 0.015588978650820488]]
Introduction	Learning Java	[["Java", 0.005595112883455329], ["about same time", 0.015588978650820488], ["first book", 0.015588978650820488], ["C++", 0.007398946298884991], ["Osborne / McGraw-Hill", 0.015588978650820488], ["language", 0.019898962121338144], ["teach programming idea", 0.015588978650820488], ["profession", 0.015588978650820488], ["head", 0.015588978650820488], ["blank face", 0.015588978650820488], ["puzzle expression", 0.015588978650820488], ["audience", 0.031177957301640975], ["world", 0.010332460523221875], ["house", 0.012272484963930796], ["small group", 0.015588978650820488], ["people", 0.030997381569665628], ["exercise", 0.024544969927861593], ["even people", 0.015588978650820488], ["many issue", 0.015588978650820488], ["C++ track", 0.015588978650820488], ["Software Development Conference", 0.015588978650820488], ["number", 0.002961910088068055], ["year", 0.012272484963930796], ["Java track", 0.015588978650820488], ["other speaker", 0.015588978650820488], ["typical audience", 0.015588978650820488], ["too many topic", 0.015588978650820488], ["variety", 0.015588978650820488], ["audience level", 0.015588978650820488], ["way", 0.002961910088068055], ["material", 0.024544969927861593], ["portion", 0.012272484963930796], ["traditional lecturing", 0.015588978650820488], ["most people", 0.012272484963930796], ["boredom", 0.015588978650820488], ["speed", 0.024544969927861593]]
Introduction	Source code	[["source code", 0.024544969927861593], ["book", 0.07895296626211984], ["copyright freeware", 0.015588978650820488], ["single package", 0.015588978650820488], ["web site", 0.015588978650820488], ["most current version", 0.015588978650820488], ["official code distribution site", 0.015588978650820488], ["code", 0.002961910088068055], ["classroom", 0.015588978650820488], ["other educational situation", 0.015588978650820488]]
Introduction	JDK HTML documentation	[["JDK HTML documentation", 0.015588978650820488], ["Java language", 0.012272484963930796], ["library", 0.014031933672664372], ["Sun Microsystems", 0.015588978650820488], ["free download", 0.012272484963930796], ["documentation", 0.049089939855723186], ["electronic form", 0.015588978650820488], ["web browser", 0.024544969927861593], ["many book", 0.015588978650820488], ["Java", 0.005595112883455329], ["book", 0.07895296626211984], ["class description", 0.015588978650820488], ["online documentation", 0.015588978650820488], ["more upto-date", 0.015588978650820488], ["JDK documentation", 0.012272484963930796], ["extra description", 0.015588978650820488], ["class", 0.0023230039032617264], ["particular example", 0.015588978650820488]]
Introduction	Teaching from this book	[["book", 0.07895296626211984], ["original edition", 0.015588978650820488], ["one-week seminar", 0.015588978650820488], ["Java", 0.005595112883455329], ["infancy", 0.015588978650820488], ["language", 0.019898962121338144], ["more and more feature", 0.015588978650820488], ["library", 0.014031933672664372], ["one week", 0.015588978650820488], ["one point", 0.015588978650820488], ["customer", 0.015588978650820488], ["just fundamental", 0.015588978650820488], ["single week", 0.015588978650820488], ["seminarian", 0.015588978650820488], ["simple language", 0.015588978650820488], ["week", 0.012272484963930796]]
Introduction	Prerequisites	[["prerequisite", 0.015588978650820488], ["book", 0.07895296626211984], ["programming familiarity", 0.015588978650820488], ["program", 0.0026318006551161338], ["collection", 0.007888318782714744], ["statement", 0.007888318782714744], ["idea", 0.004571825095825054], ["subroutine / function / macro", 0.015588978650820488], ["control statement", 0.015588978650820488], ["construct", 0.015588978650820488], ["many place", 0.015588978650820488], ["macro language", 0.015588978650820488], ["tool", 0.008955991277041107], ["Perl", 0.012272484963930796], ["point", 0.007015966836332186], ["basic idea", 0.010332460523221875], ["programming", 0.010332460523221875], ["c programmer", 0.015588978650820488], ["C++ programmer", 0.015588978650820488], ["language", 0.019898962121338144], ["thinking", 0.024544969927861593], ["c multimedia seminar", 0.015588978650820488], ["speed", 0.024544969927861593], ["fundamental", 0.015588978650820488], ["Java", 0.005595112883455329], ["concept", 0.007015966836332186], ["object-orient programming", 0.008955991277041107], ["OOP", 0.012272484963930796], ["Java s basic control mechanism", 0.015588978650820488]]
Holding Your Objects	Printing containers	[["printing container", 0.01239105969788182], ["Arrays.toString", 0.015739596802036144], ["printable representation", 0.015739596802036144], ["array", 0.025356258723983935], ["container", 0.03541876977761901], ["help", 0.01239105969788182], ["example", 0.008210303265029292], ["basic Java container", 0.015739596802036144]]
Holding Your Objects	Collection vs. Iterator	[["collection", 0.023893603269382342], ["Iterator", 0.015739596802036144], ["root interface", 0.015739596802036144], ["sequence container", 0.015739596802036144], ["incidental interface", 0.015739596802036144], ["one", 0.010249970634640218], ["commonality", 0.015739596802036144], ["other interface", 0.01239105969788182], ["addition", 0.006339064680995984], ["java.utilabstractcollection class", 0.015739596802036144], ["default implementation", 0.015739596802036144], ["new subtype", 0.015739596802036144], ["AbstractCollection", 0.015739596802036144], ["unnecessary code duplication", 0.015739596802036144]]
Holding Your Objects	Queue	[["queue", 0.04956423879152728], ["first-in first-out fifo container", 0.015739596802036144], ["thing", 0.014167507911047603], ["one end", 0.01239105969788182], ["order", 0.003348537104154325], ["same order", 0.015739596802036144], ["way", 0.008971582730524978], ["object", 0.013637285167610504], ["one area", 0.015739596802036144], ["program", 0.0053144573615388595], ["concurrent programming", 0.010432291059678125], ["Concurrency chapter", 0.015739596802036144], ["one task", 0.01239105969788182]]
Holding Your Objects	Holding Your Objects	[["object", 0.013637285167610504], ["fairly simple program", 0.015739596802036144], ["fix quantity", 0.015739596802036144], ["know lifetime", 0.015739596802036144]]
Holding Your Objects	Set	[["Set", 0.03147919360407229], ["more than one instance", 0.03147919360407229], ["object value", 0.015739596802036144], ["equivalent object", 0.015739596802036144], ["duplication", 0.015739596802036144], ["most common use", 0.015739596802036144], ["set", 0.013847991956919367], ["membership", 0.015739596802036144], ["object", 0.013637285167610504], ["lookup", 0.015739596802036144], ["most important operation", 0.015739596802036144], ["HashSet implementation", 0.015739596802036144], ["rapid lookup", 0.015739596802036144]]
Holding Your Objects	Summary	[["Java", 0.000807024563590175], ["number", 0.017943165461049956], ["way", 0.008971582730524978], ["object", 0.013637285167610504]]
Holding Your Objects	Stack	[["stack", 0.047218790406108435], ["last-in first-out", 0.015739596802036144], ["LIFO container", 0.015739596802036144], ["pushdown stack", 0.015739596802036144], ["first item", 0.015739596802036144], ["often-use analogy", 0.015739596802036144], ["cafeteria tray", 0.015739596802036144], ["spring-load holder", 0.015739596802036144], ["last one", 0.015739596802036144], ["first one", 0.015739596802036144]]
Holding Your Objects	LinkedList	[["LinkedList", 0.03147919360407229], ["basic list interface", 0.015739596802036144], ["ArrayList", 0.07434635818729092], ["certain operation", 0.01239105969788182], ["insertion", 0.03147919360407229], ["removal", 0.02478211939576364], ["middle", 0.03147919360407229], ["List", 0.01239105969788182], ["random-access operation", 0.015739596802036144]]
Holding Your Objects	Map	[["ability", 0.009042522593727493], ["object", 0.013637285167610504], ["other object", 0.010432291059678125], ["immensely powerful way", 0.015739596802036144], ["programming problem", 0.010432291059678125], ["example", 0.008210303265029292], ["program", 0.0053144573615388595], ["randomness", 0.015739596802036144], ["Java s random class", 0.015739596802036144], ["Random", 0.03147919360407229], ["perfect distribution", 0.015739596802036144], ["number", 0.017943165461049956], ["many random number", 0.015739596802036144], ["one", 0.010249970634640218], ["various range", 0.015739596802036144], ["Map", 0.01239105969788182], ["problem", 0.008311123335489], ["case", 0.007964534423127447], ["key", 0.010432291059678125], ["value", 0.005124985317320109], ["time", 0.0037352168513694766]]
Holding Your Objects	Generics and type-safe containers	[["Generics and type-safe container", 0.015739596802036144], ["problem", 0.008311123335489], ["pre-Java SE5 container", 0.015739596802036144], ["compiler", 0.006339064680995984], ["incorrect type", 0.015739596802036144], ["container", 0.03541876977761901], ["example", 0.008210303265029292], ["Apple object", 0.015739596802036144], ["basic workhorse container", 0.015739596802036144], ["ArrayList", 0.07434635818729092], ["array", 0.025356258723983935], ["object", 0.013637285167610504], ["add", 0.015739596802036144], ["index", 0.015739596802036144], ["square brackets.2 ArrayList", 0.015739596802036144], ["method size", 0.015739596802036144], ["how many element", 0.01239105969788182], ["end", 0.0070837539555238015], ["error", 0.007964534423127447], ["runtime exception", 0.015739596802036144], ["exception", 0.018085045187454987], ["chapter", 0.003348537104154325], ["error handling", 0.010432291059678125]]
Holding Your Objects	Iterator	[["iterator", 0.02478211939576364], ["container", 0.03541876977761901], ["way", 0.008971582730524978], ["element", 0.04612486785588098], ["primary job", 0.015739596802036144], ["thing", 0.014167507911047603], ["list", 0.03185813769250979], ["one way", 0.03147919360407229]]
Holding Your Objects	List	[["list", 0.03185813769250979], ["element", 0.04612486785588098], ["particular sequence", 0.015739596802036144], ["list interface", 0.015739596802036144], ["number", 0.017943165461049956], ["method", 0.0030305078150245565], ["Collection", 0.03717317909364546], ["insertion", 0.03147919360407229], ["removal", 0.02478211939576364], ["middle", 0.03147919360407229]]
Holding Your Objects	Adding groups of elements	[["group", 0.015929068846254894], ["element", 0.04612486785588098], ["utility method", 0.015739596802036144], ["both Arrays and Collections class", 0.015739596802036144], ["java.util", 0.009042522593727493], ["Collection", 0.03717317909364546], ["Arrays.asList", 0.015739596802036144], ["either array", 0.03147919360407229], ["comma- separated list", 0.015739596802036144], ["vararg", 0.015739596802036144], ["list object", 0.01239105969788182], ["Collection object", 0.03147919360407229], ["comma-separate list", 0.015739596802036144], ["example", 0.008210303265029292], ["method", 0.0030305078150245565], ["more conventional addall method", 0.015739596802036144], ["part", 0.005124985317320109], ["Collection type", 0.015739596802036144]]
Holding Your Objects	Foreach and iterators	[["foreach", 0.01239105969788182], ["iterator", 0.02478211939576364], ["foreach syntax", 0.01239105969788182], ["array", 0.025356258723983935], ["Collection object", 0.03147919360407229], ["few example", 0.015739596802036144], ["ArrayList", 0.07434635818729092], ["general proof", 0.015739596802036144]]
Holding Your Objects	Basic concepts	[["basic concept", 0.01239105969788182], ["Java container library", 0.01239105969788182], ["idea", 0.004615997318973122], ["object", 0.013637285167610504], ["two distinct concept", 0.015739596802036144], ["basic interface", 0.015739596802036144], ["library", 0.0070837539555238015]]
A: Supplements	Design consulting and reviews	[["design consulting", 0.016969252802195217], ["review", 0.016969252802195217], ["company", 0.033938505604390434], ["consulting", 0.013359111236778836], ["mentoring", 0.016969252802195217], ["design review", 0.016969252802195217], ["implementation review", 0.016969252802195217], ["project", 0.016969252802195217], ["development cycle", 0.016969252802195217], ["company s first Java project", 0.016969252802195217], ["availability", 0.016969252802195217], ["detail", 0.026718222473557672]]
A: Supplements	Thinking in C: Foundations for Java	[["c", 0.013359111236778836], ["Foundations", 0.013359111236778836], ["Java", 0.005220440145723945], ["thinking", 0.026718222473557672], ["c seminar", 0.013359111236778836], ["free download", 0.026718222473557672], ["presentation", 0.016969252802195217], ["Chuck Allison", 0.013359111236778836], ["MindView", 0.033938505604390434], ["multimedia Flash course", 0.016969252802195217], ["introduction", 0.01124731379871548], ["C syntax", 0.013359111236778836], ["operator", 0.01124731379871548], ["function", 0.013359111236778836], ["Java syntax", 0.013359111236778836]]
A: Supplements	Thinking in Objects seminar	[["object seminar", 0.016969252802195217], ["seminar", 0.0562365689935774], ["idea", 0.004976622109517897], ["object-orient programming", 0.009748969671362455], ["standpoint", 0.016969252802195217], ["designer", 0.016969252802195217], ["process", 0.00858676367493428], ["system", 0.006138828105946074], ["socalled Agile Methods", 0.016969252802195217], ["Lightweight Methodologies", 0.016969252802195217], ["especially Extreme Programming", 0.016969252802195217], ["XP", 0.016969252802195217], ["methodology", 0.016969252802195217], ["general small tool", 0.016969252802195217], ["index-card planning technique", 0.016969252802195217], ["Planning Extreme Programming", 0.016969252802195217], ["Beck", 0.016969252802195217], ["Fowler", 0.016969252802195217], ["Addison-Wesley", 0.016969252802195217], ["CRC card", 0.016969252802195217], ["object design", 0.016969252802195217], ["pair programming", 0.016969252802195217], ["iteration planning", 0.016969252802195217], ["unit testing", 0.013359111236778836], ["automate building", 0.016969252802195217], ["source-code control", 0.016969252802195217], ["similar topic", 0.016969252802195217], ["course", 0.013359111236778836], ["XP project", 0.016969252802195217], ["week", 0.013359111236778836]]
A: Supplements	Thinking in Patterns seminar	[["Patterns seminar", 0.016969252802195217], ["seminar", 0.0562365689935774], ["Objects & Patterns seminar", 0.016969252802195217], ["Bill Venners", 0.013359111236778836], ["past several year", 0.016969252802195217], ["two seminar", 0.016969252802195217], ["one", 0.005525374795235742], ["Designing Objects & Systems seminar", 0.016969252802195217], ["appendix", 0.016969252802195217]]
A: Supplements	Hands-On Java seminar-on-CD	[["hand-On Java seminar", 0.016969252802195217], ["cd", 0.033938505604390434], ["Hands-On Java CD", 0.033938505604390434], ["extended version", 0.016969252802195217], ["material", 0.053436444947115344], ["thinking", 0.026718222473557672], ["Java seminar", 0.033938505604390434], ["book", 0.06138828105946074], ["experience", 0.009748969671362455], ["live seminar", 0.016969252802195217], ["travel", 0.016969252802195217], ["expense", 0.016969252802195217], ["audio lecture", 0.016969252802195217], ["slide", 0.016969252802195217], ["chapter", 0.007220283130832763], ["seminar", 0.0562365689935774], ["Flash format", 0.016969252802195217], ["platform", 0.01124731379871548], ["Flash Player", 0.016969252802195217], ["sale", 0.016969252802195217], ["trial demo", 0.016969252802195217], ["product", 0.016969252802195217]]
A: Supplements	A: Supplements	[["a", 0.013359111236778836], ["supplement", 0.033938505604390434], ["number", 0.003224162543782414], ["book", 0.06138828105946074], ["item", 0.013359111236778836], ["seminar", 0.0562365689935774], ["service", 0.013359111236778836], ["MindView web site", 0.016969252802195217]]
A: Supplements	Downloadable supplements	[["downloadable supplement", 0.016969252802195217], ["code", 0.003224162543782414], ["book", 0.06138828105946074], ["download", 0.016969252802195217], ["Ant build file", 0.016969252802195217], ["other support file", 0.016969252802195217], ["successful build", 0.016969252802195217], ["execution", 0.009748969671362455], ["example", 0.004425866603804853]]
A: Supplements	Thinking in Patterns (with Java)	[["Patterns", 0.026718222473557672], ["Java", 0.005220440145723945], ["most important step", 0.016969252802195217], ["object-orient design", 0.016969252802195217], ["design pattern movement", 0.016969252802195217], ["Design Patterns", 0.033938505604390434], ["Gamma", 0.013359111236778836], ["Helm", 0.016969252802195217], ["Johnson", 0.016969252802195217], ["Vlissides", 0.016969252802195217], ["Addison- Wesley", 0.016969252802195217], ["book", 0.06138828105946074], ["23 general class", 0.016969252802195217], ["problem", 0.004480214923037039], ["solution", 0.013359111236778836], ["C++", 0.004027030667882717], ["Design Patterns book", 0.016969252802195217], ["source", 0.01124731379871548], ["essential almost mandatory vocabulary", 0.016969252802195217], ["OOP programmer", 0.016969252802195217], ["basic concept", 0.013359111236778836], ["design pattern", 0.016969252802195217], ["example", 0.004425866603804853], ["simple translation", 0.016969252802195217], ["new perspective", 0.016969252802195217], ["Java mindset", 0.016969252802195217], ["traditional 23 pattern", 0.016969252802195217], ["other idea", 0.016969252802195217], ["technique", 0.013359111236778836]]
A: Supplements	Thinking in Enterprise Java	[["Enterprise Java", 0.013359111236778836], ["book", 0.06138828105946074], ["more advanced chapter", 0.016969252802195217], ["early edition", 0.016969252802195217], ["Java", 0.005220440145723945], ["second volume", 0.016969252802195217], ["coverage", 0.016969252802195217], ["more advanced topic", 0.016969252802195217], ["enterprise programming", 0.016969252802195217], ["form", 0.004976622109517897], ["development", 0.016969252802195217], ["free download", 0.026718222473557672], ["separate book", 0.016969252802195217], ["necessary topic", 0.016969252802195217], ["goal", 0.007637172233299098], ["very understandable introduction", 0.016969252802195217], ["basic", 0.016969252802195217], ["enterprise programming technology", 0.016969252802195217], ["reader", 0.013359111236778836], ["more advanced coverage", 0.016969252802195217], ["topic", 0.016969252802195217]]
A: Supplements	Thinking in Java seminar	[["Java seminar", 0.033938505604390434], ["company", 0.033938505604390434], ["MindView", 0.033938505604390434], ["Inc.", 0.016969252802195217], ["house", 0.013359111236778836], ["material", 0.053436444947115344], ["book", 0.06138828105946074], ["Hands-On Java seminar", 0.016969252802195217], ["main introductory seminar", 0.016969252802195217], ["foundation", 0.013359111236778836], ["more advanced seminar", 0.016969252802195217], ["select material", 0.016969252802195217], ["chapter", 0.007220283130832763], ["lesson", 0.016969252802195217], ["monitor exercise period", 0.016969252802195217], ["student", 0.016969252802195217], ["personal attention", 0.016969252802195217], ["schedule", 0.016969252802195217], ["location", 0.016969252802195217], ["information", 0.006834304109198795], ["testimonial", 0.016969252802195217], ["detail", 0.026718222473557672]]
Containers in Depth	Optional operations	[["optional operation", 0.028087039120874846], ["method", 0.0040559167093324345], ["various kind", 0.014043519560437423], ["addition", 0.011311951629018695], ["removal", 0.0110558161959549], ["Collection interface", 0.014043519560437423], ["implement class", 0.014043519560437423], ["functioning definition", 0.014043519560437423]]
Containers in Depth	Collection functionality	[["collection functionality", 0.014043519560437423], ["follow table", 0.014043519560437423], ["Collection", 0.0221116323919098], ["method", 0.0040559167093324345], ["Object", 0.00930812176445419], ["thus", 0.014043519560437423], ["set", 0.024711502888640595], ["list", 0.021318861537767866], ["additional functionality", 0.014043519560437423], ["map", 0.07021759780218711]]
Containers in Depth	Hashing and hash codes	[["hashing", 0.014043519560437423], ["hash code", 0.014043519560437423], ["example", 0.010988358464618946], ["object", 0.012167750127997303], ["predefined class", 0.028087039120874846], ["HashMap key", 0.014043519560437423], ["necessary wiring", 0.028087039120874846], ["key", 0.03723248705781676], ["common pitfall", 0.0110558161959549], ["own class", 0.014043519560437423], ["HashMaps", 0.014043519560437423], ["weather", 0.014043519560437423], ["system", 0.005080409466989854], ["Groundhog object", 0.014043519560437423], ["prediction object", 0.014043519560437423], ["two class", 0.014043519560437423], ["Groundhog", 0.014043519560437423], ["prediction", 0.014043519560437423], ["value", 0.00914544793694192]]
Containers in Depth	Utilities	[["utility", 0.00930812176445419], ["number", 0.005336544900053651], ["standalone utility", 0.014043519560437423], ["container", 0.050563347199773345], ["static method", 0.00930812176445419], ["java.util", 0.008068112831472376], ["collection class", 0.014043519560437423], ["addAll", 0.014043519560437423], ["binarysearch", 0.014043519560437423], ["other", 0.0110558161959549], ["synchronized and unmodifiable utility", 0.014043519560437423], ["section", 0.005080409466989854], ["table", 0.014043519560437423], ["generic", 0.008068112831472376]]
Containers in Depth	Summary	[["container library", 0.014043519560437423], ["most important library", 0.014043519560437423], ["objectoriented language", 0.014043519560437423], ["Most programming", 0.014043519560437423], ["container", 0.050563347199773345], ["other library component", 0.014043519560437423], ["language", 0.0029877033644825227], ["Python", 0.0110558161959549], ["example", 0.010988358464618946], ["fundamental container component", 0.014043519560437423], ["list", 0.021318861537767866], ["map", 0.07021759780218711], ["set", 0.024711502888640595], ["build-in", 0.014043519560437423]]
Containers in Depth	Sets and storage order	[["set and storage order", 0.014043519560437423], ["set example", 0.014043519560437423], ["object", 0.012167750127997303], ["good introduction", 0.014043519560437423], ["operation", 0.008068112831472376], ["basic set", 0.014043519560437423], ["example", 0.010988358464618946], ["predefined Java type", 0.014043519560437423], ["Integer", 0.0110558161959549], ["String", 0.00930812176445419], ["container", 0.050563347199773345], ["own type", 0.0110558161959549], ["set", 0.024711502888640595], ["way", 0.0026682724500268254], ["storage order", 0.028087039120874846], ["one implementation", 0.0110558161959549], ["different set implementation", 0.014043519560437423], ["different behavior", 0.0110558161959549], ["different requirement", 0.014043519560437423], ["type", 0.0029877033644825227], ["particular set", 0.014043519560437423]]
Containers in Depth	Containers in Depth	[["container", 0.050563347199773345], ["depth", 0.014043519560437423], ["object", 0.012167750127997303], ["idea", 0.004118583814773432], ["basic functionality", 0.014043519560437423], ["Java container library", 0.0221116323919098], ["chapter", 0.0029877033644825227], ["important library", 0.014043519560437423]]
Containers in Depth	Filling containers	[["container", 0.050563347199773345], ["problem", 0.00370776407423755], ["printing container", 0.0110558161959549], ["same deficiency", 0.014043519560437423], ["java.utiLArrays", 0.014043519560437423], ["Arrays", 0.0110558161959549], ["companion class", 0.014043519560437423], ["collection", 0.007106287179255955], ["static utility method", 0.0110558161959549], ["fill", 0.028087039120874846], ["Arrays version", 0.014043519560437423], ["single object reference", 0.014043519560437423], ["addition", 0.011311951629018695], ["list object", 0.0110558161959549], ["result list", 0.014043519560437423], ["constructor", 0.007106287179255955], ["addall method", 0.014043519560437423]]
Containers in Depth	Understanding Maps	[["understand Maps", 0.014043519560437423], ["object", 0.012167750127997303], ["basic idea", 0.00930812176445419], ["map", 0.07021759780218711], ["associative array", 0.014043519560437423], ["key-value association", 0.014043519560437423], ["pair", 0.028087039120874846], ["value", 0.00914544793694192], ["key", 0.03723248705781676], ["standard Java library", 0.014043519560437423], ["different basic implementation", 0.014043519560437423], ["Maps", 0.014043519560437423], ["HashMap", 0.014043519560437423], ["TreeMap", 0.014043519560437423], ["LinkedHashMap", 0.014043519560437423], ["WeakHashMap", 0.014043519560437423], ["ConcurrentHashMap", 0.014043519560437423], ["same basic Map interface", 0.014043519560437423], ["behavior", 0.011311951629018695], ["efficiency", 0.0110558161959549], ["order", 0.0029877033644825227], ["multithreaded program", 0.014043519560437423], ["key equality", 0.014043519560437423], ["number", 0.005336544900053651], ["implementation", 0.01696792744352804], ["Map interface", 0.014043519560437423], ["importance", 0.00930812176445419], ["tool", 0.008068112831472376]]
Containers in Depth	List functionality	[["list functionality", 0.014043519560437423], ["basic list", 0.014043519560437423], ["time", 0.00666543007097829], ["object", 0.012167750127997303], ["iterator", 0.0221116323919098], ["sequence", 0.007106287179255955]]
Containers in Depth	Full container taxonomy	[["full container taxonomy", 0.014043519560437423], ["Summary section", 0.014043519560437423], ["object", 0.012167750127997303], ["simplified diagram", 0.014043519560437423], ["Java container library", 0.0221116323919098], ["more complete diagram", 0.014043519560437423], ["collection library", 0.014043519560437423], ["abstract class", 0.0110558161959549], ["legacy component", 0.014043519560437423], ["exception", 0.008068112831472376], ["queue implementation", 0.028087039120874846]]
Containers in Depth	Queues	[["queue", 0.0331674485878647], ["concurrency application", 0.014043519560437423], ["only two Java SE5 implementation", 0.014043519560437423], ["behavior", 0.011311951629018695], ["performance", 0.00930812176445419], ["basic example", 0.014043519560437423], ["queue implementation", 0.028087039120874846], ["example", 0.010988358464618946], ["concurrency-base queue", 0.014043519560437423], ["element", 0.00457272396847096], ["one end", 0.0110558161959549]]
Containers in Depth	Holding references	[["reference", 0.005080409466989854], ["java.lang.ref library", 0.014043519560437423], ["set", 0.024711502888640595], ["class", 0.006278118307521993], ["great flexibility", 0.0110558161959549], ["garbage collection", 0.0110558161959549], ["large object", 0.014043519560437423], ["memory exhaustion", 0.014043519560437423], ["three class", 0.014043519560437423], ["abstract class reference", 0.014043519560437423], ["SoftReference", 0.014043519560437423], ["WeakReference", 0.014043519560437423], ["PhantomReference", 0.014043519560437423], ["different level", 0.014043519560437423], ["indirection", 0.014043519560437423], ["garbage collector", 0.00930812176445419], ["object", 0.012167750127997303], ["question", 0.008068112831472376], ["Reference object", 0.014043519560437423]]
Containers in Depth	Java 1.01.1 containers	[["Java 1.01.1 container", 0.014043519560437423], ["lot", 0.006320418399971668], ["code", 0.0026682724500268254], ["Java 1.0/1.1 container", 0.014043519560437423], ["even new code", 0.014043519560437423], ["class", 0.006278118307521993], ["old container", 0.028087039120874846], ["new code", 0.014043519560437423], ["hideous design decision", 0.014043519560437423]]
Containers in Depth	Choosing an implementation	[["implementation", 0.01696792744352804], ["only four fundamental container type", 0.014043519560437423], ["Map", 0.0110558161959549], ["List", 0.0110558161959549], ["set", 0.024711502888640595], ["queue", 0.0331674485878647], ["more than one implementation", 0.014043519560437423], ["interface", 0.003332715035489145], ["functionality", 0.0110558161959549], ["particular interface", 0.014043519560437423]]
Graphical User Interfaces	Concurrency & Swing	[["concurrency", 0.010218921742874648], ["swing", 0.03894139288471891], ["thread", 0.010218921742874648], ["beginning", 0.007457379190842993], ["chapter", 0.005523085104063309], ["swing event dispatch thread", 0.025960928589812606], ["SwingUtilities.invokeLater", 0.012980464294906303], ["fact", 0.004226581516674353], ["thread object", 0.012980464294906303], ["thread issue", 0.012980464294906303], ["surprise", 0.012980464294906303], ["mind", 0.007457379190842993], ["swing event", 0.012980464294906303], ["one", 0.004226581516674353], ["event queue", 0.012980464294906303], ["turn", 0.008603522905790327], ["event dispatch thread", 0.012980464294906303], ["application", 0.03441409162316131], ["deadlocking or race condition", 0.012980464294906303]]
Graphical User Interfaces	The Swing event model	[["swing event model", 0.025960928589812606], ["component", 0.0946387519636936], ["fire", 0.012980464294906303], ["event", 0.12980464294906302], ["type", 0.0027615425520316544], ["distinct class", 0.012980464294906303], ["one or more listener", 0.012980464294906303], ["source", 0.008603522905790327], ["place", 0.014914758381685987], ["swing component", 0.05192185717962521], ["custom code", 0.012980464294906303], ["excellent example", 0.012980464294906303], ["separation", 0.012980464294906303], ["interface", 0.0030804378017270186], ["implementation", 0.00522783421898872]]
Graphical User Interfaces	Building Flash Web clients with Flex	[["Flash web client", 0.012980464294906303], ["Flex", 0.012980464294906303], ["lightweight Macromedia Flash virtual machine", 0.012980464294906303], ["most people", 0.010218921742874648], ["Flash-base interface", 0.012980464294906303], ["system", 0.004695836638811339], ["platform", 0.017207045811580654]]
Graphical User Interfaces	Alternatives to Swing	[["alternative", 0.012980464294906303], ["swing library", 0.012980464294906303], ["GUI", 0.025960928589812606], ["Sun", 0.010218921742874648], ["mean", 0.012980464294906303], ["only way", 0.010218921742874648], ["graphical user interface", 0.012980464294906303], ["two important alternative", 0.012980464294906303], ["Macromedia Flash", 0.012980464294906303], ["Macromedia s Flex programming system", 0.012980464294906303], ["client-side gui", 0.012980464294906303], ["web", 0.012980464294906303], ["open- source", 0.012980464294906303], ["Eclipse Standard Widget Toolkit", 0.012980464294906303], ["SWT library", 0.012980464294906303], ["desktop application", 0.012980464294906303]]
Graphical User Interfaces	Visual programming and JavaBeans	[["visual programming", 0.012980464294906303], ["JavaBeans", 0.025960928589812606], ["book", 0.004695836638811339], ["Java", 0.0026622164886560356], ["reusable piece", 0.012980464294906303], ["code", 0.014797750001742395], ["most reusable unit", 0.012980464294906303], ["class", 0.0019342940867796846], ["cohesive unit", 0.012980464294906303], ["characteristic", 0.008603522905790327], ["field", 0.008603522905790327], ["behavior", 0.00522783421898872], ["method", 0.001249631708585823], ["composition", 0.010218921742874648], ["inheritance", 0.00522783421898872]]
Graphical User Interfaces	Text areas	[["text area", 0.012980464294906303], ["JTextArea", 0.025960928589812606], ["jtextfield", 0.012980464294906303], ["multiple line", 0.012980464294906303], ["more functionality", 0.012980464294906303], ["particularly useful method", 0.012980464294906303], ["output", 0.014914758381685987], ["improvement", 0.010218921742874648], ["command-line program", 0.012980464294906303], ["standard output", 0.010218921742874648], ["example", 0.003385523457890565], ["follow program", 0.012980464294906303], ["jtextarea", 0.012980464294906303], ["Countries generator", 0.012980464294906303], ["Containers", 0.007457379190842993], ["depth chapter", 0.007457379190842993]]
Graphical User Interfaces	Summary	[["Java GUI library", 0.012980464294906303], ["dramatic change", 0.012980464294906303], ["lifetime", 0.007457379190842993], ["language", 0.008284627656094964], ["Java 1.0 AWT", 0.012980464294906303], ["poor design", 0.012980464294906303], ["portable program", 0.012980464294906303], ["result GUI", 0.012980464294906303], ["platform", 0.017207045811580654], ["native application development tool", 0.012980464294906303], ["various platform", 0.012980464294906303]]
Graphical User Interfaces	Graphical User Interfaces	[["graphical User interface", 0.012980464294906303], ["Interfaces", 0.012980464294906303], ["fundamental design guideline", 0.012980464294906303], ["simple thing", 0.012980464294906303], ["difficult thing", 0.012980464294906303]]
Graphical User Interfaces	Creating SWT applications	[["SWT application", 0.012980464294906303], ["Swing", 0.012980464294906303], ["approach", 0.010218921742874648], ["UI component pixel-by- pixel", 0.012980464294906303], ["order", 0.005523085104063309], ["component", 0.0946387519636936], ["underlie OS", 0.012980464294906303], ["SWT", 0.025960928589812606], ["middle ground", 0.012980464294906303], ["native component", 0.012980464294906303], ["OS", 0.012980464294906303], ["result", 0.00522783421898872], ["application", 0.03441409162316131], ["user", 0.006568361058117058], ["native application", 0.012980464294906303], ["noticeably fast performance", 0.012980464294906303], ["equivalent swing program", 0.012980464294906303], ["addition", 0.01045566843797744], ["less complex programming 12 model", 0.012980464294906303], ["swing", 0.03894139288471891], ["large portion", 0.012980464294906303]]
Graphical User Interfaces	A selection of Swing components	[["selection", 0.010218921742874648], ["swing component", 0.05192185717962521], ["layout manager", 0.03894139288471891], ["event model", 0.012980464294906303], ["section", 0.004695836638811339], ["non-exhaustive tour", 0.012980464294906303], ["time", 0.0030804378017270186], ["example", 0.003385523457890565], ["code", 0.014797750001742395], ["own program", 0.012980464294906303]]
Graphical User Interfaces	Applets	[["applet", 0.06490232147453151], ["Java", 0.0026622164886560356], ["brouhaha", 0.012980464294906303], ["language", 0.008284627656094964], ["program", 0.0021914196690010833], ["internet", 0.017207045811580654], ["so-call sandbox", 0.012980464294906303], ["security", 0.012980464294906303], ["web browser", 0.030656765228623945], ["People", 0.012980464294906303], ["Java applet", 0.012980464294906303], ["next stage", 0.012980464294906303], ["evolution", 0.010218921742874648], ["original book", 0.012980464294906303], ["reason", 0.007457379190842993]]
Graphical User Interfaces	JNLP and Java Web Start	[["JNLP and Java web Start", 0.012980464294906303], ["applet", 0.06490232147453151], ["security purpose", 0.012980464294906303], ["online supplement", 0.012980464294906303], ["chapter", 0.005523085104063309], ["sign applet", 0.012980464294906303], ["place", 0.014914758381685987], ["application", 0.03441409162316131], ["web browser", 0.030656765228623945], ["extra overhead", 0.012980464294906303], ["browser", 0.012980464294906303], ["client machine", 0.012980464294906303], ["user interface", 0.012980464294906303], ["own set", 0.012980464294906303], ["menu", 0.012980464294906303], ["toolbar", 0.012980464294906303]]
Graphical User Interfaces	Controlling layout	[["control layout", 0.012980464294906303], ["way", 0.0049325833339141315], ["component", 0.0946387519636936], ["form", 0.007613637012170807], ["Java", 0.0026622164886560356], ["other GUI system", 0.012980464294906303], ["code", 0.014797750001742395], ["resource", 0.008603522905790327], ["absolute positioning", 0.012980464294906303], ["layout manager", 0.03894139288471891], ["order", 0.005523085104063309], ["size", 0.020437843485749296], ["shape", 0.020437843485749296], ["placement", 0.025960928589812606], ["one layout manager", 0.012980464294906303], ["addition", 0.01045566843797744], ["dimension", 0.012980464294906303], ["applet or application window", 0.012980464294906303], ["window dimension", 0.012980464294906303], ["response", 0.010218921742874648]]
Graphical User Interfaces	Capturing an event	[["event", 0.12980464294906302], ["precede program", 0.012980464294906303], ["button", 0.06490232147453151], ["code", 0.014797750001742395], ["basis", 0.012980464294906303], ["event-drive programming", 0.012980464294906303], ["lot", 0.005841980353758673], ["GUI", 0.025960928589812606]]
Graphical User Interfaces	Making a button	[["button", 0.06490232147453151], ["jbutton constructor", 0.012980464294906303], ["label", 0.012980464294906303], ["fancy thing", 0.012980464294906303], ["graphic image", 0.012980464294906303]]
Graphical User Interfaces	Swing basics	[["swing basic", 0.012980464294906303], ["Most swing application", 0.012980464294906303], ["basic JFrame", 0.012980464294906303], ["window", 0.025960928589812606], ["operating system", 0.012980464294906303], ["title", 0.012980464294906303], ["JFrame constructor", 0.012980464294906303]]
Strings	Overloading ‘+’ vs. StringBuilder	[["+", 0.023971489322070435], ["StringBuilder", 0.060899000710681904], ["string object", 0.060899000710681904], ["particular String", 0.030449500355340952], ["string", 0.10091047894174636], ["possibility", 0.023971489322070435], ["one reference", 0.030449500355340952], ["other reference", 0.030449500355340952]]
Strings	StringTokenizer	[["StringTokenizer", 0.09134850106602287], ["regular expression", 0.15224750177670476], ["J2SE1.4", 0.030449500355340952], ["scanner class", 0.060899000710681904], ["Java SE5", 0.016078528321927316], ["way", 0.005785413162674986], ["string", 0.10091047894174636], ["part", 0.009914691221357593], ["same thing", 0.030449500355340952], ["simple comparison", 0.030449500355340952], ["other two technique", 0.030449500355340952]]
Strings	Summary	[["past", 0.023971489322070435], ["Java support", 0.030449500355340952], ["string manipulation", 0.060899000710681904], ["recent edition", 0.030449500355340952], ["language", 0.012956022066541032], ["far more sophisticated support", 0.030449500355340952], ["other language", 0.017493478288799918], ["point", 0.013704084755078755], ["support", 0.023971489322070435], ["string", 0.10091047894174636], ["attention", 0.030449500355340952], ["efficiency detail", 0.030449500355340952], ["appropriate use", 0.030449500355340952], ["StringBuilder", 0.060899000710681904]]
Strings	Strings	[["string", 0.10091047894174636], ["string manipulation", 0.060899000710681904], ["most common activity", 0.030449500355340952], ["computer programming", 0.023971489322070435]]
Strings	Unintended recursion	[["unintende recursion", 0.030449500355340952], ["other class", 0.023971489322070435], ["Java standard container", 0.030449500355340952], ["Object", 0.020182095788349272], ["tostring method", 0.030449500355340952], ["string representation", 0.023971489322070435], ["object", 0.005862758109440029], ["arraylist.tostring", 0.030449500355340952], ["example", 0.003970870971637999], ["element", 0.009914691221357593], ["Array List", 0.030449500355340952], ["one", 0.009914691221357593]]
Strings	Formatting output	[["format output", 0.030449500355340952], ["long-await feature", 0.030449500355340952], ["Java SE5", 0.016078528321927316], ["output", 0.034986956577599836], ["style", 0.023971489322070435], ["C s printf", 0.030449500355340952], ["statement", 0.015408024538199828], ["simplified output code", 0.030449500355340952], ["Java developer", 0.030449500355340952], ["powerful control", 0.030449500355340952], ["alignment.2", 0.030449500355340952]]
Strings	Regular expressions	[["regular expression", 0.15224750177670476], ["standard Unix utility", 0.030449500355340952], ["language", 0.012956022066541032], ["Python", 0.023971489322070435], ["Perl", 0.023971489322070435], ["predominant reason", 0.030449500355340952], ["Perl s success", 0.030449500355340952], ["stre manipulation tool", 0.030449500355340952], ["String", 0.020182095788349272], ["StringBuffer", 0.030449500355340952], ["StringTokenizer class", 0.030449500355340952], ["Java", 0.0015612531276931424], ["relatively simple facility", 0.030449500355340952]]
Strings	Scanning input	[["input", 0.023971489322070435], ["datum", 0.02740816951015751], ["human-readable file", 0.030449500355340952], ["standard input", 0.023971489322070435], ["usual solution", 0.030449500355340952], ["line", 0.017493478288799918], ["text", 0.030449500355340952], ["various parse method", 0.030449500355340952], ["Integer", 0.023971489322070435]]
Strings	Immutable Strings	[["Immutable string", 0.030449500355340952], ["object", 0.005862758109440029], ["String class", 0.030449500355340952], ["JDK documentation", 0.023971489322070435], ["string class", 0.030449500355340952], ["method", 0.005862758109440029], ["class", 0.004537456222258886], ["string", 0.10091047894174636], ["brand new string object", 0.030449500355340952], ["modification", 0.030449500355340952], ["original string", 0.030449500355340952]]
Strings	Operations on Strings	[["operation", 0.017493478288799918], ["Strings", 0.023971489322070435], ["basic method", 0.030449500355340952], ["string object", 0.060899000710681904], ["method", 0.005862758109440029], ["single row", 0.030449500355340952]]
Enumerated Types	Random selection	[["random selection", 0.03766585593088419], ["example", 0.009823888877809616], ["chapter", 0.012019893304507721], ["enum instance", 0.03766585593088419], ["CartoonCharacter.next", 0.018832927965442094], ["task", 0.010819665762436944], ["generic", 0.03245899728731083], ["result", 0.007584892421769761], ["common library", 0.018832927965442094]]
Enumerated Types	Basic enum features	[["basic enum", 0.018832927965442094], ["Initialization", 0.029652593727879036], ["Cleanup", 0.029652593727879036], ["list", 0.009529818645013767], ["enum constant", 0.03766585593088419], ["value", 0.030661039326163656], ["enum", 0.24965135830674823], ["method", 0.010878296838903175], ["array", 0.015169784843539522], ["order", 0.008013262203005148], ["result array", 0.018832927965442094], ["example", 0.009823888877809616], ["foreach loop", 0.018832927965442094]]
Enumerated Types	Implements, not inherits	[["implement", 0.018832927965442094], ["enum", 0.24965135830674823], ["java.lang", 0.018832927965442094], ["Enum", 0.03766585593088419], ["Java", 0.001931261094371864], ["multiple inheritance", 0.01248256791533741], ["inheritance", 0.007584892421769761]]
Enumerated Types	Summary	[["enumerate type", 0.014826296863939518], ["chapter", 0.012019893304507721], ["book", 0.0068130346609343705], ["enum", 0.24965135830674823], ["combination", 0.014826296863939518], ["feature", 0.01248256791533741], ["polymorphism", 0.009529818645013767], ["generic", 0.03245899728731083], ["reflection", 0.02163933152487389]]
Enumerated Types	enums in switch statements	[["enum", 0.24965135830674823], ["switch statement", 0.03744770374601223], ["one very convenient capability", 0.018832927965442094], ["way", 0.003578261320267188], ["switch", 0.014826296863939518], ["integral value", 0.014826296863939518], ["establish integral order", 0.018832927965442094], ["order", 0.008013262203005148], ["instance", 0.029652593727879036], ["ordinal method", 0.018832927965442094], ["compiler", 0.015169784843539522]]
Enumerated Types	Using EnumSet instead of flags	[["EnumSet", 0.03766585593088419], ["flag", 0.014826296863939518], ["set", 0.011046375087022385], ["kind", 0.016951873627669676], ["collection", 0.009529818645013767], ["type", 0.004006631101502574], ["object", 0.0018130494731505293], ["enum", 0.24965135830674823], ["member", 0.010819665762436944], ["behavior", 0.007584892421769761], ["element", 0.012264415730465463], ["Java SE5", 0.004972261648688506], ["concert", 0.018832927965442094], ["replacement", 0.018832927965442094], ["traditional int-base bit flag", 0.018832927965442094], ["such flag", 0.018832927965442094], ["on-off information", 0.018832927965442094], ["bit", 0.01248256791533741], ["concept", 0.008475936813834838], ["confusing code", 0.018832927965442094]]
Enumerated Types	The mystery of values()	[["mystery", 0.014826296863939518], ["value", 0.030661039326163656], ["enum class", 0.018832927965442094], ["compiler", 0.015169784843539522], ["Enum class", 0.018832927965442094], ["Enum", 0.03766585593088419], ["method", 0.010878296838903175], ["other hidden method", 0.018832927965442094], ["small reflection program", 0.018832927965442094]]
Enumerated Types	Adding methods to an enum	[["method", 0.010878296838903175], ["enum", 0.24965135830674823], ["fact", 0.006132207865232732], ["regular class", 0.018832927965442094]]
Enumerated Types	Multiple dispatching	[["multiple dispatching", 0.018832927965442094], ["multiple interact type", 0.018832927965442094], ["program", 0.0031794585949090864], ["example", 0.009823888877809616], ["system", 0.0068130346609343705], ["mathematical expression", 0.018832927965442094], ["Number.plusNumber", 0.018832927965442094], ["number", 0.007156522640534376], ["base class", 0.007584892421769761], ["family", 0.018832927965442094], ["numerical object", 0.018832927965442094], ["a.plusb", 0.018832927965442094], ["exact type", 0.014826296863939518]]
Enumerated Types	Enumerated Types	[["Enumerated type", 0.018832927965442094], ["enum keyword", 0.014826296863939518], ["new type", 0.008475936813834838], ["restricted set", 0.018832927965442094], ["name value", 0.018832927965442094], ["value", 0.030661039326163656], ["regular program component", 0.018832927965442094], ["very useful.1", 0.018832927965442094], ["Enumerations", 0.018832927965442094], ["end", 0.008475936813834838], ["Initialization", 0.029652593727879036], ["Cleanup", 0.029652593727879036], ["deep issue", 0.018832927965442094], ["Java", 0.001931261094371864], ["more detailed look", 0.018832927965442094], ["Java SE5 enumeration feature", 0.018832927965442094], ["very interesting thing", 0.018832927965442094], ["enum", 0.24965135830674823], ["chapter", 0.012019893304507721], ["more insight", 0.018832927965442094], ["generic", 0.03245899728731083], ["reflection", 0.02163933152487389], ["few more design pattern", 0.018832927965442094]]
Enumerated Types	Constant-specific methods	[["constant-specific method", 0.018832927965442094], ["Java enum", 0.018832927965442094], ["very interesting feature", 0.018832927965442094], ["enum", 0.24965135830674823], ["instance", 0.029652593727879036], ["different behavior", 0.014826296863939518], ["method", 0.010878296838903175], ["one", 0.006132207865232732], ["one or more abstract method", 0.018832927965442094], ["part", 0.006132207865232732], ["enum instance", 0.03766585593088419], ["example", 0.009823888877809616]]
Enumerated Types	Using interfaces for organization	[["interface", 0.004469305712332264], ["organization", 0.014826296863939518], ["inability", 0.018832927965442094], ["enum", 0.24965135830674823], ["time", 0.004469305712332264], ["motivation", 0.018832927965442094], ["number", 0.007156522640534376], ["element", 0.012264415730465463], ["original enum", 0.018832927965442094], ["subcategorie", 0.018832927965442094], ["subtype", 0.018832927965442094]]
Enumerated Types	Using EnumMap	[["EnumMap", 0.056498783896326274], ["specialized Map", 0.018832927965442094], ["key", 0.01248256791533741], ["single enum", 0.018832927965442094], ["constraint", 0.01248256791533741], ["enum", 0.24965135830674823], ["array", 0.015169784843539522], ["EnumMaps", 0.018832927965442094], ["enum-base lookup", 0.018832927965442094]]
IO	File reading & writing utilities	[["reading", 0.035159315158505206], ["utility", 0.007767928954508533], ["very common programming task", 0.011719771719501735], ["file", 0.09226436537631427], ["memory", 0.015535857909017067], ["problem", 0.003094249155478819], ["Java I", 0.02343954343900347], ["o library", 0.02343954343900347], ["bit", 0.007767928954508533], ["code", 0.00445351948493686], ["order", 0.0049866703637406135], ["common operation", 0.011719771719501735], ["basic helper function", 0.011719771719501735], ["decorator", 0.05859885859750867], ["sense", 0.021098375090552908], ["helper class", 0.011719771719501735], ["library", 0.010549187545276454], ["basic task", 0.011719771719501735], ["Java SE5", 0.003094249155478819], ["convenience constructor", 0.011719771719501735], ["PrintWriter", 0.011719771719501735], ["text file", 0.011719771719501735], ["writing", 0.009226436537631428], ["many other common task", 0.011719771719501735], ["redundant code", 0.011719771719501735], ["task", 0.00673310135576112]]
IO	Process control	[["process control", 0.011719771719501735], ["other operate system program", 0.011719771719501735], ["Java", 0.0012018279472170233], ["input", 0.018452873075262857], ["output", 0.02019930406728336], ["such program", 0.011719771719501735], ["Java library", 0.011719771719501735], ["class", 0.008732154960102533], ["such operation", 0.011719771719501735]]
IO	Off by itself: RandomAccessFile	[["RandomAccessFile", 0.02343954343900347], ["file", 0.09226436537631427], ["record", 0.035159315158505206], ["known size", 0.011719771719501735], ["one record", 0.011719771719501735], ["seek", 0.011719771719501735], ["same size", 0.011719771719501735]]
IO	New IO	[["New IO", 0.011719771719501735], ["Java new / o library", 0.011719771719501735], ["JDK", 0.007767928954508533], ["* package", 0.011719771719501735], ["one goal", 0.011719771719501735], ["speed", 0.009226436537631428], ["fact", 0.007632172379030667], ["order", 0.0049866703637406135], ["advantage", 0.011719771719501735], ["speed increase", 0.02343954343900347], ["code", 0.00445351948493686], ["nio", 0.011719771719501735], ["file", 0.09226436537631427], ["network", 0.011719771719501735], ["Enterprise Java", 0.009226436537631428]]
IO	Readers & Writers	[["Readers", 0.011719771719501735], ["Writers", 0.011719771719501735], ["Java", 0.0012018279472170233], ["significant modification", 0.011719771719501735], ["fundamental / o stream library", 0.011719771719501735], ["Reader and Writer class", 0.02343954343900347], ["first thought", 0.011719771719501735], ["InputStream and OutputStream class", 0.02343954343900347], ["case", 0.005930426710745978], ["aspect", 0.011719771719501735], ["original stream library", 0.011719771719501735], ["warning", 0.011719771719501735], ["compiler", 0.004720094924338737], ["valuable functionality", 0.011719771719501735], ["form", 0.006874183057751341], ["byte-orient i", 0.011719771719501735], ["unicode-compliant character-base I", 0.011719771719501735], ["addition", 0.004720094924338737]]
IO	Standard IO	[["Standard IO", 0.011719771719501735], ["term standard / O", 0.011719771719501735], ["Unix concept", 0.011719771719501735], ["single stream", 0.011719771719501735], ["information", 0.018880379697354947], ["program", 0.013850087620269437], ["idea", 0.0034370915288756704], ["form", 0.006874183057751341], ["Windows", 0.011719771719501735], ["many other operating system", 0.011719771719501735], ["program s input", 0.011719771719501735], ["standard input", 0.018452873075262857], ["output", 0.02019930406728336], ["standard output", 0.009226436537631428], ["error message", 0.011719771719501735], ["standard error", 0.011719771719501735], ["standard", 0.011719771719501735], ["one program s standard output", 0.011719771719501735], ["powerful tool", 0.011719771719501735]]
IO	Summary	[["I", 0.02343954343900347], ["o stream library", 0.011719771719501735], ["basic requirement", 0.011719771719501735], ["reading", 0.035159315158505206], ["console", 0.011719771719501735], ["file", 0.09226436537631427], ["block", 0.011719771719501735], ["memory", 0.015535857909017067], ["internet", 0.007767928954508533], ["inheritance", 0.004720094924338737], ["new type", 0.005274593772638227], ["input and output object", 0.011719771719501735], ["simple extensibility", 0.011719771719501735], ["kind", 0.005274593772638227], ["object", 0.009026116801583932], ["stream", 0.05859885859750867], ["tostring", 0.009226436537631428], ["method", 0.003384793800593974], ["String", 0.015535857909017067], ["Java s limited automatic type conversion", 0.011719771719501735]]
IO	Adding attributes and useful interfaces	[["attribute", 0.011719771719501735], ["useful interface", 0.02343954343900347], ["decorator", 0.05859885859750867], ["Generics chapter", 0.011719771719501735], ["page", 0.007767928954508533], ["Java I / o library", 0.011719771719501735], ["many different combination", 0.011719771719501735], ["feature", 0.007767928954508533], ["justification", 0.011719771719501735], ["1 decorator design pattern", 0.011719771719501735], ["reason", 0.00673310135576112], ["existence", 0.011719771719501735], ["filter class", 0.02343954343900347], ["Java I", 0.02343954343900347], ["o library", 0.02343954343900347], ["abstract filter class", 0.011719771719501735], ["base class", 0.004720094924338737], ["same interface", 0.007767928954508533], ["object", 0.009026116801583932], ["interface", 0.00278125859076792]]
IO	IO	[["IO", 0.011719771719501735], ["good input / output", 0.011719771719501735], ["system", 0.004239766173890814], ["more difficult task", 0.011719771719501735], ["language designer", 0.011719771719501735], ["number", 0.00445351948493686], ["different approach", 0.011719771719501735]]
IO	Compression	[["compression", 0.011719771719501735], ["I", 0.02343954343900347], ["class", 0.008732154960102533], ["reading", 0.035159315158505206], ["stream", 0.05859885859750867], ["compressed format", 0.011719771719501735], ["other / o class", 0.011719771719501735], ["compression functionality", 0.011719771719501735]]
IO	Typical uses of IO streams	[["typical use", 0.009226436537631428], ["IO stream", 0.011719771719501735], ["/ o stream class", 0.011719771719501735], ["many different way", 0.011719771719501735], ["few combination", 0.011719771719501735], ["follow example", 0.00673310135576112], ["basic reference", 0.011719771719501735], ["typical / o usage", 0.011719771719501735]]
IO	XML	[["xml", 0.011719771719501735], ["important limitation", 0.011719771719501735], ["object serialization", 0.011719771719501735], ["Java-only solution", 0.011719771719501735], ["only Java program", 0.011719771719501735], ["such object", 0.011719771719501735], ["more interoperable solution", 0.011719771719501735], ["datum", 0.021098375090552908], ["xml format", 0.011719771719501735], ["large variety", 0.011719771719501735], ["platform", 0.007767928954508533], ["language", 0.0024933351818703067]]
IO	The File class	[["file class", 0.011719771719501735], ["class", 0.008732154960102533], ["datum", 0.021098375090552908], ["stream", 0.05859885859750867], ["library utility", 0.011719771719501735], ["file directory issue", 0.011719771719501735], ["File class", 0.011719771719501735], ["deceive name", 0.011719771719501735], ["file", 0.09226436537631427], ["fact", 0.007632172379030667], ["FilePath", 0.011719771719501735], ["well name", 0.011719771719501735], ["either name", 0.011719771719501735], ["particular file", 0.011719771719501735], ["name", 0.011860853421491955], ["set", 0.010311274586627011], ["directory", 0.011719771719501735], ["list", 0.005930426710745978], ["method", 0.003384793800593974], ["array", 0.009440189848677474], ["String", 0.015535857909017067], ["sense", 0.021098375090552908], ["flexible container class", 0.011719771719501735], ["number", 0.00445351948493686], ["element", 0.0038160861895153333], ["different directory listing", 0.011719771719501735], ["different file object", 0.011719771719501735], ["section", 0.004239766173890814], ["example", 0.0015283568128246976], ["use", 0.010549187545276454], ["associate FilenameFilter interface", 0.011719771719501735]]
IO	Object serialization	[["serialization", 0.02343954343900347], ["object", 0.009026116801583932], ["circumstance", 0.011719771719501735], ["program", 0.013850087620269437], ["sense", 0.021098375090552908], ["situation", 0.005930426710745978], ["information", 0.018880379697354947], ["same information", 0.011719771719501735], ["previous time", 0.011719771719501735], ["similar effect", 0.011719771719501735], ["file", 0.09226436537631427], ["database", 0.011719771719501735], ["spirit", 0.011719771719501735], ["detail", 0.018452873075262857], ["care", 0.009226436537631428]]
IO	Input and output	[["input", 0.018452873075262857], ["output", 0.02019930406728336], ["programming language", 0.004720094924338737], ["library", 0.010549187545276454], ["abstraction", 0.009226436537631428], ["stream", 0.05859885859750867], ["data source", 0.011719771719501735], ["object", 0.009026116801583932], ["piece", 0.007767928954508533], ["datum", 0.021098375090552908], ["detail", 0.018452873075262857], ["actual / o device", 0.011719771719501735]]
IO	Preferences	[["preference", 0.011719771719501735], ["Preferences API", 0.02343954343900347], ["persistence", 0.011719771719501735], ["serialization", 0.02343954343900347], ["information", 0.018880379697354947], ["use", 0.010549187545276454], ["small and limited data set", 0.011719771719501735], ["primitive", 0.005930426710745978], ["Strings", 0.009226436537631428], ["length", 0.011719771719501735], ["store String", 0.011719771719501735], ["long than 8 K", 0.011719771719501735], ["name", 0.011860853421491955], ["user preference", 0.011719771719501735], ["program-configuration setting", 0.011719771719501735]]
Type Information	The need for RTTI	[["need", 0.017214425217862664], ["RTTI", 0.2405306169009148], ["now-familiar example", 0.02186641971826498], ["class hierarchy", 0.02186641971826498], ["polymorphism", 0.02212964598103868], ["generic type", 0.017214425217862664], ["base class shape", 0.02186641971826498], ["specific derive type", 0.02186641971826498], ["Circle", 0.02186641971826498], ["Square", 0.02186641971826498], ["Triangle", 0.02186641971826498]]
Type Information	Summary	[["RTTI", 0.2405306169009148], ["type information", 0.15306493802785487], ["anonymous base-class reference", 0.02186641971826498], ["misuse", 0.02186641971826498], ["novice", 0.02186641971826498], ["sense", 0.00984118838116394], ["before polymorphic method call", 0.02186641971826498], ["people", 0.014493182881566256], ["procedural background", 0.02186641971826498], ["program", 0.007383172307641234], ["set", 0.006412828490117022], ["switch statement", 0.014493182881566256], ["important value", 0.02186641971826498], ["polymorphism", 0.02212964598103868], ["code development", 0.02186641971826498], ["maintenance", 0.02186641971826498], ["intent", 0.017214425217862664], ["0 0 programming", 0.02186641971826498], ["polymorphic method", 0.02186641971826498]]
Type Information	Registered factories	[["register factory", 0.02186641971826498], ["problem", 0.011546325707692772], ["generate object", 0.02186641971826498], ["Pets hierarchy", 0.02186641971826498], ["fact", 0.014239892089735067], ["new type", 0.00984118838116394], ["pet", 0.02186641971826498], ["hierarchy", 0.017214425217862664], ["entry", 0.02186641971826498], ["LiteralPetCreator.java", 0.02186641971826498], ["system", 0.007910436217058028], ["more class", 0.02186641971826498], ["regular basis", 0.02186641971826498]]
Type Information	instanceof vs. Class equivalence	[["class", 0.01303376686662284], ["type information", 0.15306493802785487], ["important difference", 0.02186641971826498], ["form", 0.012825656980234044], ["instanceof", 0.02186641971826498], ["equivalent result", 0.02186641971826498], ["direct comparison", 0.02186641971826498], ["Class object", 0.02186641971826498], ["example", 0.0057031301203391395], ["difference", 0.017214425217862664]]
Type Information	The Class object	[["class object", 0.06885770087145066], ["RTTI", 0.2405306169009148], ["Java", 0.002242336706888137], ["type information", 0.15306493802785487], ["run time", 0.012562430717460344], ["special kind", 0.02186641971826498], ["object", 0.012630505725706372], ["information", 0.017613240120351255], ["class", 0.01303376686662284], ["fact", 0.014239892089735067], ["regular object", 0.02186641971826498], ["cast", 0.04373283943652996], ["class class", 0.02186641971826498], ["number", 0.004154625559773312], ["other way", 0.017214425217862664]]
Type Information	Interfaces and type information	[["interface", 0.020756775523046486], ["type information", 0.15306493802785487], ["important goal", 0.02186641971826498], ["interface keyword", 0.017214425217862664], ["programmer", 0.007910436217058028], ["component", 0.014493182881566256], ["coupling", 0.02186641971826498], ["airtight guarantee", 0.02186641971826498], ["example", 0.0057031301203391395]]
Type Information	Type Information	[["type information", 0.15306493802785487], ["runtime type information", 0.02186641971826498], ["RTTI", 0.2405306169009148], ["program", 0.007383172307641234]]
Type Information	Reflection: runtime class information	[["reflection", 0.012562430717460344], ["runtime class information", 0.02186641971826498], ["class information", 0.02186641971826498], ["precise type", 0.02186641971826498], ["object", 0.012630505725706372], ["RTTI", 0.2405306169009148], ["limitation", 0.02186641971826498], ["type", 0.004651994500402317], ["compile time", 0.017214425217862664], ["order", 0.009303989000804634], ["information", 0.017613240120351255], ["compiler", 0.008806620060175628], ["class", 0.01303376686662284]]
Type Information	Dynamic proxies	[["dynamic proxy", 0.02186641971826498], ["Proxy", 0.02186641971826498], ["basic design pattern", 0.02186641971826498], ["object", 0.012630505725706372], ["place", 0.012562430717460344], ["real object", 0.06559925915479493], ["order", 0.009303989000804634], ["additional or different operation", 0.02186641971826498], ["communication", 0.017214425217862664], ["proxy", 0.04373283943652996], ["go-between", 0.02186641971826498], ["trivial example", 0.02186641971826498], ["structure", 0.014493182881566256]]
Type Information	Null Objects	[["null object", 0.02186641971826498], ["build-in null", 0.02186641971826498], ["absence", 0.02186641971826498], ["object", 0.012630505725706372], ["reference", 0.007910436217058028], ["null", 0.06559925915479493], ["ness", 0.02186641971826498], ["ponderous code", 0.02186641971826498], ["problem", 0.011546325707692772], ["behavior", 0.008806620060175628], ["nullpointerexception", 0.02186641971826498], ["idea", 0.006412828490117022], ["Null Object3", 0.02186641971826498], ["message", 0.017214425217862664], ["value", 0.0071199460448675336], ["real object", 0.06559925915479493], ["programming time", 0.02186641971826498], ["result code", 0.02186641971826498]]
Type Information	Checking before a cast	[["cast", 0.04373283943652996], ["form", 0.012825656980234044], ["RTTI", 0.2405306169009148]]
Interfaces	Nesting interfaces	[["nesting interface", 0.022014165797442448], ["interface", 0.13060640003943946], ["class", 0.029524123932671], ["other interface", 0.017330738901767142], ["number", 0.004182697354096105], ["interesting feature", 0.022014165797442448]]
Interfaces	Fields in interfaces	[["field", 0.029182219585856383], ["interface", 0.13060640003943946], ["convenient tool", 0.017330738901767142], ["group", 0.011139585308022849], ["constant value", 0.017330738901767142], ["Java SE5", 0.00581217071096697], ["only way", 0.017330738901767142], ["same effect", 0.022014165797442448], ["enum", 0.014591109792928192], ["C", 0.007963885110416529], ["C++", 0.010448512003155159], ["pre-Java SE5 code", 0.017330738901767142]]
Interfaces	Extending an interface with inheritance	[["interface", 0.13060640003943946], ["inheritance", 0.03546449699908564], ["new method declaration", 0.022014165797442448], ["several interface", 0.022014165797442448], ["new interface", 0.044028331594884895], ["case", 0.011139585308022849], ["example", 0.002870832391657202]]
Interfaces	“Multiple inheritance” in Java	[["multiple inheritance", 0.029182219585856383], ["Java", 0.0033862314458749914], ["interface", 0.13060640003943946], ["implementation", 0.07092899399817128], ["storage", 0.017330738901767142], ["many interface", 0.022014165797442448], ["time", 0.005224256001577579], ["An", 0.022014165797442448], ["a", 0.017330738901767142], ["b", 0.022014165797442448], ["c.", 0.022014165797442448], ["C++", 0.010448512003155159], ["act", 0.022014165797442448], ["multiple class interface", 0.022014165797442448], ["rather sticky baggage", 0.022014165797442448], ["class", 0.029524123932671], ["same act", 0.022014165797442448], ["C++ problem", 0.022014165797442448], ["multiple interface", 0.022014165797442448]]
Interfaces	Summary	[["interface", 0.13060640003943946], ["concrete class", 0.022014165797442448], ["class", 0.029524123932671], ["factory", 0.044028331594884895]]
Interfaces	Abstract classes and methods	[["abstract class", 0.017330738901767142], ["method", 0.01695446264081306], ["instrument example", 0.022014165797442448], ["previous chapter", 0.014591109792928192], ["base class Instrument", 0.022014165797442448], ["dummy method", 0.022014165797442448], ["intent", 0.017330738901767142], ["Instrument", 0.022014165797442448], ["common interface", 0.022014165797442448], ["class", 0.029524123932671]]
Interfaces	Interfaces	[["interface", 0.13060640003943946], ["interface keyword", 0.034661477803534284], ["concept", 0.009907682897252886], ["abstractness", 0.022014165797442448], ["abstract keyword", 0.022014165797442448], ["one or more undefined method", 0.022014165797442448], ["class", 0.029524123932671], ["part", 0.007168053788413936], ["corresponding implementation", 0.022014165797442448], ["implementation", 0.07092899399817128], ["inheritor", 0.022014165797442448], ["completely abstract class", 0.022014165797442448], ["creator", 0.022014165797442448], ["method name", 0.022014165797442448], ["argument list", 0.017330738901767142], ["return type", 0.022014165797442448], ["method body", 0.022014165797442448], ["only form", 0.022014165797442448]]
Interfaces	Complete decoupling	[["method", 0.01695446264081306], ["class", 0.029524123932671], ["interface", 0.13060640003943946], ["subclass", 0.022014165797442448], ["hierarchy", 0.017330738901767142], ["luck", 0.022014165797442448], ["constraint", 0.014591109792928192], ["result", 0.00886612424977141], ["more reusable code", 0.022014165797442448]]
Interfaces	Interfaces and factories	[["interface", 0.13060640003943946], ["factory", 0.044028331594884895], ["gateway", 0.022014165797442448], ["multiple implementation", 0.044028331594884895], ["typical way", 0.022014165797442448], ["object", 0.004238615660203265], ["Factory Method design pattern", 0.017330738901767142], ["constructor", 0.011139585308022849], ["creation method", 0.022014165797442448], ["factory object", 0.022014165797442448], ["implementation", 0.07092899399817128], ["theory", 0.022014165797442448], ["code", 0.004182697354096105], ["one implementation", 0.017330738901767142], ["demonstration", 0.022014165797442448], ["structure", 0.014591109792928192], ["Factory Method", 0.017330738901767142]]
Interfaces	Adapting to an interface	[["interface", 0.13060640003943946], ["most compelling reason", 0.017330738901767142], ["multiple implementation", 0.044028331594884895], ["same interface", 0.014591109792928192], ["simple case", 0.022014165797442448], ["form", 0.006456158412347543], ["method", 0.01695446264081306], ["object", 0.004238615660203265]]
Annotations	Writing annotation processors	[["annotation processor", 0.054757925008764405], ["tool", 0.07864715028998284], ["annotation", 0.27378962504382204], ["comment", 0.043108392562378764], ["important part", 0.027378962504382202], ["process", 0.02770854832919969], ["Java SE5", 0.007228582060698417], ["extension", 0.027378962504382202], ["reflection api", 0.027378962504382202], ["external tool", 0.027378962504382202], ["Java source code", 0.027378962504382202]]
Annotations	Using the Visitor pattern with apt	[["Visitor pattern", 0.027378962504382202], ["processing annotation", 0.027378962504382202], ["example", 0.007140894016222956], ["relatively simple annotation processor", 0.027378962504382202], ["one annotation", 0.027378962504382202], ["fair amount", 0.027378962504382202], ["complexity", 0.043108392562378764], ["more annotation", 0.027378962504382202], ["more processor", 0.027378962504382202], ["mirror api", 0.027378962504382202], ["class", 0.016319590446443724], ["Visitor design pattern", 0.027378962504382202], ["visitor", 0.027378962504382202], ["classic design pattern", 0.027378962504382202], ["book Design Patterns", 0.027378962504382202], ["Gamma", 0.021554196281189382], ["et al", 0.027378962504382202], ["more detailed explanation", 0.027378962504382202], ["Patterns", 0.021554196281189382]]
Annotations	Summary	[["annotation", 0.27378962504382204], ["welcome addition", 0.027378962504382202], ["Java", 0.002807631675011197], ["structured and typechecked mean", 0.027378962504382202], ["metadata", 0.08213688751314661], ["code", 0.010404020309348293], ["tedium", 0.027378962504382202], ["deployment descriptor", 0.027378962504382202], ["other generate file", 0.027378962504382202], ["fact", 0.008914890425926575], ["@deprecated Javadoc tag", 0.027378962504382202], ["@deprecated annotation", 0.027378962504382202], ["just one indication", 0.027378962504382202], ["how much well suit annotation", 0.027378962504382202], ["information", 0.022053552755733927], ["class", 0.016319590446443724], ["comment", 0.043108392562378764]]
Annotations	Annotation-based unit testing	[["unit testing", 0.043108392562378764], ["practice", 0.027378962504382202], ["one or more test", 0.027378962504382202], ["method", 0.007907333416513654], ["class", 0.016319590446443724], ["order", 0.017474298669578454], ["portion", 0.021554196281189382], ["correct behavior", 0.027378962504382202], ["most popular tool", 0.027378962504382202], ["Java", 0.002807631675011197], ["JUnit", 0.08213688751314661], ["time", 0.012994788037537506], ["writing", 0.021554196281189382], ["process", 0.02770854832919969], ["JUnit version", 0.027378962504382202], ["annotation", 0.27378962504382204], ["main problem", 0.027378962504382202], ["preannotation version", 0.027378962504382202], ["amount", 0.027378962504382202], ["ceremony", 0.027378962504382202], ["JUnit test", 0.027378962504382202], ["simple unit testing system", 0.027378962504382202]]
Annotations	Annotations	[["annotation", 0.27378962504382204], ["metadata", 0.08213688751314661], ["formalized way", 0.027378962504382202], ["information", 0.022053552755733927], ["code", 0.010404020309348293], ["datum", 0.012322160241961571], ["point.1 annotation", 0.027378962504382202], ["general trend", 0.027378962504382202], ["source-code file", 0.027378962504382202], ["external document", 0.027378962504382202], ["response", 0.021554196281189382], ["pressure", 0.027378962504382202], ["other language", 0.015729430057996565], ["c #", 0.027378962504382202]]
Annotations	Basic syntax	[["basic syntax", 0.027378962504382202], ["example", 0.007140894016222956], ["method", 0.007907333416513654], ["compiler", 0.011026776377866964], ["definition", 0.021554196281189382], ["@t annotation", 0.027378962504382202], ["build path", 0.027378962504382202], ["chapter", 0.005824766223192817], ["tool", 0.07864715028998284], ["reflection", 0.015729430057996565]]
Annotations	Using apt to process annotations	[["annotation", 0.27378962504382204], ["annotation processing tool", 0.027378962504382202], ["Sun s first version", 0.027378962504382202], ["tool", 0.07864715028998284], ["processing", 0.027378962504382202], ["early incarnation", 0.027378962504382202], ["feature", 0.018146926465154388], ["life", 0.021554196281189382]]
Operators	Java has no “sizeof”	[["Java", 0.0058274680696453335], ["sizeof", 0.03788484346536607], ["C", 0.018273720873513893], ["C++", 0.008990580095738158], ["operator", 0.1590317858050933], ["number", 0.009597507107073232], ["byte", 0.012628281155122023], ["data item", 0.012628281155122023], ["most compelling reason", 0.009941664176207506], ["portability", 0.025256562310244045], ["different datum type", 0.012628281155122023], ["different size", 0.012628281155122023], ["different machine", 0.012628281155122023], ["programmer", 0.009136860436756947], ["type", 0.005373233957829033], ["operation", 0.00725504719729299], ["size", 0.009941664176207506], ["example", 0.004940502255410068], ["one computer", 0.012628281155122023], ["integer", 0.03788484346536607], ["32 bit", 0.012628281155122023], ["16 bit", 0.012628281155122023], ["program", 0.004263925092397457], ["large value", 0.012628281155122023], ["first machine", 0.012628281155122023], ["huge headache", 0.012628281155122023], ["C and C++ programmer", 0.012628281155122023]]
Operators	Relational operators	[["relational operator", 0.02982499252862252], ["boolean result", 0.012628281155122023], ["relationship", 0.025110281969225257], ["value", 0.02878334777053038], ["operand", 0.03788484346536607], ["relational expression", 0.012628281155122023], ["=", 0.012628281155122023], ["equivalent =", 0.012628281155122023], ["equivalence and nonequivalence work", 0.012628281155122023], ["primitive", 0.006390149711578998], ["other comparison", 0.012628281155122023], ["type boolean", 0.012628281155122023], ["boolean value", 0.019883328352415013], ["sense", 0.011366954021654472]]
Operators	Common pitfalls when using operators	[["common pitfall", 0.009941664176207506], ["operator", 0.1590317858050933], ["pitfall", 0.012628281155122023], ["parenthesis", 0.025256562310244045], ["expression", 0.021765141591878968], ["Java", 0.0058274680696453335]]
Operators	Summary	[["experience", 0.00725504719729299], ["language", 0.0026866169789145165], ["c-like syntax", 0.012628281155122023], ["operator", 0.1590317858050933], ["Java", 0.0058274680696453335], ["virtually learning curve", 0.012628281155122023], ["chapter", 0.005373233957829033], ["multimedia presentation", 0.012628281155122023], ["c", 0.009941664176207506]]
Operators	Simpler print statements	[["simple print statement", 0.012628281155122023], ["previous chapter", 0.008370093989741752], ["Java print statement", 0.012628281155122023]]
Operators	A compendium of operators	[["compendium", 0.012628281155122023], ["operator", 0.1590317858050933], ["follow example", 0.00725504719729299], ["primitive data type", 0.012628281155122023], ["particular operator", 0.012628281155122023], ["same example", 0.012628281155122023], ["different primitive datum type", 0.012628281155122023], ["file", 0.009941664176207506], ["error", 0.006390149711578998], ["line", 0.00725504719729299]]
Operators	String operator + and +=	[["string operator", 0.012628281155122023], ["one special usage", 0.012628281155122023], ["operator", 0.1590317858050933], ["Java", 0.0058274680696453335], ["string", 0.008370093989741752], ["natural use", 0.012628281155122023], ["traditional way", 0.012628281155122023]]
Operators	Using Java operators	[["Java operator", 0.012628281155122023], ["operator", 0.1590317858050933], ["one or more argument", 0.012628281155122023], ["new value", 0.012628281155122023], ["argument", 0.01451009439458598], ["different form", 0.009941664176207506], ["effect", 0.008370093989741752], ["addition and unary plus + subtraction and unary minus - multiplication * division", 0.012628281155122023], ["assignment", 0.03788484346536607], ["programming language", 0.005085993755682824]]
Operators	Assignment	[["assignment", 0.03788484346536607], ["operator", 0.1590317858050933], ["value", 0.02878334777053038], ["right-hand side", 0.012628281155122023], ["rvalue", 0.025256562310244045], ["left-hand side", 0.012628281155122023], ["lvalue", 0.025256562310244045], ["variable", 0.016740187979483505], ["physical space", 0.012628281155122023], ["instance", 0.019883328352415013], ["constant value", 0.009941664176207506]]
Operators	Literals	[["literal", 0.012628281155122023], ["literal value", 0.025256562310244045], ["program", 0.004263925092397457], ["compiler", 0.015257981267048472], ["exactly type", 0.012628281155122023], ["type", 0.005373233957829033], ["extra information", 0.009941664176207506], ["form", 0.007407065465328964], ["character", 0.025256562310244045], ["follow code", 0.012628281155122023]]
Operators	Bitwise operators	[["bitwise operator", 0.03788484346536607], ["individual bit", 0.012628281155122023], ["integral primitive data type", 0.012628281155122023], ["boolean algebra", 0.012628281155122023], ["correspond bit", 0.012628281155122023], ["two argument", 0.012628281155122023], ["result", 0.010171987511365648]]
Operators	Logical operators	[["logical operator", 0.025256562310244045], ["||", 0.012628281155122023], ["boolean value", 0.019883328352415013], ["logical relationship", 0.012628281155122023], ["argument", 0.01451009439458598], ["example", 0.004940502255410068], ["relational and logical operator", 0.012628281155122023]]
Operators	Operators	[["operator", 0.1590317858050933], ["low level", 0.012628281155122023], ["datum", 0.011366954021654472], ["Java", 0.0058274680696453335]]
Operators	Mathematical operators	[["mathematical operator", 0.012628281155122023], ["basic mathematical operator", 0.012628281155122023], ["one", 0.008223813648722966], ["most programming language", 0.008370093989741752], ["addition", 0.010171987511365648], ["+", 0.009941664176207506], ["division", 0.025256562310244045], ["multiplication", 0.025256562310244045], ["remainder", 0.012628281155122023], ["integer division", 0.012628281155122023], ["Integer division truncate", 0.012628281155122023], ["round", 0.012628281155122023], ["result", 0.010171987511365648]]
Operators	Auto increment and decrement	[["auto increment", 0.012628281155122023], ["Java", 0.0058274680696453335], ["C", 0.018273720873513893], ["number", 0.009597507107073232], ["shortcut", 0.025256562310244045], ["code", 0.002399376776768308]]
Operators	Ternary if-else operator	[["ternary if-else operator", 0.012628281155122023], ["ternary operator", 0.012628281155122023], ["conditional operator", 0.009941664176207506], ["three operand", 0.012628281155122023], ["operator", 0.1590317858050933], ["value", 0.02878334777053038], ["ordinary if-else statement", 0.012628281155122023], ["next section", 0.012628281155122023], ["chapter", 0.005373233957829033], ["expression", 0.021765141591878968], ["form", 0.007407065465328964]]
Operators	Precedence	[["precedence", 0.012628281155122023], ["operator precedence", 0.009941664176207506], ["expression", 0.021765141591878968], ["several operator", 0.012628281155122023], ["Java", 0.0058274680696453335], ["specific rule", 0.012628281155122023], ["order", 0.005373233957829033], ["evaluation", 0.025256562310244045], ["easy one", 0.012628281155122023], ["multiplication", 0.025256562310244045], ["division", 0.025256562310244045], ["addition", 0.010171987511365648], ["subtraction", 0.012628281155122023], ["programmer", 0.009136860436756947], ["other precedence rule", 0.012628281155122023], ["parenthesis", 0.025256562310244045], ["example", 0.004940502255410068], ["statement", 0.006390149711578998]]
Operators	Casting operators	[["operator", 0.1590317858050933], ["word cast", 0.012628281155122023], ["sense", 0.011366954021654472], ["mold", 0.012628281155122023], ["Java", 0.0058274680696453335], ["one type", 0.012628281155122023], ["datum", 0.011366954021654472], ["instance", 0.019883328352415013], ["integral value", 0.009941664176207506], ["float point variable", 0.012628281155122023], ["compiler", 0.015257981267048472], ["int", 0.008370093989741752], ["float", 0.012628281155122023], ["type conversion", 0.012628281155122023]]
Operators	Shift operators	[["shift operator", 0.025256562310244045], ["bit", 0.025110281969225257], ["primitive integral type", 0.012628281155122023], ["left-shift operator", 0.012628281155122023], ["operand", 0.03788484346536607], ["left", 0.03788484346536607], ["operator", 0.1590317858050933], ["number", 0.009597507107073232], ["right", 0.03788484346536607], ["zero", 0.03788484346536607], ["low-order bit", 0.012628281155122023], ["sign right-shift operator", 0.012628281155122023], ["sign right shift", 0.012628281155122023], ["sign extension", 0.012628281155122023], ["value", 0.02878334777053038], ["high-order bit", 0.03788484346536607], ["one", 0.008223813648722966], ["Java", 0.0058274680696453335], ["unsigned right shift", 0.012628281155122023], ["zero extension", 0.012628281155122023], ["sign", 0.012628281155122023], ["C", 0.018273720873513893], ["C++", 0.008990580095738158]]
Introduction to Objects	Reusing the implementation	[["implementation", 0.009049561303214956], ["class", 0.011719154174041055], ["useful unit", 0.011234815648349938], ["code", 0.004269235920042921], ["reusability", 0.011234815648349938], ["experience", 0.006454490265177901], ["insight", 0.00884465295676392], ["reusable object design", 0.011234815648349938], ["design", 0.007446497411563352], ["code reuse", 0.00884465295676392], ["great advantage", 0.011234815648349938], ["object-orient programming language", 0.00884465295676392]]
Introduction to Objects	The progress of abstraction	[["progress", 0.011234815648349938], ["abstraction", 0.03537861182705568], ["programming language", 0.018099122606429912], ["complexity", 0.00884465295676392], ["problem", 0.02076347881573028], ["kind", 0.010112669439954668], ["quality", 0.011234815648349938], ["assembly language", 0.02653395887029176], ["small abstraction", 0.011234815648349938], ["underlying machine", 0.022469631296699877], ["many so-call imperative language", 0.011234815648349938], ["FORTRAN", 0.011234815648349938], ["C", 0.004064327573591884], ["language", 0.007170488074758055], ["big improvement", 0.011234815648349938], ["primary abstraction", 0.011234815648349938], ["term", 0.014892994823126704], ["structure", 0.014892994823126704], ["computer", 0.033704446945049815], ["programmer", 0.012192982720775649], ["association", 0.00884465295676392], ["machine model", 0.011234815648349938], ["solution space", 0.011234815648349938], ["place", 0.012908980530355801], ["solution", 0.01768930591352784], ["model", 0.022469631296699877], ["problem space", 0.00884465295676392], ["business", 0.011234815648349938], ["effort", 0.011234815648349938], ["mapping", 0.011234815648349938], ["fact", 0.007316358349553535], ["program", 0.013276980546327253], ["side effect", 0.011234815648349938], ["entire programming method industry", 0.011234815648349938]]
Introduction to Objects	An object has an interface	[["object", 0.01838682241564037], ["interface", 0.0026661720283913163], ["Aristotle", 0.011234815648349938], ["careful study", 0.011234815648349938], ["concept", 0.020225338879909335], ["type", 0.002390162691586018], ["class", 0.011719154174041055], ["fish", 0.011234815648349938], ["bird", 0.011234815648349938], ["idea", 0.009884601155456238], ["part", 0.0036581791747767674], ["characteristic", 0.007446497411563352], ["behavior", 0.004524780651607478], ["first object-orient language", 0.011234815648349938], ["Simula-67", 0.011234815648349938], ["fundamental keyword class", 0.011234815648349938], ["new type", 0.010112669439954668], ["program", 0.013276980546327253]]
Introduction to Objects	Summary	[["procedural program", 0.022469631296699877], ["data definition", 0.011234815648349938], ["function call", 0.00884465295676392], ["meaning", 0.007446497411563352], ["program", 0.013276980546327253], ["low-level concept", 0.011234815648349938], ["model", 0.022469631296699877], ["mind", 0.006454490265177901], ["reason", 0.006454490265177901], ["intermediate representation", 0.011234815648349938], ["term", 0.014892994823126704], ["expression", 0.006454490265177901], ["computer", 0.033704446945049815], ["problem", 0.02076347881573028]]
Introduction to Objects	An object provides services	[["object", 0.01838682241564037], ["service", 0.02653395887029176], ["program design", 0.011234815648349938], ["good way", 0.011234815648349938], ["service provider", 0.011234815648349938], ["program", 0.013276980546327253], ["user", 0.005685029743404764], ["other object", 0.007446497411563352], ["goal", 0.015169004159932003], ["produce", 0.011234815648349938], ["exist code library", 0.011234815648349938], ["set", 0.003294867051818746], ["ideal service", 0.011234815648349938], ["problem", 0.02076347881573028]]
Introduction to Objects	Inheritance	[["inheritance", 0.004524780651607478], ["idea", 0.009884601155456238], ["object", 0.01838682241564037], ["convenient tool", 0.00884465295676392], ["datum", 0.010112669439954668], ["functionality", 0.00884465295676392], ["concept", 0.020225338879909335], ["appropriate problem-space idea", 0.011234815648349938], ["idiom", 0.011234815648349938], ["underlying machine", 0.022469631296699877], ["fundamental unit", 0.011234815648349938], ["programming language", 0.018099122606429912], ["class keyword", 0.00884465295676392]]
Introduction to Objects	The hidden implementation	[["hidden implementation", 0.011234815648349938], ["play field", 0.011234815648349938], ["class creator", 0.033704446945049815], ["new data type", 0.011234815648349938], ["client programmers4", 0.011234815648349938], ["class consumer", 0.011234815648349938], ["data type", 0.00884465295676392], ["application", 0.007446497411563352], ["goal", 0.015169004159932003], ["client programmer", 0.022339492234690055], ["toolbox", 0.011234815648349938], ["class", 0.011719154174041055], ["rapid application development", 0.011234815648349938], ["only", 0.011234815648349938], ["hide portion", 0.011234815648349938], ["impact", 0.011234815648349938], ["hidden portion", 0.011234815648349938], ["tender inside", 0.011234815648349938], ["object", 0.01838682241564037], ["careless or uninformed client programmer", 0.011234815648349938], ["implementation", 0.009049561303214956], ["program bug", 0.011234815648349938]]
Introduction to Objects	Concurrent programming	[["concurrent programming", 0.007446497411563352], ["fundamental concept", 0.00884465295676392], ["computer programming", 0.01768930591352784], ["idea", 0.009884601155456238], ["more than one task", 0.00884465295676392], ["time", 0.0026661720283913163], ["many programming problem", 0.011234815648349938], ["program", 0.013276980546327253], ["other problem", 0.011234815648349938], ["main process", 0.022469631296699877], ["solution", 0.01768930591352784], ["many way", 0.011234815648349938], ["programmer", 0.012192982720775649], ["low-level knowledge", 0.011234815648349938], ["machine", 0.022469631296699877], ["interrupt service routine", 0.011234815648349938], ["suspension", 0.011234815648349938], ["hardware interrupt", 0.011234815648349938], ["new type", 0.010112669439954668]]
Introduction to Objects	Object creation & lifetime	[["creation", 0.007446497411563352], ["lifetime", 0.006454490265177901], ["one critical issue", 0.011234815648349938], ["object", 0.01838682241564037], ["way", 0.0021346179600214604], ["resource", 0.014892994823126704], ["most notably memory", 0.011234815648349938], ["order", 0.002390162691586018], ["reuse", 0.011234815648349938], ["simple programming situation", 0.011234815648349938], ["question", 0.006454490265177901], ["situation", 0.005685029743404764]]
Introduction to Objects	The singly rooted hierarchy	[["singly root hierarchy", 0.022469631296699877], ["issue", 0.011370059486809529], ["OOP", 0.00884465295676392], ["introduction", 0.014892994823126704], ["C++", 0.0053323440567826326], ["class", 0.011719154174041055], ["single base class", 0.011234815648349938], ["Java", 0.002304194271216086], ["virtually other OOP language", 0.011234815648349938], ["answer", 0.022469631296699877], ["name", 0.005685029743404764], ["ultimate base class", 0.011234815648349938], ["Object", 0.007446497411563352], ["benefit", 0.00884465295676392]]
Introduction to Objects	Introduction to Objects	[["introduction", 0.014892994823126704], ["object", 0.01838682241564037], ["Objects", 0.011234815648349938], ["nature", 0.00884465295676392], ["concept", 0.020225338879909335], ["significance", 0.011234815648349938], ["party", 0.00884465295676392], ["agreement", 0.011234815648349938], ["speech community", 0.011234815648349938], ["pattern", 0.011234815648349938], ["language", 0.007170488074758055], ["organization", 0.00884465295676392], ["classification", 0.011234815648349938], ["datum", 0.010112669439954668], ["Benjamin Lee Whorf", 0.011234815648349938]]
Introduction to Objects	Containers	[["container", 0.005056334719977334], ["how many object", 0.011234815648349938], ["particular problem", 0.011234815648349938], ["object", 0.01838682241564037], ["how much space", 0.011234815648349938], ["information", 0.004524780651607478], ["run time", 0.006454490265177901]]
Introduction to Objects	Exception handling: dealing with errors	[["exception handling", 0.011234815648349938], ["error", 0.005685029743404764], ["beginning", 0.006454490265177901], ["programming language", 0.018099122606429912], ["error handling", 0.007446497411563352], ["particularly difficult issue", 0.011234815648349938], ["good error-handle scheme", 0.011234815648349938], ["many language", 0.00884465295676392], ["issue", 0.011370059486809529], ["problem", 0.02076347881573028], ["library designer", 0.011234815648349938], ["halfway measure", 0.011234815648349938], ["many situation", 0.011234815648349938], ["major problem", 0.011234815648349938], ["most error-handle scheme", 0.011234815648349938], ["programmer vigilance", 0.011234815648349938], ["agree-upon convention", 0.011234815648349938], ["language", 0.007170488074758055], ["programmer", 0.012192982720775649], ["hurry", 0.011234815648349938], ["scheme", 0.011234815648349938]]
Introduction to Objects	Java and the Internet	[["Java", 0.002304194271216086], ["internet", 0.007446497411563352], ["fact", 0.007316358349553535], ["computer programming language", 0.011234815648349938], ["revolutionary step", 0.011234815648349938], ["computer programming", 0.01768930591352784], ["answer", 0.022469631296699877], ["traditional programming perspective", 0.011234815648349938], ["traditional standalone programming problem", 0.011234815648349938], ["programming problem", 0.007446497411563352], ["World Wide web", 0.011234815648349938]]
Introduction to Objects	Interchangeable objects with polymorphism	[["interchangeable object", 0.011234815648349938], ["polymorphism", 0.011370059486809529], ["type hierarchy", 0.011234815648349938], ["object", 0.01838682241564037], ["specific type", 0.01768930591352784], ["base type", 0.007446497411563352], ["code", 0.004269235920042921], ["shape example", 0.011234815648349938], ["method", 0.0021631555783106315], ["generic shape", 0.011234815648349938], ["circle", 0.011234815648349938], ["square", 0.011234815648349938], ["triangle", 0.011234815648349938], ["shape", 0.01768930591352784], ["message", 0.01768930591352784], ["shape object", 0.011234815648349938]]
Access Control	Java access specifiers	[["Java access specifier", 0.11044395044140617], ["front", 0.05522197522070309], ["definition", 0.043473717923076895], ["member", 0.0317254606254507], ["class", 0.049373676181189916], ["field", 0.0366014279551419], ["method", 0.0106324596222048], ["access specifier", 0.08694743584615379], ["access", 0.0366014279551419], ["particular definition", 0.05522197522070309]]
Access Control	Summary	[["relationship", 0.0732028559102838], ["boundary", 0.05522197522070309], ["party", 0.043473717923076895], ["library", 0.12426585328757855], ["user", 0.0558867330707587], ["client programmer", 0.1098042838654257], ["programmer", 0.01997720332782451], ["application", 0.0366014279551419], ["big library", 0.05522197522070309]]
Access Control	Interface and implementation	[["interface", 0.01310491335988952], ["implementation", 0.04448089454122606], ["access control", 0.11044395044140617], ["datum", 0.02485317065751571], ["method", 0.0106324596222048], ["class", 0.049373676181189916], ["combination", 0.043473717923076895], ["implementation hiding", 0.05522197522070309], ["result", 0.02224044727061303], ["data type", 0.043473717923076895], ["characteristic", 0.0366014279551419], ["behavior", 0.02224044727061303]]
Access Control	Class access	[["class access", 0.05522197522070309], ["Java", 0.0028314251637824787], ["access specifier", 0.08694743584615379], ["class", 0.049373676181189916], ["library", 0.12426585328757855], ["user", 0.0558867330707587], ["client programmer", 0.1098042838654257], ["public keyword", 0.05522197522070309], ["entire class definition", 0.05522197522070309], ["object", 0.0053162298111024]]
Access Control	Access Control	[["Access Control", 0.05522197522070309], ["access control", 0.11044395044140617], ["implementation", 0.04448089454122606], ["hiding", 0.05522197522070309]]
Access Control	package: the library unit	[["package", 0.11044395044140617], ["library unit", 0.05522197522070309], ["group", 0.02794336653537935], ["class", 0.049373676181189916], ["single namespace", 0.05522197522070309]]
Inner Classes	Can inner classes be overridden?	[["inner class", 0.43720727684003463], ["enclose class", 0.09255956073924665], ["entire inner class", 0.018511912147849332], ["powerful concept", 0.018511912147849332], ["method", 0.008910726103836409], ["outer class", 0.07404764859139733]]
Inner Classes	Inheriting from inner classes	[["inner class", 0.43720727684003463], ["inner-class constructor", 0.018511912147849332], ["reference", 0.026787613553219233], ["enclose class object", 0.037023824295698664], ["thing", 0.008331460618144472], ["problem", 0.00488750718876768], ["secret reference", 0.018511912147849332], ["derive class", 0.012269796871325978], ["default object", 0.014573575894667823], ["special syntax", 0.014573575894667823], ["association", 0.014573575894667823]]
Inner Classes	Creating inner classes	[["inner class", 0.43720727684003463], ["class definition", 0.055535736443547985], ["surround class", 0.018511912147849332]]
Inner Classes	Inner classes in methods and scopes	[["inner class", 0.43720727684003463], ["method", 0.008910726103836409], ["scope", 0.029147151789335645], ["typical use", 0.014573575894667823], ["code", 0.0035172682295808153], ["plain inner class", 0.018511912147849332], ["syntax", 0.02127047928297263], ["number", 0.0035172682295808153], ["other more obscure technique", 0.018511912147849332], ["even arbitrary scope", 0.018511912147849332], ["two reason", 0.014573575894667823]]
Inner Classes	Local inner classes	[["local inner class", 0.055535736443547985], ["inner class", 0.43720727684003463], ["code block", 0.018511912147849332], ["body", 0.014573575894667823], ["method", 0.008910726103836409], ["access specifier", 0.014573575894667823], ["part", 0.006027681594802628], ["outer class", 0.07404764859139733], ["access", 0.012269796871325978], ["final variable", 0.018511912147849332], ["current code block", 0.018511912147849332], ["member", 0.02127047928297263], ["enclose class", 0.09255956073924665], ["example", 0.009656436226483317], ["creation", 0.012269796871325978], ["anonymous inner class", 0.029147151789335645]]
Inner Classes	Summary	[["interface", 0.017572497459851857], ["inner class", 0.43720727684003463], ["more sophisticated concept", 0.018511912147849332], ["many OOP language", 0.018511912147849332], ["example", 0.009656436226483317], ["C++", 0.013179373094888891], ["same problem", 0.018511912147849332], ["multiple inheritance", 0.012269796871325978], ["MI feature", 0.018511912147849332], ["MI", 0.018511912147849332], ["Java interface", 0.018511912147849332], ["comparison", 0.014573575894667823]]
Inner Classes	Anonymous inner classes	[["anonymous inner class", 0.029147151789335645], ["next example", 0.018511912147849332]]
Inner Classes	Nested classes	[["nested class", 0.055535736443547985], ["connection", 0.018511912147849332], ["inner-class object", 0.018511912147849332], ["outerclass object", 0.018511912147849332], ["inner class static", 0.018511912147849332], ["meaning", 0.012269796871325978], ["static", 0.014573575894667823], ["inner class", 0.43720727684003463], ["object", 0.008910726103836409], ["ordinary inner class", 0.018511912147849332], ["reference", 0.026787613553219233], ["enclose class", 0.09255956073924665]]
Inner Classes	The link to the outer class	[["link", 0.029147151789335645], ["outer class", 0.07404764859139733], ["inner class", 0.43720727684003463], ["just name-hiding and code organization scheme", 0.018511912147849332], ["twist", 0.014573575894667823], ["object", 0.008910726103836409], ["enclosing object", 0.018511912147849332], ["member", 0.02127047928297263], ["enclose object", 0.018511912147849332], ["special qualification", 0.018511912147849332], ["1 addition", 0.018511912147849332], ["access right", 0.018511912147849332], ["element", 0.006027681594802628], ["enclose class", 0.09255956073924665], ["follow example", 0.010635239641486315]]
Inner Classes	Inner classes and upcasting	[["inner class", 0.43720727684003463], ["base class", 0.022366813448286966], ["interface", 0.017572497459851857], ["effect", 0.012269796871325978], ["interface reference", 0.018511912147849332], ["object", 0.008910726103836409], ["implementation", 0.014911208965524645], ["reference", 0.026787613553219233]]
Inner Classes	Using .this and .new	[["reference", 0.026787613553219233], ["outer-class object", 0.018511912147849332], ["outer class", 0.07404764859139733], ["dot", 0.018511912147849332], ["result reference", 0.018511912147849332], ["correct type", 0.018511912147849332], ["compile time", 0.014573575894667823], ["runtime", 0.018511912147849332], ["example", 0.009656436226483317]]
Inner Classes	Why inner classes?	[["why inner class", 0.018511912147849332], ["point", 0.008331460618144472], ["lot", 0.008331460618144472], ["syntax", 0.02127047928297263], ["semantic", 0.018511912147849332], ["way", 0.0035172682295808153], ["inner class", 0.43720727684003463], ["question", 0.010635239641486315], ["Java designer", 0.012269796871325978], ["so much trouble", 0.018511912147849332], ["fundamental language feature", 0.018511912147849332]]
Inner Classes	Inner Classes	[["inner class", 0.43720727684003463], ["class definition", 0.055535736443547985]]
Inner Classes	Inner-class identifiers	[["inner-class identifier", 0.018511912147849332], ["class", 0.0027585671351233], [".class file", 0.055535736443547985], ["information", 0.022366813448286966], ["object", 0.008910726103836409], ["type", 0.003938336253181508], ["meta-class", 0.018511912147849332], ["class object", 0.029147151789335645], ["inner class", 0.43720727684003463], ["name", 0.028102135663421277], ["file / class", 0.018511912147849332], ["strict formula", 0.018511912147849332], ["enclose class", 0.09255956073924665], ["example", 0.009656436226483317], ["localinnerclass.java", 0.018511912147849332]]
Generics	Wildcards	[["wildcard", 0.02772848117465091], ["simple use", 0.013864240587325456], ["question mark", 0.013864240587325456], ["generic argument expression", 0.013864240587325456], ["object", 0.006673565082022162], ["Type Information chapter", 0.013864240587325456], ["section", 0.010031106351843797], ["issue", 0.021046705858562317]]
Generics	Comparison with C++	[["comparison", 0.021829356233715208], ["C++", 0.009870509211491255], ["Java designer", 0.009189294678099456], ["inspiration", 0.013864240587325456], ["language", 0.0029495624704678524], ["reaction", 0.010914678116857604], ["Java", 0.001421736890750351], ["reference", 0.005015553175921898], ["great depth", 0.013864240587325456], ["understanding", 0.010914678116857604]]
Generics	Summary: Is casting really so bad?	[["summary", 0.013864240587325456]]
Generics	Exceptions	[["exception", 0.031860462585559], ["erasure", 0.04159272176197636], ["use", 0.006239732207631604], ["generic", 0.0477906938783385], ["catch clause", 0.013864240587325456], ["generic type", 0.010914678116857604], ["exact type", 0.021829356233715208], ["time", 0.013160678948655007], ["generic class", 0.013864240587325456], ["Throwable", 0.013864240587325456], ["generic exception", 0.013864240587325456]]
Generics	Generic methods	[["generic method", 0.02772848117465091], ["entire class", 0.013864240587325456], ["method", 0.008008278098426594], ["class", 0.012395944232724276]]
Generics	Dynamic type safety	[["dynamic type safety", 0.013864240587325456], ["generic container", 0.013864240587325456], ["pre-Java SE5 code", 0.010914678116857604], ["possibility", 0.010914678116857604], ["old-style code", 0.013864240587325456], ["container", 0.03119866103815802], ["Java SE5", 0.0036604309158430283], ["set", 0.004066006149052921], ["utility", 0.009189294678099456], ["java.util", 0.00796511564638975], ["collection", 0.007015568619520773], ["type-checking problem", 0.013864240587325456], ["situation", 0.007015568619520773], ["static method", 0.009189294678099456], ["checkedcollection", 0.013864240587325456], ["first argument", 0.013864240587325456], ["type", 0.014747812352339261], ["second argument", 0.013864240587325456]]
Generics	Generic interfaces	[["generic interface", 0.013864240587325456], ["Generics", 0.04159272176197636], ["interface", 0.003290169737163752], ["example", 0.010848081548049343], ["generator", 0.04159272176197636], ["class", 0.012395944232724276], ["object", 0.006673565082022162], ["specialization", 0.013864240587325456], ["Factory Method design pattern", 0.010914678116857604], ["new object", 0.021829356233715208], ["argument", 0.02389534693916925], ["Factory Method", 0.010914678116857604], ["extra information", 0.010914678116857604]]
Generics	Mixins	[["Mixins", 0.013864240587325456], ["term mixin", 0.013864240587325456], ["numerous meaning", 0.013864240587325456], ["time", 0.013160678948655007], ["fundamental concept", 0.010914678116857604], ["capability", 0.013864240587325456], ["multiple class", 0.013864240587325456], ["order", 0.0029495624704678524], ["result class", 0.013864240587325456], ["type", 0.014747812352339261], ["mixin", 0.013864240587325456], ["last minute", 0.013864240587325456], ["class", 0.012395944232724276]]
Generics	Compensating for the lack of latent typing	[["lack", 0.013864240587325456], ["latent typing", 0.05545696234930182], ["Java", 0.001421736890750351], ["bounded generic code", 0.013864240587325456], ["different type hierarchy", 0.013864240587325456], ["truly generic code", 0.02772848117465091], ["extra effort", 0.013864240587325456]]
Generics	Latent typing	[["latent typing", 0.05545696234930182], ["beginning", 0.00796511564638975], ["chapter", 0.005899124940935705], ["idea", 0.004066006149052921], ["code", 0.010536837589893166], ["way", 0.0026342093974732915], ["constraint", 0.01837858935619891], ["type", 0.014747812352339261], ["benefit", 0.010914678116857604], ["static type checking", 0.013864240587325456], ["more situation", 0.013864240587325456], ["change", 0.010914678116857604], ["that is more generic code", 0.013864240587325456]]
Generics	Anonymous inner classes	[["anonymous inner class", 0.032744034350572805], ["Generics", 0.04159272176197636], ["inner class", 0.010914678116857604], ["example", 0.010848081548049343], ["Generator interface", 0.013864240587325456]]
Generics	Simple generics	[["simple generic", 0.013864240587325456], ["most compelling initial motivation", 0.013864240587325456], ["generic", 0.0477906938783385], ["container class", 0.013864240587325456], ["object", 0.006673565082022162], ["Containers", 0.00796511564638975], ["depth chapter", 0.00796511564638975], ["container", 0.03119866103815802], ["place", 0.00796511564638975], ["array", 0.005583771867941144], ["different characteristic", 0.013864240587325456], ["simple array", 0.013864240587325456], ["virtually program", 0.013864240587325456], ["group", 0.007015568619520773], ["class library", 0.013864240587325456]]
Generics	Building complex models	[["complex model", 0.02772848117465091], ["important benefit", 0.013864240587325456], ["generic", 0.0477906938783385], ["ability", 0.0159302312927795], ["example", 0.010848081548049343], ["list", 0.007015568619520773], ["tuple", 0.013864240587325456]]
Generics	The mystery of erasure	[["mystery", 0.010914678116857604], ["erasure", 0.04159272176197636], ["generic", 0.0477906938783385], ["number", 0.0026342093974732915], ["thing", 0.006239732207631604], ["sense", 0.006239732207631604], ["example", 0.010848081548049343], ["ArrayList.class", 0.013864240587325456], ["ArrayList", 0.010914678116857604], ["< integer>.class", 0.013864240587325456]]
Generics	Using function objects as strategies	[["function object", 0.013864240587325456], ["strategy", 0.02772848117465091], ["final example", 0.013864240587325456], ["truly generic code", 0.02772848117465091], ["adapter approach", 0.013864240587325456], ["previous section", 0.013864240587325456], ["example", 0.010848081548049343], ["attempt", 0.010914678116857604], ["sum", 0.013864240587325456], ["sequence", 0.007015568619520773], ["element", 0.004514348768873458], ["type", 0.014747812352339261], ["general operation", 0.013864240587325456], ["afunctional style", 0.013864240587325456], ["programming", 0.009189294678099456]]
Generics	Self-bounded types	[["self-bounded type", 0.013864240587325456], ["one rather mind-bend idiom", 0.013864240587325456], ["Java generic", 0.02772848117465091]]
Generics	Generics	[["Generics", 0.04159272176197636], ["ordinary class", 0.013864240587325456], ["method", 0.008008278098426594], ["specific type", 0.010914678116857604], ["either primitive", 0.013864240587325456], ["class type", 0.013864240587325456], ["code", 0.010536837589893166], ["more type", 0.013864240587325456], ["rigidity", 0.013864240587325456], ["overconstraining.1", 0.013864240587325456], ["object-orient language", 0.013864240587325456], ["generalization", 0.013864240587325456], ["polymorphism", 0.007015568619520773], ["example", 0.010848081548049343], ["base class object", 0.013864240587325456], ["argument", 0.02389534693916925], ["class", 0.012395944232724276], ["base class", 0.005583771867941144], ["more place", 0.013864240587325456], ["2 specific type", 0.013864240587325456], ["base type", 0.009189294678099456], ["more flexibility", 0.013864240587325456], ["final class", 0.013864240587325456], ["flexibility", 0.010914678116857604], ["time", 0.013160678948655007]]
Generics	Bounds	[["Bounds", 0.04159272176197636], ["chapter", 0.005899124940935705], ["page", 0.009189294678099456], ["constraint", 0.01837858935619891], ["parameter type", 0.013864240587325456], ["generic", 0.0477906938783385], ["rule", 0.013864240587325456], ["type", 0.014747812352339261], ["potentially more important effect", 0.013864240587325456], ["method", 0.008008278098426594], ["bind type", 0.013864240587325456]]
Generics	Issues	[["issue", 0.021046705858562317], ["section", 0.010031106351843797], ["assorted set", 0.013864240587325456], ["Java generic", 0.02772848117465091]]
Generics	Compensating for erasure	[["erasure", 0.04159272176197636], ["ability", 0.0159302312927795], ["certain operation", 0.010914678116857604], ["generic code", 0.013864240587325456], ["knowledge", 0.013864240587325456], ["exact type", 0.021829356233715208], ["run time", 0.00796511564638975]]
Controlling Execution	Foreach syntax	[["foreach syntax", 0.037999249740170916], ["Java SE5", 0.006371861223874901], ["syntax", 0.013865201310382158], ["use", 0.010861756065136497], ["array", 0.009719899177527176], ["container", 0.010861756065136497], ["Arrays", 0.018999624870085458], ["Containers", 0.013865201310382158], ["depth chapter", 0.013865201310382158], ["int", 0.015996179624839794], ["sequence", 0.012212286115462087], ["item", 0.037999249740170916], ["foreach", 0.018999624870085458]]
Controlling Execution	Summary	[["chapter", 0.005134423559703298], ["study", 0.02413404842978876], ["fundamental feature", 0.02413404842978876], ["most programming language", 0.015996179624839794], ["calculation", 0.02413404842978876], ["operator precedence", 0.018999624870085458], ["type casting", 0.02413404842978876], ["selection", 0.018999624870085458], ["iteration", 0.04826809685957752], ["step", 0.02413404842978876], ["world", 0.03199235924967959], ["object-orient programming", 0.013865201310382158], ["next chapter", 0.02413404842978876], ["important issue", 0.02413404842978876], ["initialization", 0.015996179624839794], ["cleanup", 0.015996179624839794], ["object", 0.00232338932485216], ["subsequent chapter", 0.02413404842978876], ["essential concept", 0.02413404842978876], ["implementation", 0.009719899177527176]]
Controlling Execution	Iteration	[["iteration", 0.04826809685957752], ["looping", 0.02413404842978876], ["iteration statement", 0.04826809685957752], ["statement", 0.024424572230924174], ["control boolean-expression", 0.02413404842978876], ["form", 0.007077862555758788], ["while loop", 0.02413404842978876]]
Controlling Execution	return	[["several keyword", 0.02413404842978876], ["unconditional branching", 0.02413404842978876], ["branch", 0.02413404842978876], ["test", 0.02413404842978876], ["return", 0.02413404842978876], ["break", 0.07240214528936627], ["way", 0.004585475617823878], ["label statement", 0.02413404842978876], ["goto", 0.04826809685957752], ["other language", 0.013865201310382158]]
Controlling Execution	break and continue	[["break", 0.07240214528936627], ["flow", 0.018999624870085458], ["loop", 0.09653619371915503], ["body", 0.018999624870085458], ["iteration statement", 0.04826809685957752], ["rest", 0.02413404842978876], ["statement", 0.024424572230924174], ["execution", 0.041595603931146474], ["current iteration", 0.02413404842978876], ["beginning", 0.027730402620764316], ["next iteration", 0.02413404842978876]]
Controlling Execution	The infamous “goto”	[["infamous goto", 0.02413404842978876], ["goto keyword", 0.02413404842978876], ["programming language", 0.009719899177527176], ["beginning", 0.027730402620764316], ["goto", 0.04826809685957752], ["genesis", 0.02413404842978876], ["program control", 0.04826809685957752], ["assembly language", 0.018999624870085458], ["if condition A", 0.02413404842978876], ["assembly code", 0.02413404842978876], ["virtually compiler", 0.02413404842978876], ["many jump", 0.02413404842978876], ["Java compiler", 0.02413404842978876], ["own assembly code", 0.02413404842978876], ["code", 0.009170951235647757], ["Java Virtual Machine", 0.02413404842978876], ["hardware cpu", 0.02413404842978876]]
Controlling Execution	switch	[["switch", 0.018999624870085458], ["selection statement", 0.02413404842978876], ["switch statement", 0.015996179624839794], ["piece", 0.015996179624839794], ["code", 0.009170951235647757], ["value", 0.0235749324596725], ["integral expression", 0.02413404842978876], ["general form", 0.02413404842978876]]
Controlling Execution	if-else	[["if-else statement", 0.02413404842978876], ["most basic way", 0.02413404842978876], ["program flow", 0.02413404842978876], ["else", 0.02413404842978876], ["two form", 0.02413404842978876]]
Controlling Execution	Controlling Execution	[["execution", 0.041595603931146474], ["sentient creature", 0.02413404842978876], ["program", 0.004074417310513126], ["world", 0.03199235924967959], ["choice", 0.04826809685957752], ["Java", 0.0024748753283432034], ["execution control statement", 0.02413404842978876]]
Controlling Execution	true and false	[["conditional statement", 0.04826809685957752], ["truth", 0.037999249740170916], ["falsehood", 0.04826809685957752], ["conditional expression", 0.07240214528936627], ["execution path", 0.02413404842978876], ["example", 0.003147282918261229], ["b.", 0.04826809685957752], ["conditional operator", 0.018999624870085458], ["value", 0.0235749324596725], ["expression", 0.013865201310382158], ["relational operator", 0.018999624870085458], ["previous chapter", 0.015996179624839794], ["Java", 0.0024748753283432034], ["number", 0.004585475617823878], ["boolean", 0.02413404842978876], ["C", 0.008730777750678861], ["C++", 0.005727332505433198], ["boolean test", 0.02413404842978876], ["ifa", 0.04826809685957752], ["boolean value", 0.018999624870085458]]
Concurrency	New library components	[["new library component", 0.020363103362634263], ["java.util.concurrent library", 0.020363103362634263], ["Java SE5", 0.005376257907644448], ["significant number", 0.04072620672526853], ["new class", 0.013496776558458577], ["concurrency problem", 0.020363103362634263], ["more robust concurrent program", 0.020363103362634263]]
Concurrency	Performance tuning	[["significant number", 0.04072620672526853], ["class", 0.01213769539454252], ["Java se s java.util.concurrent library", 0.020363103362634263], ["performance improvement", 0.020363103362634263], ["concurrent library", 0.020363103362634263], ["regular use", 0.020363103362634263], ["BlockingQueues", 0.020363103362634263], ["one", 0.013260899508565783], ["performance", 0.013496776558458577], ["section", 0.014733187454270578], ["issue", 0.030912349229763405], ["performance tuning", 0.020363103362634263]]
Concurrency	The many faces of concurrency	[["many face", 0.020363103362634263], ["concurrency", 0.11221653438894222], ["primary reason", 0.020363103362634263], ["concurrent programming", 0.040490329675375726], ["more than one problem", 0.020363103362634263], ["more than one approach", 0.020363103362634263], ["clean mapping", 0.020363103362634263], ["two issue", 0.020363103362634263], ["often blurring", 0.020363103362634263], ["line", 0.011698763605634946], ["result", 0.008201164931038554], ["issue", 0.030912349229763405], ["special case", 0.020363103362634263], ["order", 0.004332169878499658]]
Concurrency	Summary	[["goal", 0.00916460667995892], ["chapter", 0.008664339756999316], ["foundation", 0.016030933484134605], ["concurrent programming", 0.040490329675375726], ["Java thread", 0.020363103362634263]]
Concurrency	Sharing resources	[["resource", 0.026993553116917153], ["single-thread program", 0.020363103362634263], ["one lonely entity", 0.020363103362634263], ["problem space", 0.016030933484134605], ["one thing", 0.013496776558458577], ["time", 0.019329747205837043], ["only one entity", 0.020363103362634263], ["problem", 0.021505031630577792], ["two entity", 0.020363103362634263], ["same resource", 0.020363103362634263], ["same time", 0.048092800452403814], ["two people", 0.020363103362634263], ["same space", 0.020363103362634263], ["door", 0.020363103362634263]]
Concurrency	Deadlock	[["deadlock", 0.04072620672526853], ["object", 0.00392071948568802], ["method", 0.00392071948568802], ["other form", 0.020363103362634263], ["task", 0.1754814540845242], ["mutex", 0.04072620672526853], ["one task", 0.03206186696826921], ["turn", 0.013496776558458577], ["chain", 0.020363103362634263], ["continuous loop", 0.020363103362634263], ["one", 0.013260899508565783]]
Concurrency	Active objects	[["active object", 0.020363103362634263], ["way", 0.003868995052538897], ["chapter", 0.008664339756999316], ["threading", 0.020363103362634263], ["Java", 0.001044088029144789], ["addition", 0.008201164931038554], ["task", 0.1754814540845242], ["parallel", 0.020363103362634263], ["great effort", 0.020363103362634263], ["technique", 0.016030933484134605]]
Concurrency	Simulation	[["simulation", 0.12217862017580558], ["most interesting and exciting use", 0.020363103362634263], ["concurrency", 0.11221653438894222], ["component", 0.013496776558458577], ["own task", 0.020363103362634263], ["many video game", 0.020363103362634263], ["cgi animation", 0.020363103362634263], ["movie", 0.020363103362634263], ["HorseRace.java", 0.020363103362634263], ["GreenhouseScheduler.java", 0.020363103362634263]]
Concurrency	Cooperation between tasks	[["cooperation", 0.020363103362634263], ["task", 0.1754814540845242], ["thread", 0.048092800452403814], ["more than one task", 0.016030933484134605], ["time", 0.019329747205837043], ["one task", 0.03206186696826921], ["task s resource", 0.020363103362634263], ["lock mutex", 0.020363103362634263], ["behavior", 0.008201164931038554], ["two task", 0.04072620672526853], ["share resource", 0.020363103362634263], ["usually memory", 0.020363103362634263], ["mutex", 0.04072620672526853], ["only one task", 0.020363103362634263], ["resource", 0.026993553116917153]]
Concurrency	Basic threading	[["basic threading", 0.020363103362634263], ["concurrent programming", 0.040490329675375726], ["program", 0.0068755792114909], ["separate independently run task", 0.020363103362634263], ["independent task", 0.020363103362634263], ["subtask", 0.020363103362634263], ["thread", 0.048092800452403814], ["execution", 0.011698763605634946], ["single sequential flow", 0.020363103362634263], ["control", 0.020363103362634263], ["process", 0.010304116409921136], ["single process", 0.020363103362634263], ["task", 0.1754814540845242], ["cpu", 0.020363103362634263], ["underlying mechanism", 0.020363103362634263], ["cpu time", 0.020363103362634263]]
Concurrency	Concurrency	[["concurrency", 0.11221653438894222], ["point", 0.00916460667995892], ["sequential programming", 0.020363103362634263], ["program", 0.0068755792114909], ["time", 0.019329747205837043]]
Concurrency	Terminating tasks	[["task", 0.1754814540845242], ["previous example", 0.020363103362634263], ["method", 0.00392071948568802], ["class", 0.01213769539454252], ["isCanceled", 0.020363103362634263], ["reasonable approach", 0.020363103362634263], ["problem", 0.021505031630577792], ["situation", 0.010304116409921136], ["section", 0.014733187454270578], ["issue", 0.030912349229763405], ["such termination", 0.020363103362634263]]
Polymorphism	Summary	[["polymorphism", 0.1669527722113804], ["different form", 0.06493542677117814], ["object-orient programming", 0.023693698441792296], ["same interface", 0.027335243662700914], ["base class", 0.03321990858142199], ["interface", 0.009787213775107363], ["different version", 0.04124172832938585], ["dynamically bind method", 0.04124172832938585]]
Polymorphism	Constructors and polymorphism	[["constructor", 0.0834763861056902], ["polymorphism", 0.1669527722113804], ["other kind", 0.04124172832938585], ["method", 0.007940697692532698], ["static method", 0.027335243662700914], ["static declaration", 0.04124172832938585], ["way", 0.015671878693828443], ["complex hierarchy", 0.04124172832938585], ["understanding", 0.03246771338558907], ["unpleasant entanglement", 0.04124172832938585]]
Polymorphism	Upcasting revisited	[["Upcasting", 0.04124172832938585], ["last chapter", 0.04124172832938585], ["object", 0.007940697692532698], ["own type", 0.03246771338558907], ["base type", 0.05467048732540183], ["object reference", 0.04124172832938585], ["reference", 0.014919683497995521], ["upcasting", 0.04124172832938585], ["way", 0.015671878693828443], ["inheritance tree", 0.04124172832938585], ["base class", 0.03321990858142199], ["top", 0.04124172832938585]]
Polymorphism	Covariant return types	[["Covariant return type", 0.04124172832938585], ["Java SE5", 0.010888623610419134], ["covariant return type", 0.04124172832938585], ["overridden method", 0.04124172832938585], ["derive class", 0.027335243662700914], ["type", 0.01754802988759355], ["base-class method", 0.04124172832938585]]
Polymorphism	The twist	[["twist", 0.03246771338558907], ["difficulty", 0.03246771338558907], ["Music.java", 0.04124172832938585], ["program", 0.006962611859737619], ["output", 0.023693698441792296], ["Wind.play", 0.04124172832938585], ["desire output", 0.04124172832938585], ["sense", 0.018561228718904137], ["tune", 0.04124172832938585], ["method", 0.007940697692532698]]
Polymorphism	Polymorphism	[["polymorphism", 0.1669527722113804], ["machine wrong figure", 0.04124172832938585], ["right answer", 0.04124172832938585], ["kind", 0.018561228718904137], ["confusion", 0.03246771338558907], ["idea", 0.012095081582625776], ["question", 0.023693698441792296], ["Charles Babbage", 0.04124172832938585], ["third essential feature", 0.04124172832938585], ["object-orient programming language", 0.03246771338558907], ["datum abstraction", 0.04124172832938585], ["inheritance", 0.049829862872132986]]
Polymorphism	Designing with inheritance	[["inheritance", 0.049829862872132986], ["polymorphism", 0.1669527722113804], ["clever tool", 0.04124172832938585], ["design", 0.027335243662700914], ["fact", 0.013428758996015982], ["exist class", 0.03246771338558907], ["new class", 0.027335243662700914], ["thing", 0.018561228718904137]]
Everything Is an Object	Building a Java program	[["Java program", 0.023609395203054218], ["several other issue", 0.023609395203054218], ["first Java program", 0.047218790406108435]]
Everything Is an Object	Summary	[["goal", 0.010625630933285703], ["chapter", 0.015068416968694463], ["Java", 0.00484214738154105], ["simple program", 0.023609395203054218], ["overview", 0.023609395203054218], ["language", 0.0050228056562314875], ["basic idea", 0.01564843658951719], ["example", 0.00615772744877197], ["form", 0.0069239959784596836], ["next two chapter", 0.023609395203054218], ["basic operator", 0.023609395203054218], ["Java programming", 0.023609395203054218], ["flow", 0.01858658954682273], ["program", 0.003985843021154145]]
Everything Is an Object	Coding style	[["coding style", 0.023609395203054218], ["style", 0.01858658954682273], ["Code Conventions", 0.023609395203054218], ["Java Programming Language7", 0.023609395203054218], ["first letter", 0.047218790406108435], ["class name", 0.047218790406108435], ["several word", 0.023609395203054218], ["name", 0.023893603269382342], ["embed word", 0.023609395203054218]]
Everything Is an Object	You must create all the objects	[["object", 0.02727457033522101], ["reference", 0.025622934703079265], ["new object", 0.01858658954682273], ["new operator", 0.023609395203054218], ["precede example", 0.023609395203054218]]
Everything Is an Object	Exercises	[["exercise", 0.05575976864046819], ["chapter", 0.015068416968694463], ["basic program", 0.023609395203054218], ["end", 0.010625630933285703]]
Everything Is an Object	Methods, arguments, and return values	[["method", 0.004545761722536835], ["argument", 0.013563783890591243], ["value", 0.015374955951960327], ["many language", 0.01858658954682273], ["C", 0.01708195646871951], ["C++", 0.016808475831162645], ["term function", 0.023609395203054218], ["name subroutine", 0.023609395203054218], ["term", 0.03129687317903438], ["Java", 0.00484214738154105], ["way", 0.004485791365262489], ["function", 0.01858658954682273], ["only syntactic difference", 0.023609395203054218], ["book", 0.01708195646871951], ["common Java usage", 0.023609395203054218], ["term method", 0.023609395203054218]]
Everything Is an Object	You manipulate objects with references	[["object", 0.02727457033522101], ["reference", 0.025622934703079265], ["programming language", 0.009508597021493976], ["own mean", 0.023609395203054218], ["element", 0.015374955951960327], ["memory", 0.01564843658951719], ["programmer", 0.008540978234359755], ["type", 0.015068416968694463], ["manipulation", 0.023609395203054218], ["kind", 0.010625630933285703], ["indirect representation", 0.023609395203054218], ["pointer", 0.023609395203054218], ["C", 0.01708195646871951], ["C++", 0.016808475831162645], ["special syntax", 0.01858658954682273]]
Everything Is an Object	You never need to destroy an object	[["object", 0.02727457033522101], ["most programming language", 0.01564843658951719], ["concept", 0.010625630933285703], ["lifetime", 0.013563783890591243], ["variable", 0.03129687317903438], ["significant portion", 0.01858658954682273], ["programming effort", 0.023609395203054218], ["confusion", 0.01858658954682273], ["variable lifetime", 0.023609395203054218], ["lot", 0.010625630933285703], ["bug", 0.01564843658951719], ["section", 0.008540978234359755], ["Java", 0.00484214738154105], ["issue", 0.011946801634691171], ["cleanup work", 0.023609395203054218]]
Everything Is an Object	Your first Java program	[["first Java program", 0.047218790406108435], ["first complete program", 0.023609395203054218], ["string", 0.01564843658951719], ["then date", 0.023609395203054218], ["date class", 0.023609395203054218], ["Java standard library", 0.023609395203054218]]
Everything Is an Object	Comments and embedded documentation	[["comment", 0.05575976864046819], ["embed documentation", 0.023609395203054218], ["documentation", 0.01858658954682273], ["two type", 0.023609395203054218], ["Java", 0.00484214738154105], ["traditional c-style comment", 0.023609395203054218], ["C++", 0.016808475831162645], ["many line", 0.023609395203054218], ["many programmer", 0.023609395203054218], ["line", 0.013563783890591243], ["continue comment", 0.023609395203054218]]
Everything Is an Object	Everything Is an Object	[["object", 0.02727457033522101], ["different language", 0.023609395203054218], ["somewhat different world", 0.023609395203054218], ["Ludwig Wittgenstein", 0.023609395203054218]]
Everything Is an Object	Creating new data types: class	[["new datum type", 0.023609395203054218], ["class", 0.003518172578128267], ["object", 0.02727457033522101], ["particular class", 0.023609395203054218], ["type", 0.015068416968694463], ["keyword", 0.01564843658951719], ["sense", 0.010625630933285703], ["most objectoriented language", 0.023609395203054218], ["keyword class", 0.023609395203054218], ["new type", 0.021251261866571405], ["class keyword", 0.01858658954682273], ["book", 0.01708195646871951], ["name", 0.023893603269382342], ["example", 0.00615772744877197]]
Arrays	Arrays and generics	[["array", 0.2499402645649845], ["generic", 0.029711145665104622], ["parameterized type", 0.025857909031916523]]
Arrays	Why arrays are special	[["array", 0.2499402645649845], ["number", 0.004913009590525583], ["other way", 0.020356740932234416], ["object", 0.012446728525993713]]
Arrays	Returning an array	[["array", 0.2499402645649845], ["method", 0.009957382820794971], ["just one thing", 0.025857909031916523], ["whole bunch", 0.025857909031916523], ["thing", 0.011637595784074816], ["language", 0.005501168099682105], ["C", 0.009354404732870207], ["C++", 0.006136427684392712], ["only pointer", 0.025857909031916523], ["problem", 0.006826994168437393], ["lifetime", 0.014855572832552311], ["memory leak", 0.025857909031916523]]
Arrays	Creating test data	[["test datum", 0.05171581806383305], ["array", 0.2499402645649845], ["program", 0.00436544711840692], ["tool", 0.014855572832552311], ["section", 0.009354404732870207], ["value", 0.008419618735597321], ["object", 0.012446728525993713]]
Arrays	Summary	[["chapter", 0.01100233619936421], ["Java", 0.0039774782062658625], ["reasonable support", 0.025857909031916523], ["fixedsized low-level array", 0.025857909031916523], ["sort", 0.025857909031916523], ["array", 0.2499402645649845], ["performance", 0.03427752776751384], ["flexibility", 0.020356740932234416], ["C and C++ array model", 0.025857909031916523], ["initial version", 0.025857909031916523], ["fix-sized low-level array", 0.025857909031916523], ["Java designer", 0.01713876388375692], ["primitive type", 0.05171581806383305], ["support", 0.020356740932234416], ["container", 0.011637595784074816], ["version", 0.025857909031916523], ["early version", 0.025857909031916523]]
Arrays	Arrays are first-class objects	[["array", 0.2499402645649845], ["first-class object", 0.025857909031916523], ["type", 0.005501168099682105], ["array identifier", 0.025857909031916523], ["reference", 0.018708809465740415], ["true object", 0.025857909031916523], ["heap", 0.025857909031916523], ["object", 0.012446728525993713], ["other object", 0.01713876388375692], ["part", 0.016839237471194642], ["array initialization syntax", 0.025857909031916523], ["new expression", 0.025857909031916523], ["array object", 0.07757372709574957], ["fact", 0.008419618735597321], ["only field", 0.025857909031916523], ["method", 0.009957382820794971], ["read-only length member", 0.025857909031916523], ["how many element", 0.020356740932234416], ["syntax", 0.014855572832552311], ["only other access", 0.025857909031916523]]
Arrays	Multidimensional arrays	[["multidimensional array", 0.1034316361276661], ["primitive", 0.01308459226656652], ["vector", 0.025857909031916523], ["array", 0.2499402645649845], ["curly brace", 0.025857909031916523]]
Arrays	Arrays utilities	[["array utility", 0.025857909031916523], ["java.util", 0.014855572832552311], ["Arrays class", 0.025857909031916523], ["set", 0.007583424166884415], ["static utility method", 0.020356740932234416], ["array", 0.2499402645649845], ["six basic method", 0.025857909031916523], ["two array", 0.025857909031916523], ["equality", 0.025857909031916523], ["deepequal", 0.025857909031916523], ["multidimensional array", 0.1034316361276661], ["chapter", 0.01100233619936421], ["binarySearch", 0.025857909031916523], ["element", 0.008419618735597321], ["sorted array", 0.025857909031916523], ["tostring", 0.020356740932234416], ["string representation", 0.020356740932234416], ["hashCode", 0.025857909031916523], ["hash value", 0.025857909031916523], ["Containers", 0.014855572832552311], ["depth chapter", 0.014855572832552311], ["method", 0.009957382820794971], ["primitive type", 0.05171581806383305], ["object", 0.012446728525993713], ["addition", 0.010414177690207688], ["sequence", 0.01308459226656652], ["list container", 0.025857909031916523]]
Arrays	Arrays	[["array", 0.2499402645649845], ["end", 0.011637595784074816], ["Initialization & Cleanup chapter", 0.025857909031916523]]
