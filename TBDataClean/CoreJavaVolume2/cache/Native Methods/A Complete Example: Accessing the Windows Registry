
985

gcc -D_WINDOWS -mno-cygwin -I jdk\include -I jdk\include\win32 -D__int64="long long"
-I c:\cygwin\usr\include\w32api -o InvocationTest

Before you run the program under Linux/UNIX, make sure that the LD_LIBRARY_PATH
contains the directories for the shared libraries. For example, if you use the bash
shell on Linux, issue the following command:
export LD_LIBRARY_PATH=jdk/jre/lib/i386/client:$LD_LIBRARY_PATH

Invocation API Functions

• jint JNI_CreateJavaVM(JavaVM** p_jvm, void** p_env, JavaVMInitArgs* vm_args)
initializes the Java virtual machine. The function returns 0 if successful, JNI_ERR on
failure.
Parameters:

p_jvm

Filled with a pointer to the invocation API function table

p_env

Filled with a pointer to the JNI function table

vm_args

The virtual machine arguments

• jint DestroyJavaVM(JavaVM* jvm)
destroys the virtual machine. Returns 0 on success, a negative number on
failure. This function must be called through a virtual machine pointer, that is,
(*jvm)->DestroyJavaVM(jvm).

12.10 A Complete Example: Accessing the Windows Registry
In this section, we describe a full, working example that covers everything we
discussed in this chapter: using native methods with strings, arrays, objects,
constructor calls, and error handling. We’ll show you how to put a Java platform
wrapper around a subset of the ordinary C-based APIs used to work with the
Windows registry. Of course, the Windows registry being a Windows-specific
feature, such a program is inherently nonportable. For that reason, the standard
Java library has no support for the registry, and it makes sense to use native
methods to gain access to it.

12.10.1 Overview of the Windows Registry
The Windows registry is a data depository that holds configuration information
for the Windows operating system and application programs. It provides a single
point for administration and backup of system and application preferences. On
the downside, the registry is also a single point of failure—if you mess up the
registry, your computer could malfunction or even fail to boot!

From the Library of Hristo Dimov Hristov

986

Chapter 12

Native Methods

We don’t suggest that you use the registry to store configuration parameters for
your Java programs. The Java preferences API is a better solution (see Volume I,
Chapter 13 for more information). We’ll simply use the registry to demonstrate
how to wrap a nontrivial native API into a Java class.
The principal tool for inspecting the registry is the registry editor. Because of the
potential for error by naive but enthusiastic users, there is no icon for launching
the registry editor. Instead, start a DOS shell (or open the Start → Run dialog box)
and type regedit. Figure 12.4 shows the registry editor in action.

Figure 12.4 The registry editor
The left side shows the keys, which are arranged in a tree structure. Note that
each key starts with one of the HKEY nodes like
HKEY_CLASSES_ROOT
HKEY_CURRENT_USER
HKEY_LOCAL_MACHINE
...

From the Library of Hristo Dimov Hristov

12.10 A Complete Example: Accessing the Windows Registry

987

The right side shows the name/value pairs associated with a particular key. For
example, if you installed Java SE 7, the key
HKEY_LOCAL_MACHINE\Software\JavaSoft\Java Runtime Environment

contains a name/value pair such as
CurrentVersion="1.7.0_10"

In this case, the value is a string. The values can also be integers or arrays of bytes.

12.10.2 A Java Platform Interface for Accessing the Registry
We create a simple interface to access the registry from Java code, and then implement this interface with native code. Our interface allows only a few registry
operations; to keep the code size down, we omitted some important operations
such as adding, deleting, and enumerating keys. (It should be easy to add the
remaining registry API functions.)
Even with the limited subset that we supply, you can
• Enumerate all names stored in a key
• Read the value stored with a name
• Set the value stored with a name
Here is the Java class that encapsulates a registry key:
public class Win32RegKey
{
public Win32RegKey(int theRoot, String thePath) { . . . }
public Enumeration names() { . . . }
public native Object getValue(String name);
public native void setValue(String name, Object value);
public static final int HKEY_CLASSES_ROOT = 0×80000000;
public static final int HKEY_CURRENT_USER = 0×80000001;
public static final int HKEY_LOCAL_MACHINE = 0×80000002;
...
}

The names method returns an enumeration that holds all the names stored with the
key. You can get at them with the familiar hasMoreElements/nextElement methods. The
getValue method returns an object that is either a string, an Integer object, or a
byte array. The value parameter of the setValue method must also be of one of
these three types.

From the Library of Hristo Dimov Hristov

988

Chapter 12

Native Methods

12.10.3 Implementation of Registry Access Functions as Native Methods
We need to implement three actions:
• Get the value of a name
• Set the value of a name
• Iterate through the names of a key
Fortunately, you have seen essentially all the tools that are required, such as the
conversion between Java strings and arrays and those of C. You also saw how to
raise a Java exception in case something goes wrong.
Two issues make these native methods more complex than the preceding examples. The getValue and setValue methods deal with the type Object, which can be one
of String, Integer, or byte[]. The enumeration object stores the state between successive
calls to hasMoreElements and nextElement.
Let us first look at the getValue method. The method (shown in Listing 12.22) goes
through the following steps:
1.
2.
3.
4.
5.
6.
7.

8.

Opens the registry key. To read their values, the registry API requires that
keys be open.
Queries the type and size of the value associated with the name.
Reads the data into a buffer.
Calls NewStringUTF to create a new string with the value data if the type is REG_SZ
(a string).
Invokes the Integer constructor if the type is REG_DWORD (a 32-bit integer).
Calls NewByteArray to create a new byte array, then SetByteArrayRegion to copy the
value data into the byte array, if the type is REG_BINARY.
If the type is none of these or if an error occurred when an API function was
called, throws an exception and releases all resources that had been acquired
up to that point.
Closes the key and returns the object (String, Integer, or byte[]) that had been
created.

As you can see, this example illustrates quite nicely how to generate Java objects
of different types.
In this native method, coping with the generic return type is not difficult. The
jstring, jobject, or jarray reference is simply returned as a jobject. However, the setValue
method receives a reference to an Object and must determine the Object’s exact type
to save the Object as a string, integer, or byte array. We can make this determination
by querying the class of the value object, finding the class references for

From the Library of Hristo Dimov Hristov

12.10 A Complete Example: Accessing the Windows Registry

989

java.lang.String, java.lang.Integer, and byte[], and comparing them with the IsAssignableFrom

function.
If class1 and class2 are two class references, then the call
(*env)->IsAssignableFrom(env, class1, class2)

returns JNI_TRUE when class1 and class2 are the same class or when class1 is a subclass
of class2. In either case, references to objects of class1 can be cast to class2. For
example, when
(*env)->IsAssignableFrom(env, (*env)->GetObjectClass(env, value), (*env)->FindClass(env, "[B"))

is true, we know that value is a byte array.
Here is an overview of the steps in the setValue method:
1.
2.
3.
4.
5.
6.
7.
8.

Open the registry key for writing.
Find the type of the value to write.
Call GetStringUTFChars to get a pointer to the characters if the type is String.
Call the intValue method to get the integer stored in the wrapper object if the
type is Integer.
Call GetByteArrayElements to get a pointer to the bytes if the type is byte[].
Pass the data and length to the registry.
Close the key.
Release the pointer to the data if the type is String or byte[].

Finally, let us turn to the native methods that enumerate keys. These are methods
of the Win32RegKeyNameEnumeration class (see Listing 12.21). When the enumeration process
starts, we must open the key. For the duration of the enumeration, we must retain
the key handle—that is, the key handle must be stored with the enumeration
object. The key handle is of type DWORD (a 32-bit quantity), so it can be stored in a
Java integer. We store it in the hkey field of the enumeration class. When the enumeration starts, the field is initialized with SetIntField. Subsequent calls read the
value with GetIntField.
In this example, we store three other data items with the enumeration object.
When the enumeration first starts, we can query the registry for the count of
name/value pairs and the length of the longest name, which we need so we can
allocate C character arrays to hold the names. These values are stored in the count
and maxsize fields of the enumeration object. Finally, the index field, initialized with
-1 to indicate the start of the enumeration, is set to 0 once the other instance fields
are initialized, and is incremented after every enumeration step.
Let’s walk through the native methods that support the enumeration. The
hasMoreElements method is simple:

From the Library of Hristo Dimov Hristov

990

Chapter 12

1.
2.

3.

Native Methods

Retrieve the index and count fields.
If the index is -1, call the startNameEnumeration function, which opens the key,
queries the count and maximum length, and initializes the hkey, count, maxsize,
and index fields.
Return JNI_TRUE if index is less than count, and JNI_FALSE otherwise.

The nextElement method needs to work a little harder:
1.
2.

3.
4.
5.
6.

Retrieve the index and count fields.
If the index is -1, call the startNameEnumeration function, which opens the key,
queries the count and maximum length, and initializes the hkey, count, maxsize,
and index fields.
If index equals count, throw a NoSuchElementException.
Read the next name from the registry.
Increment index.
If index equals count, close the key.

compiling, remember to run javah on both Win32RegKey and
Win32RegKeyNameEnumeration. The complete command line for the Microsoft compiler is

Before

cl -I jdk\include -I jdk\include\win32 -LD Win32RegKey.c advapi32.lib -FeWin32RegKey.dll

With Cygwin, use
gcc -mno-cygwin -D __int64="long long" -I jdk\include -I jdk\include\win32
-I c:\cygwin\usr\include\w32api -shared -Wl,--add-stdcall-alias -o Win32RegKey.dll
Win32RegKey.c

As the registry API is specific to Windows, this program will not work on other
operating systems.
Listing 12.23 shows a program to test our new registry functions. We add three
name/value pairs, a string, an integer, and a byte array to the key
HKEY_CURRENT_USER\Software\JavaSoft\Java Runtime Environment

We then enumerate all names of that key and retrieve their values. The program
will print
Default user=Harry Hacker
Lucky number=13
Small primes=2 3 5 7 11 13

Although adding these name/value pairs to that key probably does no harm,
you might want to use the registry editor to remove them after running this
program.

From the Library of Hristo Dimov Hristov

12.10 A Complete Example: Accessing the Windows Registry

Listing 12.21
1

991

win32reg/Win32RegKey.java

import java.util.*;

2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

/**
* A Win32RegKey object can be used to get and set values of a registry key in the Windows
* registry.
* @version 1.00 1997-07-01
* @author Cay Horstmann
*/
public class Win32RegKey
{
public static final int HKEY_CLASSES_ROOT = 0x80000000;
public static final int HKEY_CURRENT_USER = 0x80000001;
public static final int HKEY_LOCAL_MACHINE = 0x80000002;
public static final int HKEY_USERS = 0x80000003;
public static final int HKEY_CURRENT_CONFIG = 0x80000005;
public static final int HKEY_DYN_DATA = 0x80000006;

17
18
19

private int root;
private String path;

20
21
22
23
24
25
26

/**
* Gets the value of a registry entry.
* @param name the entry name
* @return the associated value
*/
public native Object getValue(String name);

27
28
29
30
31
32
33

/**
* Sets the value of a registry entry.
* @param name the entry name
* @param value the new value
*/
public native void setValue(String name, Object value);

34
35
36
37
38
39
40
41
42
43
44
45

/**
* Construct a registry key object.
* @param theRoot one of HKEY_CLASSES_ROOT, HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_USERS,
* HKEY_CURRENT_CONFIG, HKEY_DYN_DATA
* @param thePath the registry key path
*/
public Win32RegKey(int theRoot, String thePath)
{
root = theRoot;
path = thePath;
}
(Continues)

From the Library of Hristo Dimov Hristov

992

Chapter 12

Native Methods

Listing 12.21 (Continued)
46

/**
* Enumerates all names of registry entries under the path that this object describes.
* @return an enumeration listing all entry names
*/
public Enumeration<String> names()
{
return new Win32RegKeyNameEnumeration(root, path);
}

47
48
49
50
51
52
53
54
55

static
{
System.loadLibrary("Win32RegKey");
}

56
57
58
59
60

}

61
62
63
64
65
66
67
68
69
70
71

class Win32RegKeyNameEnumeration implements Enumeration<String>
{
public native String nextElement();
public native boolean hasMoreElements();
private int root;
private String path;
private int index = -1;
private int hkey = 0;
private int maxsize;
private int count;

72

Win32RegKeyNameEnumeration(int theRoot, String thePath)
{
root = theRoot;
path = thePath;
}

73
74
75
76
77
78

}

79
80
81
82
83
84

class Win32RegKeyException extends RuntimeException
{
public Win32RegKeyException()
{
}

85

public Win32RegKeyException(String why)
{
super(why);
}

86
87
88
89
90

}

From the Library of Hristo Dimov Hristov

12.10 A Complete Example: Accessing the Windows Registry

Listing 12.22
1
2
3
4

993

win32reg/Win32RegKey.c

/**
@version 1.00 1997-07-01
@author Cay Horstmann
*/

5
6
7
8
9
10

#include "Win32RegKey.h"
#include "Win32RegKeyNameEnumeration.h"
#include <string.h>
#include <stdlib.h>
#include <windows.h>

11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

JNIEXPORT jobject JNICALL Java_Win32RegKey_getValue(JNIEnv* env, jobject this_obj, jobject name)
{
const char* cname;
jstring path;
const char* cpath;
HKEY hkey;
DWORD type;
DWORD size;
jclass this_class;
jfieldID id_root;
jfieldID id_path;
HKEY root;
jobject ret;
char* cret;

26
27
28

/* get the class */
this_class = (*env)->GetObjectClass(env, this_obj);

29
30
31
32

/* get the field IDs */
id_root = (*env)->GetFieldID(env, this_class, "root", "I");
id_path = (*env)->GetFieldID(env, this_class, "path", "Ljava/lang/String;");

33
34
35
36
37

/* get the fields */
root = (HKEY) (*env)->GetIntField(env, this_obj, id_root);
path = (jstring)(*env)->GetObjectField(env, this_obj, id_path);
cpath = (*env)->GetStringUTFChars(env, path, NULL);

38
39
40
41
42
43
44
45
46

/* open the registry key */
if (RegOpenKeyEx(root, cpath, 0, KEY_READ, &hkey) != ERROR_SUCCESS)
{
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Open key failed");
(*env)->ReleaseStringUTFChars(env, path, cpath);
return NULL;
}
(Continues)

From the Library of Hristo Dimov Hristov

994

Chapter 12

Native Methods

Listing 12.22 (Continued)
47
48
49

(*env)->ReleaseStringUTFChars(env, path, cpath);
cname = (*env)->GetStringUTFChars(env, name, NULL);

50
51
52
53
54
55
56
57
58
59

/* find the type and size of the value */
if (RegQueryValueEx(hkey, cname, NULL, &type, NULL, &size) != ERROR_SUCCESS)
{
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Query value key failed");
RegCloseKey(hkey);
(*env)->ReleaseStringUTFChars(env, name, cname);
return NULL;
}

60
61
62

/* get memory to hold the value */
cret = (char*)malloc(size);

63
64
65
66
67
68
69
70
71
72
73

/* read the value */
if (RegQueryValueEx(hkey, cname, NULL, &type, cret, &size) != ERROR_SUCCESS)
{
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Query value key failed");
free(cret);
RegCloseKey(hkey);
(*env)->ReleaseStringUTFChars(env, name, cname);
return NULL;
}

74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

/* depending on the type, store the value in a string,
integer or byte array */
if (type == REG_SZ)
{
ret = (*env)->NewStringUTF(env, cret);
}
else if (type == REG_DWORD)
{
jclass class_Integer = (*env)->FindClass(env, "java/lang/Integer");
/* get the method ID of the constructor */
jmethodID id_Integer = (*env)->GetMethodID(env, class_Integer, "<init>", "(I)V");
int value = *(int*) cret;
/* invoke the constructor */
ret = (*env)->NewObject(env, class_Integer, id_Integer, value);
}
else if (type == REG_BINARY)
{
ret = (*env)->NewByteArray(env, size);
(*env)->SetByteArrayRegion(env, (jarray) ret, 0, size, cret);
}

From the Library of Hristo Dimov Hristov

12.10 A Complete Example: Accessing the Windows Registry

995

else
{
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Unsupported value type");
ret = NULL;
}

95
96
97
98
99
100
101

free(cret);
RegCloseKey(hkey);
(*env)->ReleaseStringUTFChars(env, name, cname);

102
103
104
105

return ret;

106
107

}

108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

JNIEXPORT void JNICALL Java_Win32RegKey_setValue(JNIEnv* env, jobject this_obj,
jstring name, jobject value)
{
const char* cname;
jstring path;
const char* cpath;
HKEY hkey;
DWORD type;
DWORD size;
jclass this_class;
jclass class_value;
jclass class_Integer;
jfieldID id_root;
jfieldID id_path;
HKEY root;
const char* cvalue;
int ivalue;

126
127
128

/* get the class */
this_class = (*env)->GetObjectClass(env, this_obj);

129
130
131
132

/* get the field IDs */
id_root = (*env)->GetFieldID(env, this_class, "root", "I");
id_path = (*env)->GetFieldID(env, this_class, "path", "Ljava/lang/String;");

133
134
135
136
137

/* get the fields */
root = (HKEY)(*env)->GetIntField(env, this_obj, id_root);
path = (jstring)(*env)->GetObjectField(env, this_obj, id_path);
cpath = (*env)->GetStringUTFChars(env, path, NULL);

138
139
140
141

/* open the registry key */
if (RegOpenKeyEx(root, cpath, 0, KEY_WRITE, &hkey) != ERROR_SUCCESS)
{
(Continues)

From the Library of Hristo Dimov Hristov

996

Chapter 12

Native Methods

Listing 12.22 (Continued)
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Open key failed");
(*env)->ReleaseStringUTFChars(env, path, cpath);
return;

142
143
144
145
146

}

147
148
149

(*env)->ReleaseStringUTFChars(env, path, cpath);
cname = (*env)->GetStringUTFChars(env, name, NULL);

150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185

class_value = (*env)->GetObjectClass(env, value);
class_Integer = (*env)->FindClass(env, "java/lang/Integer");
/* determine the type of the value object */
if ((*env)->IsAssignableFrom(env, class_value, (*env)->FindClass(env, "java/lang/String")))
{
/* it is a string--get a pointer to the characters */
cvalue = (*env)->GetStringUTFChars(env, (jstring) value, NULL);
type = REG_SZ;
size = (*env)->GetStringLength(env, (jstring) value) + 1;
}
else if ((*env)->IsAssignableFrom(env, class_value, class_Integer))
{
/* it is an integer--call intValue to get the value */
jmethodID id_intValue = (*env)->GetMethodID(env, class_Integer, "intValue", "()I");
ivalue = (*env)->CallIntMethod(env, value, id_intValue);
type = REG_DWORD;
cvalue = (char*)&ivalue;
size = 4;
}
else if ((*env)->IsAssignableFrom(env, class_value, (*env)->FindClass(env, "[B")))
{
/* it is a byte array--get a pointer to the bytes */
type = REG_BINARY;
cvalue = (char*)(*env)->GetByteArrayElements(env, (jarray) value, NULL);
size = (*env)->GetArrayLength(env, (jarray) value);
}
else
{
/* we don't know how to handle this type */
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Unsupported value type");
RegCloseKey(hkey);
(*env)->ReleaseStringUTFChars(env, name, cname);
return;
}

186
187

/* set the value */

From the Library of Hristo Dimov Hristov

12.10 A Complete Example: Accessing the Windows Registry

997

if (RegSetValueEx(hkey, cname, 0, type, cvalue, size) != ERROR_SUCCESS)
{
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Set value failed");
}

188
189
190
191
192
193

RegCloseKey(hkey);
(*env)->ReleaseStringUTFChars(env, name, cname);

194
195
196

/* if the value was a string or byte array, release the pointer */
if (type == REG_SZ)
{
(*env)->ReleaseStringUTFChars(env, (jstring) value, cvalue);
}
else if (type == REG_BINARY)
{
(*env)->ReleaseByteArrayElements(env, (jarray) value, (jbyte*) cvalue, 0);
}

197
198
199
200
201
202
203
204
205
206

}

207
208
209
210
211
212
213
214
215
216

/* helper function to start enumeration of names */
static int startNameEnumeration(JNIEnv* env, jobject this_obj, jclass this_class)
{
jfieldID id_index;
jfieldID id_count;
jfieldID id_root;
jfieldID id_path;
jfieldID id_hkey;
jfieldID id_maxsize;

217
218
219
220
221
222
223

HKEY root;
jstring path;
const char* cpath;
HKEY hkey;
DWORD maxsize = 0;
DWORD count = 0;

224
225
226
227
228
229
230
231

/* get the field IDs */
id_root = (*env)->GetFieldID(env, this_class, "root", "I");
id_path = (*env)->GetFieldID(env, this_class, "path", "Ljava/lang/String;");
id_hkey = (*env)->GetFieldID(env, this_class, "hkey", "I");
id_maxsize = (*env)->GetFieldID(env, this_class, "maxsize", "I");
id_index = (*env)->GetFieldID(env, this_class, "index", "I");
id_count = (*env)->GetFieldID(env, this_class, "count", "I");

232
233
234
235

/* get the field values */
root = (HKEY)(*env)->GetIntField(env, this_obj, id_root);
path = (jstring)(*env)->GetObjectField(env, this_obj, id_path);
(Continues)

From the Library of Hristo Dimov Hristov

998

Chapter 12

Native Methods

Listing 12.22 (Continued)
cpath = (*env)->GetStringUTFChars(env, path, NULL);

236
237

/* open the registry key */
if (RegOpenKeyEx(root, cpath, 0, KEY_READ, &hkey) != ERROR_SUCCESS)
{
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Open key failed");
(*env)->ReleaseStringUTFChars(env, path, cpath);
return -1;
}
(*env)->ReleaseStringUTFChars(env, path, cpath);

238
239
240
241
242
243
244
245
246
247

/* query count and max length of names */
if (RegQueryInfoKey(hkey, NULL, NULL, NULL, NULL, NULL, NULL, &count, &maxsize,
NULL, NULL, NULL) != ERROR_SUCCESS)
{
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Query info key failed");
RegCloseKey(hkey);
return -1;
}

248
249
250
251
252
253
254
255
256
257

/* set the field values */
(*env)->SetIntField(env, this_obj, id_hkey, (DWORD) hkey);
(*env)->SetIntField(env, this_obj, id_maxsize, maxsize + 1);
(*env)->SetIntField(env, this_obj, id_index, 0);
(*env)->SetIntField(env, this_obj, id_count, count);
return count;

258
259
260
261
262
263
264

}

265
266
267
268
269
270
271
272
273
274

JNIEXPORT jboolean JNICALL Java_Win32RegKeyNameEnumeration_hasMoreElements(JNIEnv* env,
jobject this_obj)
{ jclass this_class;
jfieldID id_index;
jfieldID id_count;
int index;
int count;
/* get the class */
this_class = (*env)->GetObjectClass(env, this_obj);

275
276
277
278

/* get the field IDs */
id_index = (*env)->GetFieldID(env, this_class, "index", "I");
id_count = (*env)->GetFieldID(env, this_class, "count", "I");

279
280
281
282

index = (*env)->GetIntField(env, this_obj, id_index);
if (index == -1) /* first time */
{

From the Library of Hristo Dimov Hristov

12.10 A Complete Example: Accessing the Windows Registry

count = startNameEnumeration(env, this_obj, this_class);
index = 0;

283
284

}
else
count = (*env)->GetIntField(env, this_obj, id_count);
return index < count;

285
286
287
288
289

999

}

290
291
292
293
294
295
296
297
298

JNIEXPORT jobject JNICALL Java_Win32RegKeyNameEnumeration_nextElement(JNIEnv* env,
jobject this_obj)
{
jclass this_class;
jfieldID id_index;
jfieldID id_hkey;
jfieldID id_count;
jfieldID id_maxsize;

299
300
301
302
303

HKEY hkey;
int index;
int count;
DWORD maxsize;

304
305
306

char* cret;
jstring ret;

307
308
309

/* get the class */
this_class = (*env)->GetObjectClass(env, this_obj);

310
311
312
313
314
315

/* get the field IDs */
id_index = (*env)->GetFieldID(env, this_class, "index", "I");
id_count = (*env)->GetFieldID(env, this_class, "count", "I");
id_hkey = (*env)->GetFieldID(env, this_class, "hkey", "I");
id_maxsize = (*env)->GetFieldID(env, this_class, "maxsize", "I");

316
317
318
319
320
321
322
323
324

index = (*env)->GetIntField(env, this_obj, id_index);
if (index == -1) /* first time */
{
count = startNameEnumeration(env, this_obj, this_class);
index = 0;
}
else
count = (*env)->GetIntField(env, this_obj, id_count);

325
326
327
328
329
330
331

if (index >= count) /* already at end */
{
(*env)->ThrowNew(env, (*env)->FindClass(env, "java/util/NoSuchElementException"),
"past end of enumeration");
return NULL;
}
(Continues)

From the Library of Hristo Dimov Hristov

1000

Chapter 12

Native Methods

Listing 12.22 (Continued)
332

maxsize = (*env)->GetIntField(env, this_obj, id_maxsize);
hkey = (HKEY)(*env)->GetIntField(env, this_obj, id_hkey);
cret = (char*)malloc(maxsize);

333
334
335
336

/* find the next name */
if (RegEnumValue(hkey, index, cret, &maxsize, NULL, NULL, NULL, NULL) != ERROR_SUCCESS)
{
(*env)->ThrowNew(env, (*env)->FindClass(env, "Win32RegKeyException"),
"Enum value failed");
free(cret);
RegCloseKey(hkey);
(*env)->SetIntField(env, this_obj, id_index, count);
return NULL;
}

337
338
339
340
341
342
343
344
345
346
347

ret = (*env)->NewStringUTF(env, cret);
free(cret);

348
349
350

/* increment index */
index++;
(*env)->SetIntField(env, this_obj, id_index, index);

351
352
353
354

if (index == count) /* at end */
{
RegCloseKey(hkey);
}

355
356
357
358
359

return ret;

360
361

}

Listing 12.23
1

win32reg/Win32RegKeyTest.java

import java.util.*;

2
3
4
5
6
7
8
9
10
11
12

/**
@version 1.02 2007-10-26
@author Cay Horstmann
*/
public class Win32RegKeyTest
{
public static void main(String[] args)
{
Win32RegKey key = new Win32RegKey(
Win32RegKey.HKEY_CURRENT_USER, "Software\\JavaSoft\\Java Runtime Environment");

13
14

key.setValue("Default user", "Harry Hacker");

From the Library of Hristo Dimov Hristov

12.10 A Complete Example: Accessing the Windows Registry

1001

key.setValue("Lucky number", new Integer(13));
key.setValue("Small primes", new byte[] { 2, 3, 5, 7, 11 });

15
16
17

Enumeration<String> e = key.names();

18
19

while (e.hasMoreElements())
{
String name = e.nextElement();
System.out.print(name + "=");

20
21
22
23
24

Object value = key.getValue(name);

25
26

if (value instanceof byte[])
for (byte b : (byte[]) value) System.out.print((b & 0xFF) + " ");
else
System.out.print(value);

27
28
29
30
31

System.out.println();

32

}

33

}

34
35

}

Type Inquiry Functions

• jboolean IsAssignableFrom(JNIEnv *env, jclass cl1, jclass cl2)
returns JNI_TRUE if objects of the first class can be assigned to objects of the second
class, and JNI_FALSE otherwise.This tests if the classes are the same, or cl1 is a subclass
of cl2, or cl2 represents an interface implemented by cl1 or one of its superclasses.
• jclass GetSuperclass(JNIEnv *env, jclass cl)
returns the superclass of a class. If cl represents the class Object or an interface,
returns NULL.

You have now reached the end of the second volume of Core Java, completing a
long journey in which you encountered many advanced APIs. We started out
with topics that every Java programmer needs to know: streams, XML, networking,
databases, and internationalization. Three long chapters covered graphics and
GUI programming. We concluded with very technical chapters on security, remote
methods, annotation processing, and native methods. We hope that you enjoyed
your tour through the vast breadth of the Java APIs, and that you will be able to
apply your newly gained knowledge in your projects.

From the Library of Hristo Dimov Hristov

Index
Numbers
- (minus sign)

in permissions, 521
in policy files, 520
in regular expressions, 129
in URLs, 270
_ (underscore)
in native method names, 941
in SQL, 289, 319
in URLs, 270
, (comma)
decimal, 372, 378, 686
in DTDs, 165
; (semicolon)
in classpath, 292
in method signatures, 962
in SQL, 293
not needed, in annotations, 455
: (colon)
as delimiter in text files, 63
in classpath, 292
in permissions, 521
in URLs, 258
!= operator (SQL), 289
? (question mark)
in DTDs, 165
in e-mail URIs, 927
in glob patterns, 112–129
in masks, 692
in prepared queries, 309
in URLs, 269
/ (slash)
ending, in codebase URLs, 516
in method signatures, 962
in paths, 101
in URLs, 258
. (period)
decimal, 372, 378, 686
in method signatures, 962
in regular expressions, 129–130
in URLs, 270
leading, in file names, 516

.., in paths, 102
^ (caret), in regular expressions, 129, 132
~ (tilde), in URLs, 270
' (single quote), in masks, 692
'. . .', in SQL, 289
". . .", in XML, 146
(. . .)

in method signatures, 962
in regular expressions, 131, 133
[ (array), type code, 87, 961
{. . .}

in
in
in
in

annotations, 466
glob patterns, 112
message formatting, 400–404
regular expressions, 132

[. . .]
in DOCTYPE declaration, 164

in glob patterns, 112
in regular expressions, 129–130
in XPath, 190
@ (at)
in annotations, 455
in URIs, 258
in XPath, 190
$ (dollar sign)
in native method names, 941
in regular expressions, 129–130, 132,
141
${. . .}, in policy files, 521
* (asterisk)
in DTDs, 165
in glob patterns, 112
in masks, 692
in permissions, 521
in policy files, 520
in regular expressions, 129, 132
\ (backslash)
in glob patterns, 112
in paths, 56, 101
in permissions (Windows), 520
in regular expressions, 129–130, 141
\\|, in regular expressions, 64

1002

From the Library of Hristo Dimov Hristov

Index

& (ampersand)

in CDATA sections, 149
in e-mail URIs, 927
in entity references, 148
parsing, 165
&&, in regular expressions, 130
&#, &#x, in character references, 148
# (number sign)
in masks, 692
in message formatting, 403–404
in URLs, 258
% (percent sign)
in fortune program, 933
in locales, 378
in SQL, 289, 319
in URLs, 270
%20, in URIs, 927
+ (plus sign)
in DTDs, 165
in regular expressions, 129, 132
in URLs, 270
< (left angle bracket)
in CDATA sections, 149
in message formatting, 404
parsing, 165
<!--. . .-->, <?. . .?>, <![CDATA[. . .]]>, in XML,
149
<. . .>, in regular expressions, 131
≤ operator, 404
=, <> operators (SQL), 289
== operator, in enumerations, 94
> (right angle bracket), in XML, 149
| (vertical bar)
as delimiter in text files, 63
in DTDs, 165, 167
in message formatting, 403
in regular expressions, 129, 131
\0, in regular expressions, 130
1931 CIE XYZ color specification, 836
2D graphics, 765–937
printing, 852–862
Xxx2D, Xxx2D.Float, Xxx2D.Double classes, 770–771

A
A in masks, 692
\a, \A, in regular expressions, 130, 132
abort method (LoginModule), 546
absolute method (ResultSet), 323, 327
AbstractCellEditor class, 629–631
isCellEditable method, 630

1003

AbstractFormatter class
getDocumentFilter method, 689, 701
stringToValue, valueToString methods, 693, 701
AbstractListModel class, 589
AbstractProcessor class, 476
AbstractSpinnerModel class
fireStateChanged method, 706
get/setValue methods, 705, 712
getNextValue, getPreviousValue methods, 705–706,

712
AbstractTableModel class, 605
isCellEditable method, 628
accept method (ServerSocket), 242, 245
acceptChanges method (CachedRowSet), 331–332
AccessController class, getContext method, 536

Action listeners
annotating, 457–462
for text fields, 683
installing, 457
action.properties file, 449
ActionListener interface, 457
actionPerformed method, 458
@ActionListenerFor annotation, 457, 472
ActionListenerInstaller class, 457
add method
of Area, 786–788
of AttributeSet, 881
of DefaultMutableTreeNode, 642, 650
of SystemTray, 932, 936
addActionListener method
injecting into frame constructor, 458
of TrayIcon, 937
using annotations instead of, 457
addAttribute method (AttributesImpl), 232
addBatch method (Statement), 345–347
addCellEditorListener method (CellEditor), 638
addChangeListener method (JTabbedPane), 737, 741
addColumn method (JTable), 617, 622
addDocumentListener method (Document), 682, 685
addElement method (DefaultListModel), 595
addFlavorListener method (Clipboard), 894
addHyperlinkListener method (JEditorPane), 718
addListSelectionListener method (JFrame), 587
addRecipient method (MimeMessage), 278
addTab method (JTabbedPane), 736, 740
addTreeModelListener method (TreeModel), 672, 680
addTreeSelectionListener method (JTree), 664
addVetoableChangeListener method (JComponent), 759
AES (Advanced Encryption Standard), 568
generating keys in, 569–574

From the Library of Hristo Dimov Hristov

1004

Index

aes/AESTest.java, 571
aes/Util.java, 572

Affine transformations, 802
on pixels, 843
AffineTransform class, 802–804
constructor, 803
getXxxInstance methods, 802–804
setToXxx methods, 802, 804
AffineTransformOp class, 843
constructor, 850
TYPE_XXX fields, 843, 850
afterLast method (ResultSet), 323, 327
Agent code, 487–488
Aliases, for namespaces, 172, 197
allMatch method (Stream), 13
allocate method (ByteBuffer), 123, 125
AllPermission class, 513, 519, 523
Alpha channel, 807–811
Alpha composites, 817–818
AlphaComposite class, 809
getInstance method, 809, 817
&amp;, entity reference, 148
Anchor rectangle, 798
andFilter method (RowFilter), 615, 625
AnnotatedConstruct interface, 477
AnnotatedElement interface
getAnnotation method, 457, 462, 475, 477
getAnnotations, getDeclaredAnnotations,
isAnnotationPresent methods, 462
getAnnotationsByType methods, 462, 475, 477
Annotation interface
annotationType method, 463
equals, hashCode, toString methods, 464
extending, 463
Annotation interfaces, 456, 462–463
methods of, 463
predefined, 470–475
Annotation processors, 476
at bytecode level, 458, 481
at runtime, 458
Annotations, 455–462
applicability of, 472–473
documented, 472, 474
elements of, 456, 463, 466
for compilation, 471
for local variables, 467
for managing resources, 472
for packages, 467
generating source code with, 477–480
inherited, 474

marker, 465
meta, 456, 470–475
no annotations for, 468
no circular dependencies in, 466
processing tools for, 455
repeatable, 475
retaining, 472
single value, 465
source-level, 475–480
standard, 470–475
syntax of, 462–469
transient, 473
vs. Javadoc comments, 455
Antialiasing, 817–819
ANY element content (DTD), 165
anyMatch method (Stream), 13
Apache, 143, 150
Apache Derby database, 291
connecting to, 295
default user name/password for, 295
driver for, 292
populating, 305–309
registering driver class for, 294
starting, 293
Apache HttpClient, 274
Apache Tomcat, 349
Apollo 11, launch of, 355, 361
&apos;, entity reference, 148
append method
of Appendable, 54–55
of Book, 873
of shape classes, 776, 786
Appendable interface, 52–55
appendChild method (Node), 209, 212
Applets
accessing browser’s cache, 261
class loaders for, 496
code base of, 510
executing from secure intranet, 547
not exiting JVM, 509
popping up dialog boxes, 261
running in browser, 564
security mechanisms in, 491–579
warning windows in, 526
appletviewer program, 515, 564
Application servers, 349, 472
Applications
communicating with native code, 903–921
configuring, 144–145
data transfers between, 888

From the Library of Hristo Dimov Hristov

Index

desktop, 927–932
enterprise, 349–350
loading, 921
localizing, 408
monitoring, 487–488
paid, 499
server-side, 267–277
signing, 561–567
splash screen for, 921–926
startup plugins for, 922
updates of, 932
with internal frames, 741–744
applyPattern method (MessageFormat), 401
apply-templates element (XSLT), 224
Arc2D class, 769, 772–773
Arc2D.Double class, 785
ArcMaker class, 777
Arcs
bounding rectangle of, 770, 772
closure types of, 772–773
computing angles of, 773
Area class
add method, 786–788
subtract, intersect, exclusiveOr methods,
787–788
Areas, 786–788
ARGB (Alpha, Red, Green, Blue), 811,
837
ARRAY data type (SQL), 347–348
ArrayIndexOutOfBoundsException, 975
Arrays
from stream elements, 19
getting from a database, 347
in annotation elements, 466
in native code, 970–974
of primitive types, 973
type code for, 87, 961
type use annotations in, 467
vs. C types, 970–974
Arrays class, stream method, 8, 36
ArrayStoreException, 975
asCharBuffer method (ByteBuffer), 123
ASCII standard, 67
and native code, 950
converting native encodings to, 408
in property files, 410
in regular expressions, 133
ASM library, 481–489
ASP (Active Server Pages), 268
ATTLIST declaration (DTD), 167

1005

attribute element (XML Schema), 174
Attribute interface, 879
getCategory method, 881, 886
getName method, 886

implementing, 881
Attribute sets, 881
Attributes (XML)
enumerating, 154
for enumerated types, 168
in XML Schema, 174
legal, 167
names of, 146
namespace of, 198
values of, 146
accessing in XPath, 190
copying with XSLT, 225
default (DTDs), 167
normalizing, 168
vs. elements, 147–148, 168, 212
Attributes interface, getXxx methods, 204–205
AttributeSet interface, 880
add, get methods, 881, 886
remove, toArray methods, 886
AttributesImpl class, addAttribute, clear methods,
232
atZone method (LocalDateTime), 361
AudioPermission class, 519
auth/AuthTest.java, 534
auth/AuthTest.policy, 535
auth/jaas.config, 535
auth/SysPropAction.java, 535
Authentication, 530–546
problems of, 556–557
role-based, 537
separating from business logic, 532
through a trusted intermediary, 557–558
AuthPermission class, 520
Autoboxing, 601
AutoCloseable interface, close method, 53
Autocommit mode (databases), 344
turning off, 346
Autoflushing, 61
Autogenerated keys, 320–321
Automatic registration, of JAR files, 294
Auxiliary files, generated, 455
available method (InputStream), 49–50, 727
average method ( XxxStream), 37, 39–40
AWT (Abstract Window Toolkit),
765–937
AWTPermission class, 518, 526

From the Library of Hristo Dimov Hristov

1006

Index

B

Books, counting words in, 2

B (byte), type code, 87, 961
\b, \B, in regular expressions, 132

BOOLEAN data type (SQL), 291, 348
boolean type

Banding, 854

printing, 61
type code for, 87, 961
vs. C types, 947
writing in binary format, 69
Bootstrap class loader, 493
Bounding rectangle, 770
boxed method (of streams), 36, 39–40
Bray, Tim, 146
Breadth-first enumerations, 659
breadthFirstEnumeration method
(DefaultMutableTreeNode), 659, 663
browse method (Desktop), 932
Browsers
bytecode verification in, 506
cache of, 261
custom, 713
forms in, 267–277
launching from desktop applications, 927
password-protected pages in, 261
response page in, 268
running applets in, 564
Buffer class, 124–126
capacity method, 126
clear method, 125–126
flip method, 125–126
hasRemaining method, 122
limit method, 122
mark method, 125–126
position method, 126
remaining method, 125–126
reset method, 125–126
rewind method, 125–126
BufferedImage class, 798, 834
constructor, 835, 840
getColorModel method, 837, 840
getRaster method, 835, 840
TYPE_BYTE_GRAY field, 838, 840
TYPE_INT_ARGB field, 835–836, 840
BufferedImageOp interface, 834
filter method, 842, 850
implementing, 842
BufferedInputStream, BufferedOutputStream classes, 59
BufferedReader class, readLine method, 63
Buffers, 124–126
capacity of, 124
flushing, 49, 61
in-memory, 53

Banner class, getPageCount, layoutPages methods,

863
Banners, printing, 862–864
BaseStream interface
iterator methods, 19–20
parallel method, 41–45
unordered method, 43, 45
BasicFileAttributes interface, 108
methods of, 109
BasicPermission class, 520
BasicStroke class, 788–796
Batch updates (databases), 345–347
Bean info classes, generated, 455
BeanInfo class, 178
beforeFirst method (ResultSet), 323, 327
between method (Duration), 352
Bevel join, 788–789
Bézier curves, 775
BIG_ENDIAN constant (ByteOrder), 123
Big-endian order, 70, 407
Bilinear interpolation, 843
Binary data
converting to Unicode code units, 60
reading, 70
vs. text, 60
writing, 69
Bindings interface, 433
get, put methods, 434
BLOB data type (SQL), 291, 348
Blob interface, 316
get/setBinaryStream, getBytes methods, 316–317
length method, 317
BLOBs (binary large objects), 316
creating empty, 318
placing in database, 316
Blocking
by I/O methods, 49
by network connections, 234, 238, 250–257
Blur filter, 844
BMP format, 823
Book class, 862
append, getPrintable methods, 873
book/Banner.java, 867
book/BookTestFrame.java, 865
book/PrintPreviewCanvas.java, 871
book/PrintPreviewDialog.java, 870

From the Library of Hristo Dimov Hristov

Index

limits of, 124
marks in, 124
positions in, 117, 124
traversing all bytes in, 117
vs. random access, 116
BufferUnderflowException, 123
@BugReport annotation, 473
Business logic, 284
Butt cap, 788–789
Button listeners, for a dialog box, 688
ButtonFrame class, 437, 457
buttons1/ButtonFrame.java, 442
buttons2/action.properties, 452
buttons2/ButtonFrame.java, 451
buttons3/ButtonFrame.java, 460
BYTE_ARRAY class (DocFlavor), 875
Byte order mark, 407
byte type
negative values and unsigned integers, 693
type code for, 87, 961
vs. C types, 947
ByteArrayOutputStream class, 98, 445
ByteBuffer class, 117, 124–126
allocate method, 123, 125
asCharBuffer method, 123
get method, 117, 122
getXxx methods, 117, 123
order method, 118, 123
put method, 122
putXxx methods, 118, 123
wrap method, 123, 125
bytecodeAnnotations/EntryLogger.java, 483
bytecodeAnnotations/EntryLoggingAgent.java, 488
Bytecodes
engineering, 481–489
at load time, 486–488
with hex editor, 507
verifying, 504–508
ByteLookupTable class, 844
constructor, 850
ByteOrder class, BIG_ENDIAN, LITTLE_ENDIAN constants,
123
Byte-oriented input/output streams, 48
Bytes, reading/writing, 48–51

C
C (char), type code, 87, 961

C programming language
array types in, 970–974
bootstrap class loader in, 493

1007

calling Java methods from, 963–970
database access in, 282
embedding JVM into, 980–985
FILE* type in, 51
header file generating, 942
invalid pointers in, 940
strings in, 949
types, vs. Java types, 947
\c, in regular expressions, 130
C++ programming language
accessing JNI functions in, 950
array types in, 971
embedding JVM into, 980–985
exceptions in, 975
for native methods, 940, 943
invalid pointers in, 940
pointers to dummy classes in, 965
Cache, 261
Cached row sets, 329–334
CachedRowSet interface, 329–333
acceptChanges method, 331–332
execute method, 330, 332
get/setPageSize method, 330, 332
get/setTableName method, 331–332
nextPage method, 330, 332
populate method, 330, 332
previousPage method, 332
CachedRowSetImpl class, 329
Caesar cipher, 498–499
Calendar class, 351
formatting objects of, 386
call escape (SQL), 319
call method (CompilationTask), 445, 448
Call stack, during permission checking, 513
Callable interface, 445
Callback interface, 538
CallbackHandler interface, handle method, 545
CallNonvirtualXxxMethod functions (C), 966, 969
CallStaticXxxMethod functions (C), 964–965, 970
CallXxxMethod functions (C), 963, 969
cancelCellEditing method (CellEditor), 631–632,
638
cancelRowUpdates method (ResultSet), 325, 328
canImport method (TransferHandler), 912, 918
canInsertImage method (ImageWriter), 827, 834
capacity method (Buffer), 126
Carriage return character, displaying, 154
Cascading windows, 744–745
Casts, type use annotations in, 468
Catalogs, 342

From the Library of Hristo Dimov Hristov

1008

Index

CDATA declaration (DTD), 167–168

CDATA sections (XML), 149
Cell editors (Swing), 628–629
custom, 629–638
Cell renderers (Swing)
for lists, 595–599
for tables, 609, 626
for trees, 661–664
CellEditor interface
add/removeCellEditorListener methods, 638
cancelCellEditing method, 631–632, 638
getCellEditorValue method, 629, 631–632, 638
isCellEditable method, 638
shouldSelectCell method, 631, 638
stopCellEditing method, 631–632, 638
Cells (Swing)
editing, 628–629
rendering, 626–638
selecting, 612–614, 626
Certificates, 531, 553–556
and Java Plug-in, 563
managing, 560–561
publishing fingerprints of, 555
root, 563
set of, 510
signing, 558–561
CertificateSigner class, 559
CGI (Common Gateway Interface), 268
Chain of trust, 557
ChangeListener interface, 737
changeUpdate method (DocumentListener), 682, 685
Channels, 250
for files, 117
Channels class
newInputStream method, 256
newOutputStream method, 250, 257
char type
type code for, 87, 961
vs. C types, 947
CHAR_ARRAY class (DocFlavor), 875
Character classes, 129
CHARACTER data type (SQL), 291, 348
Character encodings, 60, 67–69
converting to ASCII, 408
platform, 68–69, 404
Character references (XML), 148
CharacterData interface, getData method, 153, 162
Characters
antialiasing, 817
differences between, 394

escaping, 64, 129
in regular expressions, 133
normalizing, 394
outlines of, 805
printing, 61
turning to upper/lower case, 690
writing in binary format, 69
characters method (ContentHandler), 200, 204
charAt method (String), 9
CharBuffer class, 53–54, 124
get, put methods, 124
CharSequence interface, 54, 134
charAt, length methods, 55
chars method, 36
codePoints method, 36, 40
splitting by regular expressions, 6
subSequence, toString methods, 55
Charset class
defaultCharset method, 68, 406
forName method, 69
Checkboxes (Swing), 626
checked attribute (HTML, XML), 146
Checked exceptions, 533
checkError method (PrintWriter), 61–62
checkExit method (SecurityManager), 509, 512
checkLogin method (SimpleLoginModule), 538
checkPermission method (SecurityManager), 512–513,
523–524
checkRead method (SecurityManager), 513
Child elements (XML), 147
getting node list of, 154
namespace of, 197
Child nodes (Swing), 639
adding, 642
connecting lines for, 645–646
children method (TreeNode), 658
choice element (XML Schema), 173
choice keyword (message formatting), 403
Church, Alonzo, 355
Cipher class, 567–569
doFinal method, 568, 571, 573, 575
getInstance method, 567, 573
getXxxSize methods, 573
init method, 573
update method, 568, 571, 573, 575
XXX_MODE modes, 568
CipherInputStream class, read method, 575
CipherOutputStream class, 574
constructor, 575
flush, write methods, 575

From the Library of Hristo Dimov Hristov

Index

Ciphers
generating keys, 569–574
public keys in, 575–579
streams for, 574–575
symmetric, 567–569
Circular dependencies, in annotations, 466
Class class
getClassLoader method, 493, 503
getFields method, 674
getProtectionDomain method, 514
implementing AnnotatedElement, 457
Class files, 492
corrupted, 504–508
encrypted, 498–499
format of, 481
loading, 492
locating, 444
modifying, 481–486
portability of, 407
producing on disk, 445
storing in databases, 444
transformers for, 487
verifying, 504–508
Class loaders, 450, 492–508
as namespaces, 496
bootstrap, 493
context, 495–496
creating, 509
extension, 493
hierarchy of, 494–496
separate for each web page, 496
specifying, 494
system, 493
writing, 497–503
class parameter (MIME types), 892
Class path hell, 493
Class references, in native code, 958
.class file extension, 492
Classes
adding validation to, 92
annotating, 456, 466, 470
descriptions of, 86
externalizable, 87
inheritance trees of, 660
loading, 492–494
locales supported by, 376
nonserializable, 92
protection domains of, 512
resolving, 492
separate for each web page, 496

1009

serializable, 80–81
versioning, 95–98
Classifier functions, 28
ClassLoader class, 493
defineClass, findClass methods, 498, 503
extending, 497
getParent, getSystemClassLoader methods, 503
loadClass method, 496, 498
Classloader inversion, 494
classLoader/Caesar.java, 502
classLoader/ClassLoaderTest.java, 499
CLASSPATH environment variable, 493
CLEAR composition rule, 810
clear method
of AttributesImpl, 232
of Buffer, 125–126
clearParameters method (PreparedStatement), 316
Client/server applications, 285
Clients
configuring securely, 566
connecting to servers, 236–238
multiple, serving, 245–248
clip method (Graphics2D), 767, 805–807, 854
Clipboard, 887–903
accessing, 509
capabilities of, 888
transferring:
images, 894
object references, 902
objects, 898–902
text, 888–892
Clipboard class, 888
addFlavorListener method, 894
constructor, 903
get/setContents methods, 889, 891
getAvailableDataFlavors method, 894
getData method, 892
isDataFlavorAvailable method, 891
ClipboardOwner interface
implementing, 888
lostOwnership method, 888, 892
Clipping, 766, 805–807
Clipping region
printing, 854
setting, 767
CLOB data type (SQL), 291, 348
Clob interface, 316
get/setCharacterStream methods, 316, 318
getSubString method, 316–317
length method, 317

From the Library of Hristo Dimov Hristov

1010

Index

CLOBs (character large objects), 316
creating empty, 318
placing in database, 316
clone method, 81, 98
Cloning, 98–100
close method
of AutoCloseable, 53
of Connection, 299, 301, 350
of FileLock, 128
of Flushable, 52
of InputStream, 49–50
of OutputStream, 51
of ProgressMonitor, 723, 731
of ResultSet, 301
of ServerSocket, 245
of SplashScreen, 926
of Statement, 300–301
of XMLStreamWriter, 222
Closeable interface, 52
close method, 52, 54
flush method, 52
Closed nonleaf icons, 648, 661
closeEntry methods (ZipXxxStream), 77–78
closeOnCompletion method (Statement), 300
closePath method (Path2D), 776, 786
Closure types, 772
cmd shell, 406
Code base, 510, 516
Code generation, annotations for, 455–462,
471
Code source, 510
Code units (UTF-16), in regular expressions,
130
Codebreakers, The (Kahn), 498
codePoints method (CharSequence), 36, 40
CodeSource class, getXxx methods, 514
Collation, 393–400
collation/CollationTest.java, 396
CollationKey class, compareTo method, 400
Collator class, 393
compare, equals methods, 399
get/setDecomposition methods, 399
get/setStrength methods, 399
getAvailableLocales method, 399
getCollationKey method, 395, 399
getInstance method, 399
collect method (Stream), 19, 22, 35
collecting/CollectingIntoMaps.java, 25
collecting/CollectingResults.java, 20
collecting/DownstreamCollectors.java, 31

Collection interface
parallelStream method, 2–5, 41–46
stream method, 2–5

Collections
processing, 2–5
vs. streams, 3
Collections class, sort method, 394
Collector interface, 19
Collectors class
counting method, 29
groupingBy method, 28–31
groupingByConcurrent method, 43
joining method, 20, 23
mapping method, 30, 33
maxBy, minBy methods, 30, 33
partitioningBy method, 28, 31
summarizingXxx methods, 20, 23
summingXxx methods, 29, 33
toCollection method, 20, 23
toConcurrentMap method, 25, 27
toList method, 23
toMap method, 24–27
toSet method, 20, 23, 29
Collectors, downstream, 29–33
Color chooser, 629, 898–902
Color class, 797
constructor, 842
getRGB method, 842
translating values into pixel data, 838
Color space conversions, 844
ColorConvertOp class, 843–844
ColorModel class, 838
getDataElements method, 842
getRGB method, 837, 842
Colors
components of, 807
composing, 808–811
dithering, 818
interpolating, 797–798
negating, 844
solid, 766
Columns (databases)
accessing by number, in result set, 299
names of, 285
number of, 334
Columns (Swing)
accessing, 610
adding, 617
detached, 601
hiding, 617–625

From the Library of Hristo Dimov Hristov

Index

names of, 606
rendering, 609–610
resizing, 602, 611–612
selecting, 612
com.sun.rowset package, 329
com.sun.security.auth.module package, 532
Combo boxes
editing, 629
traversal order in, 704
Comments (XML), 149
commit method
of Connection, 344–346
of LoginModule, 546
Commit or revert behavior, 687–688
commitEdit method (JFormattedTextField), 688, 701
Comparable interface, 615
Comparator interface, 394
Comparators, 614
compare method (Collator), 399
compareTo method
of CollationKey, 400
of Comparable, 615
of String, 393
Compilable interface, compile method, 437
Compilation tasks, 443–449
CompilationTask interface, 443–445
call method, 445, 448
compile method (Pattern), 134, 139
CompiledScript interface, eval method, 437
Compiler
annotations for, 471
invoking, 443
just-in-time, 980
producing class files on disk, 445
Compiler API, 443–454
compiler/ByteArrayJavaClass.java, 446
compiler/CompilerTest.java, 452
compiler/MapClassLoader.java, 454
compiler/StringBuilderJavaSource.java, 446
Complex types, 172
complexType element (XML Schema), 173
Composite, 809
composite/CompositeComponent.java, 814
composite/CompositeTestFrame.java, 812
composite/Rule.java, 815
Composition rules, 766–767, 807–817
Computer Graphics: Principles and Practice
(Foley), 775, 809, 836
concat method (Stream), 11
Confidential information, transferring, 567

1011

Configuration files, 126
connect method
of Socket, 239
of URLConnection, 259, 262, 266
Connection interface
close method, 299, 301, 350
commit method, 344–346
createBlob, createClob methods, 316, 318
createStatement method, 298–299, 321, 326,

344
get/setAutoCommit methods, 346
getMetaData method, 333, 342
getWarnings method, 304
prepareStatement method, 310, 315, 322, 326
releaseSavepoint method, 345–346
rollback method, 344–346
setSavepoint method, 346

Connections (databases)
closing, 302
using row sets after, 329
debugging, 279
pooling, 350
starting new threads, 246
console method (System), 406
Constructive area geometry operations, 786
Constructor class, 457
Constructors
annotating, 466
invoking from native code, 965–966
type use annotations in, 468
containsAll method (Collection), 525
Content types, 260
ContentHandler class, 199, 201
characters method, 200, 204
start/endDocument methods, 204
start/endElement methods, 200–204
Context class loader, 495–496
Control points
dragging, 777
of curves, 774
of shapes, 776
convertXxxIndexToModel methods (JTable), 614,
623
Convolution operation, 844
ConvolveOp class, 843–845
constructor, 851
Coordinate system
custom, 767
translating, 856
Coordinate transformations, 799–804

From the Library of Hristo Dimov Hristov

1012

Index

Copies class, 879–881
getValue method, 882
CopiesSupported class, 879
copy method (Files), 106, 108

CORBA (Common Object Request Broker
Architecture), Java support of, 494
Core Swing (Topley), 600, 639, 652, 682
count method (Stream), 3–4, 12, 191
Count of Monte Cristo, The (Dumas), 727
counting method (Collectors), 29
Country codes, 374
CRC32 class, 118
CRC32 checksum, 79, 116, 118
CREATE TABLE statement (SQL), 290
executing, 298, 300, 316
in batch updates, 345
createBindings method (ScriptEngine), 433
createBlob, createClob methods (Connection), 316,
318
createFile, createDirectory, createDirectories
methods (Files), 105–106
createGraphics method (SplashScreen), 926
createImageXxxStream methods (ImageIO), 825, 832
createPrintJob method (PrintService), 874, 877
createStatement method (Connection), 298–299, 321,
326, 344
createTempXxx methods (Files), 105–106
createTransferable method (TransferHandler), 909,
912
createXMLStreamReader method (XMLInputFactory), 207
createXMLStreamWriter method (XMLOutputFactory),
214, 221
createXxx methods (Document), 209, 212
createXxxRowSet methods (RowSetFactory), 329, 333
creationTime method (BasicFileAttributes), 109
Credit card numbers, transferring, 567
crypt program, 570
Cryptography and Network Security (Stallings),
548, 86
Cubic curves, 774–775
CubicCurve2D class, 769, 774
CubicCurve2D.Double class, 785
Currencies, 384–385
available, 385
formatting, 378–383, 691
identifiers for, 384
Currency class, 384–385
getAvailableCurrencies method, 385
getCurrencyCode method, 385
getDefaultFractionDigits method, 385

getInstance method, 384–385
getSymbol method, 385
toString method, 385

Cursor, drop shapes of, 904
curveTo method (Path2D.Float), 775, 786

Custom editors, 629
Custom formatters, 693–703
Cut and paste, 887–903
Cygwin, 944
compiling invocation API, 984
OpenSSL in, 560

D
D (double), type code, 87, 961
d literal (SQL), 318
\d, \D, in regular expressions, 131

Dashed lines, dash pattern, dash phase,
790
Data flavors, 892–894
Data sources, 349
Data transfer, 887–903
between Java and native code, 888
classes and interfaces for, 888
in Swing, 904–921
Data types
codes for, 87, 961
in Java vs. C, 947
mangling names of, 961
print services for, 874–875
database.properties file, 305, 349
DatabaseMetaData interface, 333–343
getJDBCXxxVersion methods, 343
getMaxConnection method, 343
getMaxStatements method, 301, 343
getSQLStateType method, 302
getTables method, 333, 342
supportsBatchUpdates method, 345, 347
supportsResultSetXxx methods, 323, 328
Databases, 281–350
accessing, in C language, 282
autonumbering keys in, 320
avoiding duplication of data in, 287
batch updates for, 345–347
caching prepared statements, 311
changing data with SQL, 290
connections to, 292, 294–297, 306
closing, 301, 306
in web and enterprise applications,
349–350
pooling, 350

From the Library of Hristo Dimov Hristov

Index

drivers for, 283–284
error handling in, 346
integrity of, 344
LOBs in, 316–318
metadata for, 333–343
modifying, 330
native storage for XML in, 349
numbering columns in, 299
outer joins in, 319
populating, 305–309
saving objects to, 474
scalar functions in, 319
schemas for, 342
setting up parameters in, 330
starting, 293
stored procedures in, 319
storing:
class files, 444
logins, 537
structure of, 285, 333
synchronization of, 331
tools for, 334
truncated data from, 303
URLs of, 292
DataFlavor class, 888, 892–894
constructor, 893
getHumanPresentableName method, 894
getMimeType method, 893
getRepresentationClass method, 894
imageFlavor constant, 895
isMimeTypeEqual method, 894
javaFileListFlavor constant, 914
DataInput interface, 70
readFully method, 71
readUTF method, 70–71
readXxx methods, 70–71, 81
skipBytes method, 71
DataInputStream class, 51, 56
DataIO class, xxxFixedString methods,
73–74
DataOutput interface, 69
writeUTF method, 70, 72
writeXxx methods, 69, 72, 81
DataOutputStream class, 51
DataSource interface, 349
DataTruncation class, 303
getIndex, getParameter methods, 304
getTransferSize method, 305
Date and Time API, 351–370
and legacy code, 369–370

1013

Date class, 87, 369

formatting objects of, 386
read/writeObject methods, 93
DATE data type (SQL), 291, 318, 348

Date pickers, 705
DateEditor class, 712
dateFilter method (RowFilter), 615, 625
DateFormat class, 387
getXxxInstance, setLenient methods,

691
dateFormat/DateTimeFormatterTest.java, 388
dateFormat/EnumCombo.java, 391

Dates
computing, 358–360
editing, 691
filtering, 615
formatting, 365–368, 372, 385–393
lenient, 691
literals for, 318
local, 355–358
parsing, 367
DateTimeFormatter class, 365–368, 385–393
and legacy classes, 369
format method, 365, 392
ofLocalizedXxx methods, 365, 385, 392
ofPattern method, 367
parse method, 367
toFormat method, 367
withLocale method, 365, 392
DateTimeSyntax class, 882
Daylight savings, 361–365
DayOfWeek enumeration, 357
getDisplayName method, 365, 386
dayOfWeekInMonth method (TemporalAdjusters),
359
DDL statement (SQL), 300, 316
Debugging
in JNI, 980
JDBC-related problems, 296
mail connections, 279
of locales, 377
policy files, 564
streams, 11
with telnet, 233–236
DECIMAL data type (SQL), 291, 348
Decimal separators, 372, 378, 686
Declaration annotations, 466–468
decode method (URLDecoder), 277
Decryption key, 498
default statement, 462

From the Library of Hristo Dimov Hristov

1014

Index

DefaultCellEditor class, 654

constructor, 638
variations, 629
defaultCharset method (Charset), 68, 406
DefaultFormatter class
extending, 693
get/setOverwriteMode methods, 692, 702
toString method, 691
DefaultHandler class, 201
DefaultListModel class, 594
add/removeElement methods, 595
DefaultMutableTreeNode class, 641, 659–661
add method, 642, 650
constructor, 650
depthFirstEnumeration method, 659
pathFromAncestorEnumeration method, 660
setAllowsChildren, setAsksAllowsChildren methods,
648, 650
setAsksAllowsChildren method, 648
XxxFirstEnumeration, XxxOrderEnumeration
methods, 659, 663
defaultPage method (PrinterJob), 861
DefaultRowSorter class
setComparator, setSortable methods, 614, 624
setRowFilter method, 615, 624
DefaultTableCellRenderer class, 626–627
DefaultTableModel class, isCellEditable method, 628
DefaultTreeCellRenderer class, 661–664
setXxxIcon methods, 664
DefaultTreeModel class, 650, 673
automatic notification by, 652
getPathToRoot method, 653
insertNodeInto method, 652, 658
isLeaf method, 648
nodeChanged method, 652, 658
nodesChanged method, 658
reload method, 653, 658
removeNodeFromParent method, 652, 658
defaultWriteObject method (ObjectOutputStream), 92
defineClass method (ClassLoader), 498, 503
Delayed formatting, 888
delete method, 107–108
DELETE statement (SQL), 290
executing, 298, 300, 316
in batch updates, 345
vs. methods of ResultSet, 325
DeleteGlobalRef function (C), 958
deleteIfExists method (Files), 108
deleteRow method (ResultSet), 325, 328
Delimiters, in text files, 63

Deployment directory, 564
@Deprecated annotation, 470–471

Depth-first enumerations, 659
depthFirstEnumeration method (DefaultMutableTreeNode),

659, 663
derbyclient.jar file, 292

DES (Data Encryption Standard), 568
Desktop class, 921, 927–932
browse method, 932
edit method, 927, 932
getDesktop method, 927, 931
isDesktopSupported method, 927, 931
isSupported method, 927, 931
mail method, 932
open method, 927, 932
print method, 927, 932

Desktop applications, launching, 927–932
Desktop panes, 741–760
cascading/tiling, 744–748
desktopApp/DesktopAppFrame.java, 928
DesktopManager class, 751
DestroyJavaVM function (C), 981, 985
Device coordinates, 799
Diagnostic interface
getKind method, 448
getMessage method, 449
getSource method, 448
getXxxNumber methods, 449
DiagnosticCollector class, 444
constructor, 448
getDiagnostics method, 448
DiagnosticListener interface, 444
DialogCallbackHandler class, 538
Dialogs
cascading/tiling, 744–748
in internal frames, 750
validating input fields before closing, 688
digest method (MessageDigest), 549–550
Digital signatures, 546–567
verifying, 553–556
Direct buffers, 973
Directories
creating, 105–106
current, 114
hierarchical structure of, 639
printing all subdirectories of, 113
traversing, 110–114
user’s working, 56
DirectoryStream interface, 111
displayMessage method (TrayIcon), 937

From the Library of Hristo Dimov Hristov

Index

distinct method (Stream), 11–12, 43

Dithering, 818
dividedBy method (Instant, Duration), 353
dnd/SampleComponents.java, 907
dnd/SwingDnDTest.java, 907
dndImage/imageListDnDFrame.java, 915
doAs, doAsPrivileged methods (Subject), 532–533,
536
Doc interface, 874
DocAttribute interface, 879
implementing, 881
printing attributes of, 882–885
DocAttributeSet interface, 880–881
DocFlavor class, 874–875, 878
DocPrintJob interface
getAttributes method, 886
print method, 877
DOCTYPE declaration (DTD), 164
including in output, 210
Document interface
addDocumentListener method, 682, 685
createXxx methods, 209, 212
getDocumentElement method, 150, 161
getLength method, 685
getText method, 685
implementing, 681
Document filters, 688–690
Document flavors, for print services, 874–875
Document listeners, 682
DocumentBuilder class
newDocument method, 209, 212, 227
parse method, 160
setEntityResolver method, 164, 170
setErrorHandler method, 170
DocumentBuilderFactory class
is/setIgnoringElementContentWhitespace methods,
169, 171
is/setNamespaceAware methods, 174, 198–199,
201, 209
is/setValidating method, 171
newDocumentBuilder method, 150, 160, 209
newInstance method, 150, 160
setNamespaceAware method, 209
setValidating method, 169
@Documented annotation, 470, 472, 474
DocumentEvent interface, getDocument method, 685
DocumentFilter class, 689
insertString method, 688–689, 702
remove method, 702
replace method, 689, 702

1015

DocumentListener interface, XxxUpdate methods,

682, 685
doFinal method (Cipher), 568, 571, 573, 575

DOM (Document Object Model) parser,
149–150, 199
supporting PUBLIC identifiers in, 164
DOM (Document Object Model) tree
accessing with XPath, 190–196
analyzing, 152–154
building, 208–222
writing, 210–211
dom/TreeViewer.java, 155
DOMResult class, 227, 232
DOMSource class, 213, 226
DOUBLE data type (SQL), 291, 348
double type
printing, 61
type code for, 87, 961
vs. C types, 947
writing in binary format, 69
DoubleBuffer class, 124
Double-clicking, on list components, 585
doubles method (Random), 37, 40
DoubleStream interface, 36–41
average, max, min, sum methods, 37, 40
boxed method, 36, 40
mapToDouble method, 36
of method, 39
summaryStatistics method, 37, 40
toArray method, 36, 40
DoubleSummaryStatistics class, 20, 23, 37, 41
doubleValue method (Number), 378
Downstream collectors, 29–33
Drag and drop, 903–921
file lists in, 914
in Swing components, 904–921
moving vs. copying with, 903
visual feedback for, 912
Drag sources, 903
configuring, 909–912
draw method (Graphics2D), 767–769, 787
Drawing
shapes, 766–769
simple, 765
drawXxx methods (Graphics), 769
DriverManager class, 294
getConnection method, 295, 297, 306, 350
setLogWriter method, 296
Drop actions, 903–904
Drop locations, 914

From the Library of Hristo Dimov Hristov

1016

Index

DROP TABLE statement (SQL), 295

executing, 298, 300
in batch updates, 345
Drop targets, 903, 912–921
DropLocation class (of JList)
getIndex method, 914, 920
isInsert method, 915, 920
DropLocation class (of JTable), getXxx , isInsertXxx
methods, 920
DropLocation class (of JTextComponent), getIndex
method, 921
DropLocation class (of JTree)
getChildIndex method, 920
getPath method, 914, 920
DropLocation class (of TransferHandler), 914
getDropPoint method, 920
DSA (Digital Signature Algorithm), 551–552
DST, DST_Xxx composition rules, 810
DTDHandler class, 201
DTDs (Document Type Definitions),
163–171
element content in, 165–166
entities in, 168
external, 164
in XML documents, 147, 164
unambiguous, 166
URLs for, 164
Duration class
arithmetic operations, 353
between method, 352
immutable, 354
toXxx methods, 353
Dynamic links, 981
Dynamic web pages, 449–454

E
\e, \E, in regular expressions, 130

Echo servers, 244
Eclipse, startup plugins for, 922
Edge detection, 845
edit method (Desktop), 927, 932
Editor pane (Swing), 681, 712–719
edit mode of, 714
loading pages in separate threads, 715
editorPane/EditorPaneFrame.java, 716
Editors, custom, 629
element element (XML Schema), 172
Element interface, 477
getAttribute method, 154, 161, 176
getSimpleName method, 477

getTagName method, 151, 161, 198
setAttribute, setAttributeNS methods, 209, 212
ELEMENT element content (DTD), 165–166

Elements (XML)
child, 147
accessing in XPath, 191
namespace of, 197
constructing, 209
counting, in XPath, 191
empty, 146
getting node list of, 154
legal attributes of, 167
names of, 151, 198
root, 147, 172
trimming whitespace in, 153
vs. attributes, 147–148, 168, 212
Ellipse2D class, 769
Ellipses, bounding rectangle of, 770
E-mails, 927
launching from desktop applications, 927
sending, 277–280
terminating lines in, 278
employee/Employee.c, 959
employee/Employee.java, 959
employee/EmployeeTest.java, 958
empty method
of Optional, 16
of Stream, 5, 8
EMPTY element content (DTD), 165
Empty tags (XML), 146
encode method (URLEncoder), 277
Encryption, 567–579
final block padding in, 568
of class files, 498–499
end method (Matcher), 135, 137, 140–141
End cap styles, 788–790
End points, 774
End tags (XML), 146
endDocument method (ContentHandler), 204
endElement method (ContentHandler), 200–204
End-of-line character. See Line feed
Enterprise applications, 349–350
Enterprise JavaBeans (EJBs), 285
hot deployment of, 496
Entity references (XML), 148, 168
Entity resolvers, 150
ENTITY, ENTITIES attribute types (DTDs), 167–168
EntityResolver class, 201
resolveEntity method, 164, 170
entries method (ZipFile), 80

From the Library of Hristo Dimov Hristov

Index

Entry class, 616
getXxx methods, 625
EntryLogger class, 487
EntryLoggingAgent.mf file, 487
enum keyword, 94
EnumCombo class, 387
enumeration element (XML Schema), 172
Enumeration interface, 80
hasMoreElements method, 987–989
nextElement method, 659, 987–990

Enumerations
of nodes, in a tree, 659–661
typesafe, 94–95
using attributes for, 168
EnumSyntax class, 882
EOFException, 974
Epoch, 93, 352
equals method
of Annotation, 464
of Collator, 399
of Permission, 523
of Set, 525
Error handlers
in native code, 974–979
installing, 170
Error messages
control over, 445
listening to, 444
ErrorHandler class, 201
error, fatalError, warning methods,
170–171
Escape hatch mechanism, 650
escape keyword (SQL), 319
Escapes
in regular expressions, 64, 129
in SQL, 318–319
Essential XML (Box et al.), 143, 222
Euro symbol, 384, 406
eval method
of CompiledScript, 437
of ScriptEngine, 431–433
evaluate method (XPath), 191, 196
Event handlers, annotating, 457–462
Event listeners, 178, 455
Event queues (AWT), accessing, 509
EventHandler class, 458
EventListenerList class, 673
Events, transitional, 584
Evins, Jim, 609
evn pointer (C), 950

1017

Exceptions
checked, 533
from native code, 974–979
in C++, 975
in SQL, 302–305
type use annotations in, 468
ExceptionXxx functions (C), 975–976, 979
Exclusive lock, 127
exclusiveOr method (Area), 787–788
exec/ExecSQL.java, 306
ExecutableElement interface, 477
execute method
of RowSet, CachedRowSet, 330, 332
of Statement, 300, 306, 319, 321
executeBatch method (Statement), 346–347
executeLargeBatch method (Statement), 347
executeQuery method
of PreparedStatement, 310, 316
of Statement, 298, 300, 323
executeUpdate method
of PreparedStatement, 310, 316
of Statement, 298, 300, 321, 344
exists method (Files), 108–109
EXIT statement (SQL), 293
exit method (System), 509
exportAsDrag method (TransferHandler), 910, 912
exportDone method (TransferHandler), 911–912
Extension class loader, 493
extern "C", in native methods (C++), 943
External entities, 168
Externalizable interface, xxxExternal methods,
93–94

F
F (float), type code, 87, 961
\f, in regular expressions, 130

Factoring algorithms, 552
fatalError method (ErrorHandler), 170–171
Field class
getName, getType methods, 674
implementing AnnotatedElement, 457

Fields
accessing:
from another class, 509
from native code, 956–961
annotating, 456, 470
transient, 92
File class, toPath method, 102–103
File lists, 914
File permissions, 520

From the Library of Hristo Dimov Hristov

1018

Index

File pointers, 72
File systems, POSIX-compliant, 109
file: URI scheme, 257, 517
file.encoding system property, 68
file.separator property, 521
FileChannel class
lock, tryLock methods, 126–128
open, map methods, 117, 122
FileHandler class, 406
FileInputStream class, 55–59, 513, 523, 726
constructor, 58
getChannel method, 121
read method, 48
fileKey method (BasicFileAttributes), 109
FileLock class
close method, 128
isShared method, 127
FileNotFoundException, 273
FileOutputStream class, 55–59
constructor, 59
getChannel method, 121
FilePermission class, 511, 517
FileReader class, 513
Files
accessing, 509
channels for, 117
closing, 110
configuration, 126
copying, 106
counting lines in, 727
creating, 105–106
deleting, 107
drag and drop of, 904–905
encrypting/decrypting, 574
filtering, 112
by file suffixes, 825
generated automatically, 455, 475
handling, 445
hierarchical structure of, 639
I/O modes of, 76
in desktop applications, 927
locating, 444
locking, 126–128
memory-mapped, 116–128
moving, 106
random-access, 72–76
vs. buffered, 116
reading, 104–105
as a string, 104
by one byte, 48–51

numbers from, 56
permissions for, 523
total number of bytes in, 73
traversing, 111–115
with multiple images, 825–834
writing, 104–105
Files class, 100, 104–114
copy method, 106, 108
createXxx methods, 105–106
delete method, 107–108
deleteIfExists method, 108
exists method, 108–109
find method, 111
getBytes method, 104
getOwner method, 108
isXxx methods, 108–109
lines method, 6, 8
list method, 110
move method, 106, 108
newDirectoryStream method, 111, 114
newXxxStream, newBufferedXxx methods, 104–105
readAllXxx methods, 104
readAttributes method, 109
size method, 108–109
walk method, 110
write method, 104
Files class, walkFileTree method, 112–114
FileSystem class, getPath method, 115–116
FileSystems class, newFileSystem method, 115–116
FileTime class, and legacy classes, 369
FileVisitor interface, 113–114
visitFile, visitFileFailed methods, 112
xxxVisitDirectory, visitXxx methods, 112
fill method (Graphics2D), 767–768, 787
Filling, 766–767, 797
fillXxx methods (Graphics), 769
filter method
of BufferedImageOp, 842, 850
of Stream, 3–4, 9–10, 13
FilteredRowSet interface, 329
Filters
for images, 842–851
for numbers, 615
for streams, 726
for table rows, 615–617
for user input, 688–690
glob patterns for, 112
implementing, 616
FilterXxxStream classes, 57
Final block padding, 568

From the Library of Hristo Dimov Hristov

Index

find method
of Files, 111
of Matcher, 137, 140
findAny method (Stream), 13
findClass method (ClassLoader), 498, 503
FindClass function (C), 957, 960, 965
findColumn method (ResultSet), 301
findXxx methods (Stream), 13

Fingerprints, 86, 546–567
different for a class and its objects, 89
fireStateChanged method (AbstractSpinnerModel),
706
first method (ResultSet), 323, 327
firstDayOfXxx methods (TemporalAdjusters), 359
#FIXED attribute (DTD), 167
Fixed-size patterns, 692
Fixed-size records, 73–74
flatMap method
of Optional, 16–19
of Stream, 10
FlavorListener interface, flavorsChanged method,
893–894
flavormap.properties file, 887
flip method (Buffer), 125–126
FLOAT data type (SQL), 291, 348
float type
printing, 61
type code for, 87, 961
vs. C types, 947
writing in binary format, 69
FloatBuffer class, 124
Floating-point numbers, 372, 378–383, 691
flush method
of CipherOutputStream, 575
of Closeable, 52
of Flushable, 52, 55
of OutputStream, 49, 51
Flushable interface, 52–53
close method, 52
flush method, 52, 55
fn keyword (SQL), 319
Focus listeners, 683
Folder icons, 648, 661
Font render context, 805
Fonts
antialiasing, 817, 819
displaying, 596
forEach method (Stream), 19, 22
Forest (Swing), 639, 647
forLanguageTag method (Locale), 377

1019

format method
of DateTimeFormatter, 365, 392
of Format, 402
of MessageFormat, 401–402
of NumberFormat, 379, 383

Formatters
and locales, 373
custom, 693–703
installing, 689
supported by JFormattedTextField,
691–693
Formatting
copy and paste, 887
delayed, 888
of currencies, 691
of dates, 372, 385–393
of messages, 400–404
of numbers, 372, 378–383, 691
formatting/Formatting.java, 368
Forms, processing, 267–277
forName method (Charset), 69
fortune program (UNIX), 933
ForwardingJavaFileManager class
constructor, 449
getFileForOutput method, 449
getJavaFileForOutput method, 445, 450
fprintf function (C), 963
Fractals, 838
Frame class, 450
Frames (Swing)
cascading/tiling, 744–748
closing, 748
dialogs in, 750
dragging, 751–760
grabbers of, 742
icons for, 743
internal, 741–752
managing on desktop, 751
positioning, 744
resizable, 745
selected, 744, 747
states of, 745
visibility of, 744
with two nested split panes, 732
from method (Instant), 369
FROM statement (SQL), 288
FTP (File Transfer Protocol), 262
ftp: URI scheme, 257, 262, 713
Function interface, identity method, 24
@FunctionalInterface annotation, 470

From the Library of Hristo Dimov Hristov

1020

Index

G
\G, in regular expressions, 132

Garbage collection
and arrays, 972
and native methods, 951
GeneralPath class, 769, 775
constructor, 785
generate method (Stream), 5, 8, 36
@Generated annotation, 470–471
generateKey method (KeyGenerator), 569, 574
Generic types, type use annotations in, 467
Gestures (Swing), 903
get method
of AttributeSet, 882, 886
of Bindings, 434
of ByteBuffer, 117, 122
of CharBuffer, 124
of Optional, 15–16
of Paths, 101, 103
of ScriptEngine, 433
of ScriptEngineManager, 433
of Supplier, 8
GET method (HTML), 269–270
getActions method (Permission), 523
getAddress method (InetAddress), 240–241
getAdvance method (TextLayout), 807
getAllByName method (InetAddress), 240–241
getAllFrames method (JDesktopPane), 745–748, 757
getAllowsChildren method (TreeNode), 649
getAllowUserInteraction method (URLConnection), 266
getAnnotation method (AnnotatedElement), 457, 462,
475, 477
getAnnotations, getDeclaredAnnotations methods
(AnnotatedElement), 462
getAnnotationsByType method (AnnotatedElement), 462,
475, 477
GetArrayLength function (C), 972–973
getAscent method (TextLayout), 807
getAsXxx methods (OptionalXxx classes), 37, 41
getAttribute method (Element), 154, 161, 176
getAttributes method
of DocPrintJob, 886
of Node, 154, 161
of PrintService, 886
getAttributeXxx methods (XMLStreamReader), 206,
208
getAuthority method (URI), 258
getAutoCommit method (Connection), 346
getAutoCreateRowSorter method (JTable), 602, 604
getAvailableCurrencies method (Currency), 385

getAvailableDataFlavors method (Clipboard), 894
getAvailableLocales method
of Collator, 399
of NumberFormat, 376, 379, 383
getAverage method ( XxxSummaryStatistics), 20, 23,

41
getBackground method (JList), 596, 599
getBinaryStream method (Blob), 316–317
getBlob method (ResultSet), 316–317
getBlockSize method (Cipher), 573
GetBooleanArrayElements function (C), 972–974
GetBooleanArrayRegion function (C), 973–974
GetBooleanField function (C), 960
getBounds method (SplashScreen), 926
getBundle method (ResourceBundle), 409–412
getByName method (InetAddress), 240–241
GetByteArrayElements function (C), 972–974, 989
GetByteArrayRegion function (C), 973–974
GetByteField function (C), 960
getBytes method
of Blob, 316–317
of Files, 104
getCandidateLocales method (ResourceBundle.Control),

410
getCategory method (Attribute), 881, 886
getCellEditorValue method (CellEditor), 629,

631–632, 638
getCellSelectionEnabled method (JTable), 622
getCertificates method (CodeSource), 514
getChannel method (FileXxxStream, RandomAccessFile),

121
getChar method (ByteBuffer), 117, 123
getCharacterStream method (Clob), 316, 318
GetCharArrayElements function (C), 972–974
GetCharArrayRegion function (C), 973–974
getCharContent method (SimpleJavaFileObject), 445,

449
GetCharField function (C), 960
getChild method (TreeModel), 154, 672–674, 680
getChildAt method (TreeNode), 658
getChildCount method
of TreeModel, 672–674, 679
of TreeNode, 658
getChildIndex method (JTree.DropLocation), 920
getChildNodes method (Node), 151, 161
getClassLoader method (Class), 493, 503
getClip method (Graphics), 806, 854
getClob method (ResultSet), 316–317
getCodeSource method (ProtectionDomain), 514
getCollationKey method (Collator), 395, 399

From the Library of Hristo Dimov Hristov

Index

getColorModel method (BufferedImage), 837, 840
getColumn method
of JTable.DropLocation, 920
of TableColumnModel, 623
getColumnClass method (TableModel), 609, 621
getColumnCount method
of ResultSetMetaData, 334
of TableModel, 605–606, 608
getColumnModel method (JTable), 622
getColumnName method (TableModel), 606, 608
getColumnNumber method
of Diagnostic, 449
of SAXParseException, 171
getColumnSelectionAllowed method (JTable), 622
getColumnXxx methods (ResultSetMetaData), 334, 343
getCommand method (RowSet), 332
getComponent method (TransferSupport), 919
getComponentAt method (JTabbedPane), 740
getConcurrency method (ResultSet), 323–324, 327
getConnection method (DriverManager), 295, 297,

306, 350
getConnectTimeout method (URLConnection), 266
getContent method (URLConnection), 267
getContentPane method (JInternalFrame), 758
getContents method (Clipboard), 891
getContentXxx methods (URLConnection), 260, 263,

267
getContext method
of AccessController, 536
of ScriptEngine, 434
getContextClassLoader method (Thread), 495, 503
getCount method ( XxxSummaryStatistics), 23, 41
getCountry method (Locale), 377
getCurrencyCode method (Currency), 385
getCurrencyInstance method (NumberFormat), 378,

383–384, 691
getData method
of CharacterData, 153, 162
of Clipboard, 892
getDataElements method
of ColorModel, 842
of Raster, 837, 841
getDataFlavors method (TransferSupport), 919
getDate method
of ResultSet, 299, 301
of URLConnection, 260, 263, 267
getDateInstance, getDateTimeInstance methods
(DateFormat), 691
getDayOfXxx methods (Date and Time API),

356–357, 363

1021

getDecomposition method (Collator), 399
getDefault method (Locale), 376–377
getDefaultEditor method (JTable), 637
getDefaultFractionDigits method (Currency), 385
getDefaultName method (NameCallback), 545
getDefaultRenderer method (JTable), 627, 637
getDescent method (TextLayout), 807
getDesktop method (Desktop), 927, 931
getDesktopPane method (JInternalFrame), 759
getDiagnostics method (DiagnosticCollector), 448
GetDirectBufferXxx functions (C), 973
getDisplayCountry, getDisplayLanguage methods
(Locale), 377
getDisplayName method
of DayOfWeek, 365, 386
of Locale, 376–377, 379
of Month, 365, 386
getDocument method (DocumentEvent), 685
getDocumentElement method (Document), 150, 161
getDocumentFilter method (AbstractFormatter), 689,

701
getDouble method
of ByteBuffer, 117, 123
of ResultSet, 299, 301
GetDoubleArrayElements function (C), 972–974
GetDoubleArrayRegion function (C), 973–974
GetDoubleField function (C), 956, 960
getDoXxx methods (URLConnection), 259, 265
getDropAction method (TransferSupport), 919
getDropLocation method (TransferSupport), 914, 919
getDropPoint method (TransferHandler.DropLocation),

920
getElementAt method (ListModel), 589, 593
getEnclosedElements method (TypeElement), 477
getEngineXxx methods (ScriptEngineManager), 431
getEntry method (ZipFile), 80
getErrorCode method (SQLException), 302, 304
getErrorStream method (HttpURLConnection), 273, 277
getErrorWriter method (ScriptContext), 434
getExpiration method (URLConnection), 260, 263,

267
getExtensions method (ScriptEngineFactory), 431
GetFieldID function (C), 957, 960
getFields method (Class), 674
getFileForOutput method (ForwardingJavaFileManager),

449
getFileName method (StackTraceElement), 103
getFilePointer method (RandomAccessFile), 72, 76
getFileSuffixes method (ImageReaderWriterSpi), 833
getFillsViewportHeight method (JTable), 604

From the Library of Hristo Dimov Hristov

1022

Index

getFirstChild method (Node), 153, 161
getFloat method (ByteBuffer), 117, 123
GetFloatArrayElements function (C), 972–974
GetFloatArrayRegion function (C), 973–974
GetFloatField function (C), 960
getFocusLostBehavior method (JFormattedTextField),

688, 701
getFontRenderContext method (Graphics2D), 805, 807
getForeground method (JList), 596, 599
getFormatNames method (ImageReaderWriterSpi), 833
getFragment method (URI), 258
getFrameIcon method (JInternalFrame), 759
getHeaderXxx methods (URLConnection), 260–262,

267
getHeight method
of ImageReader, 826, 833
of PageFormat, 854, 861
getHost method (URI), 258
getHostXxx methods (InetAddress), 241
getHour method (Date and Time API), 360,

363
getHumanPresentableName method (DataFlavor), 894
getIconAt method (JTabbedPane), 740
getIdentifier method (Entry), 625
getIfModifiedSince method (URLConnection), 266
getImage method (TrayIcon), 936
getImageableXxx methods (PageFormat), 855,

861–862
getImageURL method (SplashScreen), 926
getImageXxxByXxx methods (ImageIO), 824, 832
getIndex method
of DataTruncation, 304
of JList.DropLocation, 914, 920
of JTextComponent.DropLocation, 921
getIndexOfChild method (TreeModel), 672, 680
getInputStream method
of Socket, 237–238, 242
of URLConnection, 260, 267, 271, 273
of ZipFile, 80
getInstance method
of AlphaComposite, 809, 817
of Cipher, 567, 573
of Collator, 399
of Currency, 384–385
of KeyGenerator, 574
of Locale, 393
of MessageDigest, 548–550
getInt method
of ByteBuffer, 117, 123
of ResultSet, 299, 301

GetIntArrayElements function (C), 972–974
GetIntArrayRegion function (C), 973–974
getIntegerInstance method (NumberFormat), 689
getInterface method (Invocable), 436
GetIntField function (C), 956, 960, 989
getInvalidCharacters method (MaskFormatter), 703
getJavaFileForOutput method
(ForwardingJavaFileManager), 445, 450
getJavaFileObjectsFromXxx methods
(StandardJavaFileManager), 448
getJDBCXxxVersion methods (DatabaseMetaData),

343
getKeys method (ResourceBundle), 412–413
getKind method (Diagnostic), 448
getLanguage method (Locale), 377
getLastChild method (Node), 154, 161
getLastModified method (URLConnection), 260, 263,

267
getLastPathComponent method (TreePath), 651, 658
getLastSelectedPathComponent method (JTree), 652,

657
getLayoutOrientation method (JList), 587
getLeading method (TextLayout), 807
getLength method
of Attributes, 204
of Document, 685
of NamedNodeMap, 162
of NodeList, 151, 162
getLineNumber method
of Diagnostic, 449
of SAXParseException, 171
getListCellRendererComponent method
(ListCellRenderer), 595–599
getLocale method (MessageFormat), 402
getLocalHost method (InetAddress), 240–241
getLocalName method
of Attributes, 204
of Node, 198–199
of XMLStreamReader, 208
getLocation method (CodeSource), 514
getLong method (ByteBuffer), 117, 123
GetLongArrayElements function (C), 972–974
GetLongArrayRegion function (C), 973–974
GetLongField function (C), 960
getMax method ( XxxSummaryStatistics), 20, 23, 41
getMaxConnections method (DatabaseMetaData), 343
getMaximum method (JProgressBar), 730
getMaxStatements method (DatabaseMetaData), 301,

343
getMessage method (Diagnostic), 449

From the Library of Hristo Dimov Hristov

Index

getMetaData method
of Connection, 333, 342
of ResultSet, 334, 343
getMethodCallSyntax method (ScriptEngineFactory),

435
GetMethodID function (C), 966, 969
getMimeType method (DataFlavor), 893
getMimeTypes method (ScriptEngineFactory), 431
getMIMETypes method (ImageReaderWriterSpi), 833
getMin method ( XxxSummaryStatistics), 23, 41
getMinimum method (JProgressBar), 730
getMinute method (Date and Time API), 360,

363
getMnemonicAt method (JTabbedPane), 741
getModel method
of Entry, 625
of JList, 595
getMonth, getMonthValue methods (Date and Time

API), 356, 363
getMoreResults method (Statement), 320
getName method
of Attribute, 886
of Field, 674
of NameCallback, 545
of Permission, 525, 530
of Principal, 537
of PrintService, 874
of UnixPrincipal, 531
of XMLStreamReader, 208
of ZipEntry, 79
of ZipFile, 80
getNames method (ScriptEngineFactory), 431
getNamespaceURI method (Node), 198–199
getNano method (Date and Time API), 360,

363
getNewValue method (PropertyChangeEvent), 750,

759
getNextEntry method (ZipInputStream), 77–78
getNextException method (SQLException), 302, 304
getNextSibling method (Node), 154, 161
getNextValue method (AbstractSpinnerModel),

705–706, 712
getNextWarning method (SQLWarning), 304
getNodeXxx methods (Node), 154, 161, 198
getNumberInstance method (NumberFormat), 378, 383,

691
getNumXxx methods (ImageReader), 826, 833
getObject method
of ResourceBundle, 411–412
of ResultSet, 299, 301

1023

GetObjectArrayElement function (C), 972–973
GetObjectClass function (C), 957–958
GetObjectField function (C), 956, 960
getOffset method (ZonedDateTime), 363
getOrientation method (PageFormat), 862
getOriginatingProvider method
of ImageReader, 824, 833
of ImageWriter, 834
getOutputSize method (Cipher), 573
getOutputStream method
of Socket, 238, 242
of URLConnection, 260, 267, 270
getOverwriteMode method (DefaultFormatter), 702
getOwner method (Files), 108
getPageCount method (Banner), 863
getPageSize method (CachedRowSet), 332
getParameter method (DataTruncation), 304
getParent method
of ClassLoader, 503
of Path, 103
of TreeNode, 658, 660
getParentNode method (Node), 161
getPassword method
of PasswordCallback, 546
of RowSet, 331
getPath method
of FileSystem, 115–116
of JTree.DropLocation, 914, 920
of TreeSelectionEvent, 671
of URI, 258
getPaths method (TreeSelectionEvent), 665, 671
getPathToRoot method (DefaultTreeModel), 653
getPercentInstance method (NumberFormat), 378, 383,

691
getPixel, getPixels methods (Raster), 836, 841
getPlaceholder, getPlaceholderCharacter methods
(MaskFormatter), 703
getPointCount method (ShapeMaker), 776
getPopupMenu method (TrayIcon), 936
getPort method (URI), 258
getPreferredSize method (JComponent), 596–597,

685
getPreviousSibling method (Node), 161
getPreviousValue method (AbstractSpinnerModel),

705–706, 712
getPrincipals method (Subject), 536
getPrintable method (Book), 873
getPrinterJob method (PrinterJob), 852, 861
getPrintService method (StreamPrintServiceFactory),

878–879

From the Library of Hristo Dimov Hristov

1024

Index

getPrompt method
of NameCallback, 545
of PasswordCallback, 546
getPropertyName method (PropertyChangeEvent),

759
getProtectionDomain method (Class), 514
getPrototypeCellValue method (JList), 593
getQName method (Attribute), 204
getQualifiedName method (TypeElement), 477
getQuery method (URI), 258
getRaster method (BufferedImage), 835, 840
getReader method (ScriptContext), 434
getReaderXxx methods (ImageIO), 825, 832
getReadTimeout method (URLConnection), 266
getRepresentationClass method (DataFlavor), 894
getRequestProperties method (URLConnection), 266
getResultSet method (Statement), 300
getRGB method
of Color, 842
of ColorModel, 837, 842
getRoot method
of Path, 103
of TreeModel, 154, 672–674, 679
getRotateInstance method (AffineTransform), 802–803
getRow method
of JTable.DropLocation, 920
of ResultSet, 323, 327
getRowCount method (TableModel), 605–606, 608
getRowXxx methods (JTable), 622
getSavepointXxx methods (Savepoint), 347
getScaleInstance method (AffineTransform), 802–803
getSecond method (Date and Time API), 360,

363
getSelectedComponent method (JTabbedPane), 740
getSelectedIndex method (JTabbedPane), 737, 740
getSelectedValue method (JList), 584, 587
getSelectedValuesList method (JList), 585, 587
getSelectionMode method (JList), 587
getSelectionModel method (JTable), 622
getSelectionPath method (JTree), 651, 657, 665,

671
getSelectionPaths method (JTree), 665, 671
getSelectionXxx methods (JList), 596, 599
getShearInstance method (AffineTransform), 802,

804
getShort method (ByteBuffer), 117, 123
GetShortArrayElements function (C), 972–974
GetShortArrayRegion function (C), 973–974
GetShortField function (C), 960
getSimpleName method (Element), 477

getSize method
of ListModel, 589, 593
of ZipEntry, 79
getSource method (Diagnostic), 448
getSourceActions method (TransferHandler), 909, 912
getSourceDropActions method (TransferSupport), 919
getSplashScreen method (SplashScreen), 923, 926
getSQLState method (SQLException), 302, 304
getSQLStateType method (SQLException), 302
getStandardFileManager method (JavaCompiler), 447
GetStaticFieldID, GetStaticXxxField functions (C),

960–961
GetStaticMethodID function (C), 964, 970
getStrength method (Collator), 399
getString method
of JProgressBar, 730
of ResourceBundle, 410, 412
of ResultSet, 299, 301
getStringArray method (ResourceBundle), 412
GetStringChars, GetStringLength functions (C), 953
GetStringRegion, GetStringUTFRegion, GetStringUTFLength

functions (C), 952
GetStringUTFChars function (C), 951–952, 954, 989
getStringValue method (Entry), 625
getSubject method (LoginContext), 536
getSubString method (Clob), 316–317
getSum method ( XxxSummaryStatistics), 23, 41
GetSuperclass function (C), 1001
getSymbol method (Currency), 385
getSystemClassLoader method (ClassLoader), 503
getSystemClipboard method (Toolkit), 888, 891
getSystemJavaCompiler method (ToolProvider), 443
getSystemTray method (SystemTray), 932, 936
getTabComponentAt, getTabLayoutPolicy methods
(JTabbedPane), 741
getTabCount method (JTabbedPane), 740
getTableCellEditorComponent method (TableCellEditor),

629, 631, 638
getTableCellRendererComponent method
(TableCellRenderer), 626, 637
getTableName method (CachedRowSet), 332
getTables method (DatabaseMetaData), 333, 342
getTagName method (Element), 151, 161, 198
getTask method (JavaCompiler), 444, 448

Getter/setter pairs. See Properties
getText method
of Document, 685
of XMLStreamReader, 208
getTimeInstance method (DateFormat), 691
getTitleAt method (JTabbedPane), 740

From the Library of Hristo Dimov Hristov

Index

getTooltip method (TrayIcon), 936
getTransferable method (TransferSupport), 913
getTransferData method (Transferable), 892
getTransferDataFlavors method (Transferable),

894
getTransferSize method (DataTruncation), 305
getTranslateInstance method (AffineTransform), 802,

804
getTrayIconSize method (SystemTray), 936
getTreeCellRendererComponent method
(TreeCellRenderer), 662–663
getType method
of Field, 674
of ResultSet, 323, 326
getUpdateCount method (Statement), 300, 320
getURI method (Attribute), 204
getURL method
of HyperlinkEvent, 715, 719
of RowSet, 331
getUseCaches method (URLConnection), 266
getUserDropAction method (TransferSupport), 919
getUserInfo method (URI), 258
getUsername method (RowSet), 331
getValidCharacters method (MaskFormatter), 703
getValue method
of AbstractSpinnerModel, 705, 712
of Attributes, 205
of Copies, 882
of Entry, 625
of JFormattedTextField, 687, 701
of JProgressBar, 730
of JSpinner, 704, 710
of Win32RegKey, 987–988
getValueAt method (TableModel), 605–606, 608
getValueContainsLiteralCharacters method
(MaskFormatter), 703
getValueCount method (Entry), 625
getValueIsAdjusting method (ListSelectionEvent),

584
getVendorName, getVersion methods
(IIOServiceProvider), 825, 833
getVisibleRowCount method (JList), 587
getWarnings method (Connection, ResultSet, Statement),

304
getWidth method
of ImageReader, 826, 833
of PageFormat, 854, 861
getWriter method (ScriptContext), 434
getWriterXxx methods (ImageIO), 825, 832
getYear method (Date and Time API), 356, 363

1025

GIF format, 823
animated, 825, 921
image manipulations on, 846
printing, 874
GlassFish server, 349
Glob patterns, 112
GMail, 278–279
Gnome (GNU Object Model Environment)
drag and drop in, 904
supporting API operations in, 927
Gnu C compiler, 943–944
Gödel’s theorem, 504
GradientPaint class, 797
constructor, 797–798
cyclic parameter, 798
grant keyword, 516, 532, 564
Graphic Java™ (Geary), 600, 639
Graphics class, 765
drawXxx , fillXxx methods, 769
get/setClip methods, 805–806, 854
Graphics2D class, 765–937
clip method, 767, 805–807, 854
draw method, 767–769, 787
fill method, 767–768, 787
getFontRenderContext method, 805, 807
rotate, scale, shear methods, 800, 804
setComposite method, 767, 809, 816
setPaint method, 767, 797–798
setRenderingHint, setRenderingHints methods, 766,
817–819, 823
setStroke method, 767, 788, 796
setTransform method, 802, 804
transform method, 767, 802, 804
translate method, 800, 804, 864
GregorianCalendar class, toZonedDateTime method,
369
Grid bag layout, 175–179
GridBagConstraints class, 175
GridBagLayout class, 175–189
GridBagPane class, 179
Groovy programming language, 430–431,
438–439
group method (Matcher), 135, 140–141
groupCount method (Matcher), 141
groupingBy method (Collectors), 28–31
groupingByConcurrent method (Collectors), 43
GSS-API, 579
&gt;, entity reference, 148
GUI (Graphical User Interface), scripting
events for, 437–442

From the Library of Hristo Dimov Hristov

1026

Index

H
H in masks, 692
\h, \H, in regular expressions, 131

Half-closing connections, 249
Handbook of Applied Cryptography, The
(Menezes et al.), 551
handle method (CallbackHandler), 545
handleGetObject method (ResourceBundle), 412–413
Handles (Swing), 644, 661
hash/Digest.java, 549
hashCode method
of Annotation, 464
of Permission, 523
HashXxxAttributeSet classes, 852, 880
Haskell programming language, 430
hasMoreElements method (Enumeration), 987–989
hasNext method (XMLStreamReader), 208
hasRemaining method (Buffer), 122
Header information, from server, 259
Headers (Swing tables)
rendering, 627
scrolling, 601
helloNative/HelloNative.c, 943
helloNative/HelloNative.h, 942
helloNative/HelloNative.java, 941
helloNative/HelloNativeTest.java, 945
Hex editors
creating class files in, 505
modifying bytecodes with, 507
Hidden commands, in XML comments, 149
HORIZONTAL_SPLIT value (JSplitPane), 732
HORIZONTAL_WRAP value (JList), 583
Hosts
and IP addresses, 239–241
local, 240
Hot deployment, 496
HTML (HyperText Markup Language)
attributes in, 148
displaying with JEditorPane, 681, 712–719
end and empty tags in, 146
forms in, 268
generating from XML files, 222–225
mixing with JSP, 449
printing, 874
vs. XML, 145–146
HTMLDocument class, 681
HTTP (Hypertext Transfer Protocol), 285
request headers in, 261–262
using SSL over, 579
http: URI scheme, 257, 517, 713

https: URI scheme, 257, 579
HttpURLConnection class, getErrorStream method, 273,

277
HyperlinkEvent class, getURL method, 715, 719
HyperlinkListener interface, hyperlinkUpdate method,

715, 718
Hyperlinks, 713

I
I (int), type code, 87, 961

I/O streams. See Input streams, Output
streams
IANA (Internet Assigned Numbers
Authority), 361
IBM, 143, 150
IBM DB2 database, 291
IBM437 encoding, 406
ICC profiles, 836
Icons
for frames, 743
in column headers, 627
in table cells, 626
in trees, 648, 661
one-touch expand, 732
tray, 932
ID, IDREF, IDREFS attribute types (DTDs), 167–168
identity method (Function), 24
Identity (do-nothing) transformation, 213
Identity values, 34
IDs, uniqueness of, 168, 178
IETF BCP 47, 377
ifPresent method (Optional), 14–15, 41
IIOImage class, 827, 834
IIOServiceProvider class, getVendorName, getVersion
methods, 825, 833
IllegalAccessException, 674
IllegalArgumentException, 207, 706, 710, 712, 976
IllegalStateException, 24, 826, 914
Imageable area, 855
imageFlavor method (DataFlavor), 895
ImageInputStream class, “seek forward only” of,
825
ImageIO class
createImageXxxStream methods, 825, 832
determining image type, 823–824
getImageXxxByXxx methods, 824, 832
getReaderXxx , getWriterXxx methods, 825, 832
read, write methods, 823, 831
imageIO/ImageIOFrame.java, 828
ImageOutputStream interface, 827

From the Library of Hristo Dimov Hristov

Index

imageProcessing/ImageProcessingFrame.java, 846
ImageReader class, 824
getHeight, getWidth methods, 826, 833
getNumXxx methods, 826, 833
getOriginatingProvider method, 824, 833
read method, 832
readThumbnail method, 833
setInput method, 832
ImageReaderWriterSpi class, getXxx methods, 833

Images
blurring, 844
buffered, 798
types of, 835
color-model-specific values of, 837
constructing from pixels, 835–842
converting between Java and native
formats, 895
edge detection of, 845
filtering, 842–851
getting size of, before reading, 826
incremental rendering of, 834
manipulating, 834–851
metadata in, 827
multiple, in a file, 825–834
printing, 852–862, 874, 876
readers/writers for, 823–834
rotating, 818, 843
scaling, 818, 820
superimposing, 807–808
thumbnails for, 826
transferring via clipboard, 894
imageTransfer/ImageTransferFrame.java, 897
ImageTransferable class, 895, 909
ImageWriter class, 824, 827
canInsertImage method, 827, 834
getOriginatingProvider method, 834
setOutput method, 834
write, writeInsert methods, 827, 834
IMAP (Internet Message Access Protocol),
579
implements specification, type use annotations
in, 468
#IMPLIED attribute (DTD), 167
implies method
of Permission, 523–524, 530
of ProtectionDomain, 514
import statement, 496
importData method (TransferHandler), 912–914, 918
include method (RowFilter), 616, 624
INCLUDE environment variable, 984

1027

Incremental rendering, 834
Indexed color model, 844
indexOfComponent, indexOfTab methods (JTabbedPane),
737, 740
indexOfTabComponent method (JTabbedPane), 741
IndexOutOfBoundsException, 826
InetAddress class, 239–241
getXxx methods, 240–241
inetAddress/InetAddressTest.java, 240
InetSocketAddress class, isUnresolved method, 256
Infinite trees, 675
Inheritance trees, 303
@Inherited annotation, 471, 474
init method
of Cipher, 573
of KeyGenerator, 574
Initialization blocks, for shared libraries, 947
initialize method
of LoginModule, 546
of SimpleLoginModule, 538
INPUT_STREAM class (DocFlavor), 875
Input streams, 48–59
and Unicode, 48
as input source, 150
buffered, 57–59
byte processing in, 57
byte-oriented, 48
chaining, 57
closing, 49
encoding for, 60
filters for, 55–59
hierarchy of, 51–55
keeping open, 249
monitoring progress of, 726–731
objects in, 80–100
total number of bytes in, 727
Input validation mask, 685
InputSource class, 171
InputStream class, 48–51, 52
available method, 49–50, 727
close method, 49–50
mark, markSupported methods, 50
markSupported method, 50
read method, 48–50
reset method, 50
skip method, 50
InputStreamReader class, 60, 726
InputVerifier class, verify method, 690
INSERT statement (SQL), 290
and autogenerated keys, 321

From the Library of Hristo Dimov Hristov

1028

Index

INSERT statement (SQL) (continued)

executing, 298, 300, 316
in batch updates, 345
vs. methods of ResultSet, 325
insertNodeInto method (DefaultTreeModel), 652, 658
insertRow method (ResultSet), 325, 328
insertString method (DocumentFilter), 688–689,
702
insertTab method (JTabbedPane), 736, 740
insertUpdate method (DocumentListener), 682, 685
Inside Java™ 2 Platform Security (Gong et al.),
492
installUI method (LayerUI), 764
Instance fields
accessing from native code, 956–960
annotating, 466
instanceof keyword, and type use annotations,
468
Instant class, 352
and legacy classes, 369
arithmetic operations, 353
from method, 369
immutable, 354
now method, 352
Instrumentation API, 487
int type
printing, 61
storing, 70
type code for, 87, 961
vs. C types, 947
writing in binary format, 69
IntBuffer class, 124
INTEGER data type (SQL), 291, 348
Integers
ranges of, 36
supported locales for, 686
validating input of, 686
IntegerSyntax class, 882
@interface declaration, 456, 462
Interfaces
accessing script classes with, 436
annotating, 466, 470
implementing in script engines, 435
Internal frames (Swing), 741–752
cascading/tiling, 744–748
closing, 748
dialogs in, 750
dragging, 751–760
grabbers of, 742
icons for, 743

managing on desktop, 751
positioning, 744
resizable, 745
selected, 744
states of, 745
visibility of, 744
internalFrame/DesktopFrame.java, 752
InternalFrameListener interface, internalFrameClosing
method, 751
InternationalFormatter class, 689
Internationalization, 371–428
Interpolation, 843
for gradients, 797–798
strategies of, 843
when transforming images, 818, 820, 843
Interruptible sockets, 250–257
interruptible/InterruptibleSocketTest.java, 251
intersect method (Area), 787–788
ints method (Random), 37, 40
IntStream interface, 36–41
average, max, min, sum methods, 37, 39
boxed method, 36, 39
mapToInt method, 36
of, range, rangeClosed methods, 36, 38
summaryStatistics method, 37, 39
toArray method, 36, 38
IntSummaryStatistics class, 20, 23, 37, 41
intValue method (Number), 379
Invalid pointers (C, C++), 940
InvalidPathException, 101
Invocable interface, 435
getInterface method, 436
invokeXxx methods, 435–436
Invocation API, 980–985
invocation/InvocationTest.c, 981
IOException, 237, 716
IP addresses, 235, 239–241
validating, 693–694
IPP (Internet Printing Protocol) 1.1, 885
IPv6 addresses, 239
isAfter, isBefore methods (Date and Time API),
356, 360, 363
isAfterLast method (ResultSet), 324, 327
isAnnotationPresent method (AnnotatedElement), 462
IsAssignableFrom function (C), 989, 1001
isBeforeFirst method (ResultSet), 324, 327
isCanceled method (ProgressMonitor), 723, 731
isCellEditable method
of AbstractCellEditor, 630
of AbstractTableModel, 628

From the Library of Hristo Dimov Hristov

Index

of CellEditor, 638
of DefaultTableModel, 628
of TableModel, 608, 628
isCharacters method (XMLStreamReader), 208
isClosable method (JInternalFrame), 758
isClosed method
of JInternalFrame, 758
of ResultSet, 301
of Socket, 239
of Statement, 300
isConnected method (Socket), 239
isContinuousLayout method (JSplitPane), 735
isDataFlavorAvailable method (Clipboard), 891
isDataFlavorSupported method (Transferable), 892
isDesktopSupported method (Desktop), 927, 931
isDirectory method
of BasicFileAttributes, 109
of ZipEntry, 79
isDrop method (TransferSupport), 914, 919
isEchoOn method (PasswordCallback), 546
isEditValid method (JFormattedTextField), 687, 690,
701
isEndElement method (XMLStreamReader), 208
isExecutable method (Files), 108–109
isFirst method (ResultSet), 324, 327
isGroupingUsed method (NumberFormat), 383
isHidden method (Files), 108–109
isIcon method (JInternalFrame), 745, 758
isIconifiable method (JInternalFrame), 758
isIgnoringElementContentWhitespace method
(DocumentBuilderFactory), 171
isImageAutoSize method (TrayIcon), 937
isIndeterminate method (JRootPane), 730
isInputShutdown method (Socket), 249
isInsert method (JList.DropLocation), 915, 920
isInsertXxx methods (JTable.DropLocation), 920
isLast method (ResultSet), 324, 327
isLeaf method
of DefaultTreeModel, 648
of TreeModel, 649, 672, 680
of TreeNode, 648–649
isLeap method (Date and Time API), 356
isMaximizable method (JInternalFrame), 758
isMaximum method (JInternalFrame), 758
isMimeTypeEqual method (DataFlavor), 894
isNamespaceAware method
of DocumentBuilderFactory, 199
of SAXParserFactory, 203
isNegative method (Instant, Duration), 353
ISO 216 paper sizes, 412

1029

ISO
ISO
ISO
ISO
ISO

3166–1 country codes, 374
4217 currency identifiers, 384
639–1 language codes, 374
8601 format, 318, 471
8859–1 standard, 60, 68
isOneTouchExpandable method (JSplitPane), 734
isOutputShutdown method (Socket), 249
isParseIntegerOnly method (NumberFormat), 383
isPresent method (Optional), 15–16
iSQL-Viewer program, 334
isReadable method (Files), 108–109
isRegularFile method
of BasicFileAttributes, 109
of Files, 108–109
isResizable method (JInternalFrame), 758
isSelected method (JInternalFrame), 747, 758
isShared method (FileLock), 127
isStartElement method (XMLStreamReader), 208
isStringPainted method (JProgressBar), 730
isSupported method
of Desktop, 927, 931
of SystemTray, 932, 936
isSymbolicLink method
of BasicFileAttributes, 109
of Files, 108–109
isUnresolved method (InetSocketAddress), 256
isValidating method
of DocumentBuilderFactory, 171
of SAXParserFactory, 203
isVisible method (JInternalFrame), 759
isWhiteSpace method (XMLStreamReader), 208
isWritable method (Files), 108–109
isZero method (Instant, Duration), 353
item method
of NamedNodeMap, 162
of NodeList, 151, 162, 169
Iterable interface, 111
iterate method (Stream), 5, 8, 12, 36
Iterator interface, 298
iterator method
of BaseStream, 19–20
of SQLException, 302, 304
Iterators, 19

J
J (long), type code, 87, 961

JAAS (Java Authentication and Authorization
Service), 530–546
configuration files in, 531, 536
login modules in, 537–546

From the Library of Hristo Dimov Hristov

1030

Index

jaas/jaas.config, 545
jaas/JAASTest.java, 544
jaas/JAASTest.policy, 545
jaas/SimpleCallbackHandler.java, 543
jaas/SimpleLoginModule.java, 541
jaas/SimplePrincipal.java, 540
jaas.config file, 533

JAR files
automatic registration in, 294
class loaders in, 495
code base of, 510
for plugins, 494
manifest of, 77, 921
resources in, 408
signing, 555–556
jar: URI scheme, 257
jarray type (C), 988
jarsigner program, 555–556, 563
JarXxxStream classes, 77
Java programming language
deployment directory of, 564, 566
internationalization support in, 371
platform-independent, 70
security of, 510–514
vs. SQL, 311
Java 2D API, 765–937
features supported in, 766
rendering pipeline, 766–768
Java EE (Java Platform, Enterprise Edition),
285
Java Plug-in, loading signed code, 563
java program
-javaagent option, 487
jdbc.drivers property in, 294
-noverify option, 506
security managers in, 516
-splash option, 921
Java Rich Internet Applications Guide, 566
Java™ Virtual Machine Specification, The
(Lindholm/Yellin), 506
java.awt.AlphaComposite API, 817
java.awt.BasicStroke API, 796
java.awt.Color API, 842
java.awt.datatransfer API, 888
java.awt.datatransfer.Clipboard API, 891–892, 894,
903
java.awt.datatransfer.ClipboardOwner API, 892
java.awt.datatransfer.DataFlavor API, 893–894
java.awt.datatransfer.FlavorListener API, 894
java.awt.datatransfer.Transferable API, 892, 894

java.awt.Desktop API, 931–932
java.awt.dnd API, 904
java.awt.font.TextLayout API, 807
java.awt.geom package, 92
java.awt.geom.AffineTransform API, 803–804
java.awt.geom.Arc2D.Double API, 785
java.awt.geom.Area API, 788
java.awt.geom.CubicCurve2D.Double API, 785
java.awt.geom.GeneralPath API, 785
java.awt.geom.Path2D API, 786
java.awt.geom.Path2D.Float API, 786
java.awt.geom.QuadCurve2D.Double API, 785
java.awt.geom.RoundRectangle2D.Double API, 785
java.awt.GradientPaint API, 798
java.awt.Graphics API, 806
java.awt.Graphics2D API, 768, 796, 798, 804, 807,

816, 823
java.awt.image.AffineTransformOp API, 850
java.awt.image.BufferedImage API, 840
java.awt.image.BufferedImageOp API, 850
java.awt.image.ByteLookupTable API, 850
java.awt.image.ColorModel API, 842
java.awt.image.ConvolveOp API, 851
java.awt.image.Kernel API, 851
java.awt.image.LookupOp API, 850
java.awt.image.Raster API, 841
java.awt.image.RescaleOp API, 850
java.awt.image.ShortLookupTable API, 851
java.awt.image.WritableRaster API, 841
java.awt.print.Book API, 873
java.awt.print.PageFormat API, 861–862
java.awt.print.Printable API, 860
java.awt.print.PrinterJob API, 861, 873
java.awt.RenderingHints API, 823
java.awt.SplashScreen API, 926
java.awt.SystemTray API, 936
java.awt.TexturePaint API, 799
java.awt.Toolkit API, 891
java.awt.TrayIcon API, 936–937
java.beans.PropertyChangeEvent API, 759
java.beans.PropertyVetoException API, 760
java.beans.VetoableChangeListener API, 759
java.io.BufferedInputStream API, 59
java.io.BufferedOutputStream API, 59
java.io.Closeable API, 54
java.io.DataInput API, 71
java.io.DataOutput API, 72
java.io.File API, 103
java.io.File.separator constant, 56
java.io.FileInputStream API, 58, 121

From the Library of Hristo Dimov Hristov

Index

java.io.FileOutputStream API, 59, 121
java.io.Flushable API, 55
java.io.InputStream API, 49–50
java.io.ObjectInputStream API, 85
java.io.ObjectOutputStream API, 85
java.io.OutputStream API, 50–51
java.io.PrintWriter API, 62
java.io.PushbackInputStream API, 59
java.io.RandomAccessFile API, 76, 121
java.lang, java.lang.annotation packages,

annotations in, 470

1031

java.nio.file.Paths API, 103
java.nio.file.SimpleFileVisitor API, 115
java.policy file, 515, 565
.java.policy file, 515–516
java.security package, 492, 547
java.security file, 515
java.security.CodeSource API, 514
java.security.MessageDigest API, 550
java.security.Permission API, 530
java.security.Principal API, 537
java.security.PrivilegedAction API, 536
java.security.PrivilegedExceptionAction API, 537
java.security.ProtectionDomain API, 514
java.sql.Blob API, 317
java.sql.Clob API, 317–318
java.sql.Connection API, 299, 304, 315, 318, 326,

java.lang.annotation.Annotation API, 463–464
java.lang.Appendable API, 55
java.lang.CharSequence API, 40, 55
java.lang.Class API, 503, 514
java.lang.ClassLoader API, 503
java.lang.Readable API, 55
java.lang.reflect.AnnotatedElement API, 462
java.lang.SecurityManager API, 513
java.lang.System API, 946
java.lang.Thread API, 503
java.net package

java.sql.DatabaseMetaData API, 328, 342–343, 347
java.sql.DataTruncation API, 304–305
java.sql.DriverManager API, 297
java.sql.PreparedStatement API, 316
java.sql.ResultSet API, 300–301, 304, 317,

socket connections in, 238
supporting IPv6 addresses in, 240
URLs vs. URIs in, 257
java.net.HttpURLConnection API, 277
java.net.InetAddress API, 241
java.net.InetSocketAddress API, 256
java.net.ServerSocket API, 245
java.net.Socket API, 238–239, 249
java.net.URL API, 265
java.net.URLClassLoader API, 503
java.net.URLConnection API, 265–267
java.net.URLDecoder API, 277
java.net.URLEncoder API, 277
java.nio package, 247, 250
direct buffers in, 973
memory mapping in, 117
java.nio.Buffer API, 122, 126
java.nio.ByteBuffer API, 122–123
java.nio.channels.Channels API, 256–257
java.nio.channels.FileChannel API, 122, 128
java.nio.channels.FileLock API, 128
java.nio.channels.SocketChannel API, 256
java.nio.CharBuffer API, 124
java.nio.file.attribute.BasicFileAttributes API, 109
java.nio.file.Files API, 8, 104–106, 108–109, 114
java.nio.file.FileSystem API, 116
java.nio.file.FileSystems API, 116
java.nio.file.Path API, 103

java.sql.ResultSetMetaData API, 343
java.sql.Savepoint API, 347
java.sql.SQLXxx APIs, 304
java.sql.Statement API, 300, 304, 320–321, 347
java.text.CollationKey API, 400
java.text.Collator API, 399
java.text.Format API, 402
java.text.MessageFormat API, 401–402
java.text.Normalizer API, 400
java.text.NumberFormat API, 383
java.text.SimpleDateFormat API, 712
java.time.format.DateTimeFormatter API, 392
java.time.LocalXxx APIs, 393
java.time.ZonedDateTime API, 393
java.util.Arrays API, 8
java.util.Collection API, 5, 46
java.util.Currency API, 385
java.util.function.Supplier API, 8
java.util.Locale API, 377
java.util.Optional API, 15–16, 19
java.util.OptionalXxx APIs, 41
java.util.Random API, 40
java.util.regex.Matcher API, 140–141
java.util.regex.Pattern API, 8, 139–140
java.util.ResourceBundle API, 412–413
java.util.Stream API, 35
java.util.stream.BaseStream API, 20, 45

342, 346

326–328, 343

From the Library of Hristo Dimov Hristov

1032

Index

java.util.stream.Collectors API, 23, 27, 29, 33
java.util.stream.DoubleStream API, 39–40
java.util.stream.IntStream API, 38–39
java.util.stream.LongStream API, 39
java.util.stream.Stream API, 4, 10–13, 22
java.util.Xxx.SummaryStatistics APIs, 41
java.util.zip.ZipEntry API, 79
java.util.zip.ZipFile API, 80
java.util.zip.ZipInputStream API, 78
java.util.zip.ZipOutputStream API, 78–79
javac program
-encoding option, 407
-XprintRounds option, 480
JavaCompiler interface
getStandardFileManager method, 447
getTask method, 444, 448

Javadoc, 472
javaFileListFlavor method (DataFlavor), 914
JavaFileManager interface, 444–445
JavaFileObject interface, 444–445
javah program, 942, 990

JavaHelp, 713
JavaMail, 278
JavaOne conference, 284
javap program, 962
JavaScript, 430, 438
javax.annotation package, annotations in, 470
javax.crypto.Cipher API, 573
javax.crypto.CipherXxxStream APIs, 575
javax.crypto.KeyGenerator API, 574
javax.crypto.spec.SecretKeySpec API, 574
javax.imageio package, 823
javax.imageio.IIOImage API, 834
javax.imageio.ImageIO API, 831–832
javax.imageio.ImageReader API, 832–833
javax.imageio.ImageWriter API, 834
javax.imageio.spi.IIOServiceProvider API, 833
javax.imageio.spi.ImageReaderWriterSpi API, 833
javax.print.attribute.Attribute API, 886
javax.print.attribute.AttributeSet API, 886
javax.print.DocPrintJob API, 877, 886
javax.print.PrintService API, 877, 886
javax.print.PrintServiceLookup API, 877
javax.print.SimpleDoc API, 878
javax.print.StreamPrintServiceFactory API, 879
javax.script.Bindings API, 434
javax.script.Compilable API, 437
javax.script.CompiledScript API, 437
javax.script.Invocable API, 436
javax.script.ScriptContext API, 434

javax.script.ScriptEngine API, 433–434
javax.script.ScriptEngineFactory API, 431
javax.script.ScriptEngineManager API, 431, 433
javax.security.auth.callback.CallbackHandler API, 545
javax.security.auth.callback.NameCallback API, 545
javax.security.auth.callback.PasswordCallback API, 546
javax.security.auth.login.LoginContext API, 536
javax.security.auth.spi.LoginModule API, 546
javax.security.auth.Subject API, 536
javax.sql package, 349
javax.sql.RowSet API, 331–332
javax.sql.rowset API, 329
javax.sql.rowset.CachedRowSet API, 332
javax.sql.rowset.RowSetFactory API, 333
javax.sql.rowset.RowSetProvider API, 332
javax.swing.AbstractSpinnerModel API, 712
javax.swing.CellEditor API, 638
javax.swing.DefaultCellEditor API, 638
javax.swing.DefaultListModel API, 595
javax.swing.DefaultRowSorter API, 624
javax.swing.event.DocumentEvent API, 685
javax.swing.event.DocumentListener API, 685
javax.swing.event.HyperlinkEvent API, 719
javax.swing.event.HyperlinkListener API, 718
javax.swing.event.ListSelectionListener API, 588
javax.swing.event.TreeModelEvent API, 680
javax.swing.event.TreeModelListener API, 680
javax.swing.event.TreeSelectionEvent API, 671
javax.swing.event.TreeSelectionListener API, 671
javax.swing.JColorChooser API, 909
javax.swing.JComponent API, 650, 685, 759, 909
javax.swing.JDesktopPane API, 757
javax.swing.JEditorPane API, 718
javax.swing.JFileChooser API, 909
javax.swing.JFormattedTextField API, 701
javax.swing.JFormattedTextField.AbstractFormatter API,

701
javax.swing.JFrame API, 919
javax.swing.JInternalFrame API, 757–759
javax.swing.JLayer API, 763–764
javax.swing.JList API, 587, 593, 595, 599, 909,

919
javax.swing.JList.DropLocation API, 920
javax.swing.JProgressBar API, 730
javax.swing.JSpinner API, 710
javax.swing.JSpinner.DateEditor API, 712
javax.swing.JSplitPane API, 734–735
javax.swing.JTabbedPane API, 740–741
javax.swing.JTable API, 604, 622–623, 637, 909,

919

From the Library of Hristo Dimov Hristov

Index

javax.swing.JTable.DropLocation API, 920
javax.swing.JTree API, 649, 657, 671, 909, 919
javax.swing.JTree.DropLocation API, 920
javax.swing.ListCellRenderer API, 599
javax.swing.ListModel API, 593
javax.swing.ListSelectionModel API, 624
javax.swing.plaf.LayerUI API, 764
javax.swing.ProgressMonitor API, 731
javax.swing.ProgressMonitorInputStream API, 731
javax.swing.RowFilter API, 624–625
javax.swing.RowFilter.Entry API, 625
javax.swing.SpinnerXxxModel APIs, 711
javax.swing.table.TableCellEditor API, 638
javax.swing.table.TableCellRenderer API, 637
javax.swing.table.TableColumn API, 623, 637
javax.swing.table.TableColumnModel API, 623
javax.swing.table.TableModel API, 608, 621
javax.swing.table.TableRowSorter API, 624
javax.swing.table.TableStringConverter API, 624
javax.swing.text.DefaultFormatter API, 702
javax.swing.text.Document API, 685
javax.swing.text.DocumentFilter API, 702
javax.swing.text.JTextComponent API, 909, 919
javax.swing.text.JTextComponent.DropLocation API, 921
javax.swing.text.MaskFormatter API, 703
javax.swing.TransferHandler API, 909, 912, 918
javax.swing.TransferHandler.DropLocation API, 920
javax.swing.TransferHandler.TransferSupport API, 919
javax.swing.tree.DefaultMutableTreeNode API, 650, 663
javax.swing.tree.DefaultTreeCellRenderer API, 664
javax.swing.tree.DefaultTreeModel API, 650, 658
javax.swing.tree.MutableTreeNode API, 649
javax.swing.tree.TreeCellRenderer API, 663
javax.swing.tree.TreeModel API, 649, 679–680
javax.swing.tree.TreeNode API, 649, 658
javax.swing.tree.TreePath API, 658
javax.tools.Diagnostic API, 448–449
javax.tools.DiagnosticCollector API, 448
javax.tools.ForwardingJavaFileManager API, 449
javax.tools.JavaCompiler API, 447–448
javax.tools.JavaCompiler.CompilationTask API, 448
javax.tools.SimpleJavaFileObject API, 449
javax.tools.StandardJavaFileManager API, 448
javax.tools.Tool API, 447
javax.xml.parsers.DocumentBuilder API, 160, 170, 212
javax.xml.parsers.DocumentBuilderFactory API, 160,

171, 199
javax.xml.parsers.SAXParser API, 203
javax.xml.parsers.SAXParserFactory API, 203
javax.xml.stream.XMLInputFactory API, 207

1033

javax.xml.stream.XMLOutputFactory API, 221
javax.xml.stream.XMLStreamReader API, 208
javax.xml.stream.XMLStreamWriter API, 221–222
javax.xml.transform.dom.DOMResult API, 232
javax.xml.transform.dom.DOMSource API, 213
javax.xml.transform.sax.SAXSource API, 231
javax.xml.transform.stream.StreamResult API, 213
javax.xml.transform.stream.StreamSource API, 231
javax.xml.transform.Transformer API, 213
javax.xml.transform.TransformerFactory API, 213, 231
javax.xml.xpath.XPath API, 196
javax.xml.xpath.XPathFactory API, 195

JAXP (Java API for XML Processing), 150
jboolean type (C), 947
jbooleanArray type (C), 970
jbyte type (C), 947
jbyteArray type (C), 970
jchar type (C), 947, 949
jcharArray type (C), 970
JCheckBox class, 629
jclass type (C), 965
JColorChooser class

drag-and-drop behavior of, 905
setDragEnabled method, 909
JComboBox class, 629
JComponent class
addVetoableChangeListener method, 759

attaching verifiers to, 690
extending, 596
getPreferredSize method, 596–597, 685
paint method, 626, 766
paintComponent method, 596–597, 766
putClientProperty method, 645, 650, 751
setPreferredSize method, 685
setTransferHandler method, 906, 909
JDBC API, 281–350
configuration of, 291–297
debugging, 296
design of, 282–285
tracing, 296
uses of, 284–285
versions of, 281
JDBC API Tutorial and Reference (Fisher et
al.), 326, 349
JDBC drivers
escape syntax in, 318–319
JAR files for, 292
registering classes for, 294
scrollable/updatable result sets in, 323
types of, 283–284

From the Library of Hristo Dimov Hristov

1034

Index

JDBC/ODBC bridge, not available in Java 8,
283
JdbcRowSet interface, 329
JDesktopPane class, 742
getAllFrames method, 745–748, 757
no built-in cascading/tiling in,
744–748
setDragMode method, 751, 757
JDialog class, 750
JDK (Java Development Kit)
Apache Derby database, 291
DOM parser, 150
keytool program, 553
native2ascii program, 408
policytool program, 522
serialver program, 96
src.jar file, 981
StylePad demo, 682
SunJCE ciphers, 568
jdouble type (C), 947
jdoubleArray type (C), 970
JEditorPane class, 681, 712–719
addHyperlinkListener method, 718
drag-and-drop behavior of, 905
setEditable method, 714
setPage method, 714, 718
JFileChooser class
drag-and-drop behavior of, 905
setDragEnabled method, 909
jfloat type (C), 947
jfloatArray type (C), 970
JFormattedTextField class, 685–703
commitEdit method, 688, 701
constructor, 701
drag-and-drop behavior of, 905
get/setFocusLostBehavior methods, 688, 701
get/setValue methods, 687–688, 701
isEditValid method, 687, 690, 701
setText method, 688
supported formatters, 691–693
JFrame class, 742
adding transfer handler to, 912
setTransferHandler method, 919
jint type (C), 947
jintArray type (C), 970
JInternalFrame class, 748–750
constructor, 742, 757
get/setContentPane methods, 758
get/setFrameIcon methods, 743, 759
getDesktopPane method, 759

is/setClosable methods, 758
is/setClosed methods, 748, 758
is/setIcon methods, 745, 758
is/setIconifiable methods, 758
is/setMaximizable methods, 758
is/setMaximum methods, 745, 758
is/setResizable methods, 758
is/setSelected methods, 744, 747, 758
is/setVisible methods, 744, 759
moveToXxx methods, 758

no built-in cascading/tiling in, 744–748
reshape method, 743, 758
show method, 759
JLabel class

extending, 661–662
using with JList, 597
JLayer class, 760–764
constructor, 763
setLayerEventMask method, 764
JList class, 582–588
addListSelectionListener method, 587
as generic type, 582
configuring for custom renderers, 597
constructor, 587, 593
drag-and-drop behavior of, 905, 913–914
get/setLayoutOrientation methods, 587
get/setPrototypeCellValue methods, 593
get/setSelectionMode methods, 583, 587
get/setVisibleRowCount methods, 583, 587
getBackground, getForeground, getSelectionXxx
methods, 596, 599
getModel method, 595
getSelectedValue method, 584, 587
getSelectedValuesList method, 585, 587
HORIZONTAL_WRAP, VERTICAL, VERTICAL_WRAP values,
583
setCellRenderer method, 597, 599
setDragEnabled method, 909
setDropMode method, 913, 919
setFixedCellXxx methods, 593
visual appearance of data vs. data storage
in, 588
JList.DropLocation class
getIndex method, 914, 920
isInsert method, 915, 920
jlong type (C), 947
jlongArray type (C), 970
JNDI service, 349
class loaders in, 495
JndiLoginModule class, 532

From the Library of Hristo Dimov Hristov

Index

JNI (Java Native Interface), 940–1001
array elements in, 970–974
calling convention in, 950
debugging mode of, 980
error handling in, 974–979
functions in C++, 950
invoking Java methods in, 963–970
online documentation for, 952
JNI_CreateJavaVM function (C), 980–981, 985
JNI_OnLoad, JNI_OnUnload methods (C), 947
jni.h file, 947
JNICALL, JNIEXPORT macros, 942
JobAttributes class (obsolete), 886
jobject type (C), 965, 971, 988
jobjectArray type (C), 970
Join styles, 788–789
joining method (Collectors), 20, 23
JoinRowSet interface, 329
JOptionPane class, showInternalXxxDialog methods,
750
JPanel class, 857
adding layers to, 760
JPasswordField class, 681
drag-and-drop behavior of, 905
JPEG format, 823
image manipulations on, 846
printing, 874
reading, 824
transparency in, 921
JProgressBar class, 719–722, 923
constructor, 730
get/setMaximum, get/setMinimum methods, 719, 730
get/setString methods, 720, 730
getValue method, 730
is/setIndeterminate methods, 720, 730
is/setStringPainted methods, 720, 730
setValue method, 719, 730
js.properties file, 438
JScrollPane class
with JList, 582, 590
with JTabbedPane, 736
with JTable, 601
JSF (JavaServer Faces), 268
jshort type (C), 947
jshortArray type (C), 970
JSP (JavaServer Pages), 449–454
JSpinner class, 703–712
constructor, 710
getValue method, 704, 710
setEditor, setValue methods, 710

1035

JSplitPane class, 732–735

constructor, 734
HORIZONTAL_SPLIT, VERTICAL_SPLIT values, 732
is/setContinuousLayout methods, 733, 735
is/setOneTouchExpandable methods, 732, 734
setXxxComponent methods, 735

JSSE (Java Secure Socket Extension), 579
jstring type (C), 950–951, 965, 988
JTabbedPane class, 735–741
addChangeListener method, 737, 741
addTab method, 736, 740

constructor, 736, 740
get/setComponentAt methods, 740
get/setIconAt methods, 740
get/setMnemonicAt methods, 737, 741
get/setSelectedIndex methods, 736–737, 740
get/setTitleAt methods, 740
getSelectedComponent method, 740
getTabComponentAt, getTabLayoutPolicy methods,

741
getTabCount method, 740
indexOfComponent, indexOfTab methods, 737, 740
indexOfTabComponent method, 741
insertTab, removeTabAt methods, 736, 740
setTabXxx methods, 737, 741
JTable class, 599–638
addColumn method, 617, 622

asymmetric, 608
cell editors, automatically installed, 629
constructor, 604
convertXxxIndexToModel methods, 614, 623
default rendering actions, 609
drag-and-drop behavior of, 905, 913–914
get/setAutoCreateRowSorter methods, 602, 604,
614
get/setCellSelectionEnabled methods, 613, 622
get/setColumnSelectionAllowed methods, 613, 622
get/setDefaultRenderer methods, 626–627, 637
get/setFillsViewportHeight methods, 602, 604
getColumnModel method, 622
getDefaultEditor method, 637
getRowXxx methods, 622
getSelectionModel method, 622
moveColumn, removeColumn methods, 617, 623
not generic, 601
print method, 602, 604
resize modes, 611
setAutoResizeMode method, 611, 622
setDragEnabled method, 909
setDropMode method, 913, 919

From the Library of Hristo Dimov Hristov

1036

Index

JTable class (continued)
setRowHeight, setRowMargin, setRowSelectionAllowed

methods, 612, 622
setRowSorter method, 614, 623
JTextArea class, 681
drag-and-drop behavior of, 905
extending, 524
JTextComponent class
drag-and-drop behavior of, 913–914
setDragEnabled method, 909
setDropMode method, 913, 919
JTextField class, 681
drag-and-drop behavior of, 905
with DefaultCellEditor, 629
JTextPane class, 681
drag-and-drop behavior of, 905
JTree class, 639–680
addTreeSelectionListener method, 664
constructor, 640, 649
drag-and-drop behavior of, 905, 913–914
getLastSelectedPathComponent method, 652, 657
getSelectionPath method, 651, 657, 665, 671
getSelectionPaths method, 665, 671
identifying nodes, 650
makeVisible method, 653, 657
scrollPathToVisible method, 653, 657
setDragEnabled method, 909
setDropMode method, 913, 919
setRootVisible method, 647, 649
setShowsRootHandles method, 646, 649
JTree.DropLocation class
getChildIndex method, 920
getPath method, 914, 920
JUnit 4 tool, 456
Just-in-time compiler, 980
jvm pointer (C), 980–981
JVM (Java virtual machine)
bootstrap class loader in, 493
class files in, 492
creating, 980
embedding into native code, 980–985
passing command-line arguments to, 515
terminating, 509–530, 981
transferring object references in, 902

K
\k, in regular expressions, 131

Kerberos protocol, 531, 579
Kernel class, 845, 851

Kernel, of a convolution, 844

KEY_Xxx rendering hints, 817–818

Key/value pairs. See Properties
Keyboard, reading from, 48, 60
KeyGenerator class, 569
generateKey method, 569, 574
getInstance method, 574
init method, 574
KeyPairGenerator class, 576
Keys
autogenerated, 320–321
generating, 569–574
primary, 320
keystore keyword, 563
KeyStoreLoginModule class, 532
Keystores, 553–556, 563
referencing in policy files, 563
Keystrokes
filtering, 685
monitoring, 682
keytool program, 553–556
Krb5LoginModule class, 532

L
L

(object), type code, 87, 961
in masks, 692
Lambda expressions, using with map method,
9
Landscape orientation, 802
Language codes, 374
Language Model API, 476–477
Language tags, 377
last method (ResultSet), 323, 327
lastInMonth method (TemporalAdjusters), 359
lastXxxTime methods (BasicFileAttributes), 109
layer/ColorFrame.java, 761
Layers (Swing), 760–764
LayerUI class, 760–764
extending, 760
installUI, uninstallUI methods, 764
paint method, 764
processXxxEvent methods, 761, 764
Layout algorithm, 862–863
layoutPages method (Banner), 863
LCD displays, 836
LD_LIBRARY_PATH environment variable, 946,
985
LDAP (Lightweight Directory Access
Protocol), 579
Leaf icons, 661

From the Library of Hristo Dimov Hristov

Index

Leap seconds, 352
Leap years, 356
Learn SQL The Hard Way (Shaw), 285
Learning SQL (Beaulieu), 285
Leaves (Swing), 639, 647, 672
icons for, 648, 661
Legacy data, converting into XML, 227
length method
of Blob, Clob, 317
of CharSequence, 55
of RandomAccessFile, 73, 76
LIB environment variable, 984
Libraries, replacing with newer versions,
494
LIKE statement (SQL), 289, 319
limit method (Stream), 10–11, 43, 122
Line feed, 61, 405
in e-mails, 278
in regular expressions, 132
Line2D class, 769
lines method (Files), 6, 8
Lines, reading, 6
lineTo method (Path2D.Float), 775, 786
Linux operating system
compiling invocation API, 984
Java deployment directory in, 564
library path in, 946
OpenSSL in, 560
using GNU C compiler, 943
list method (Files), 110
List boxes (Swing), 582–588
constructing, 582
from arrays/vectors, 594–595
new components for each cell, 597
double-clicking in, 585
fixed cell sizes in, 590
layout orientation of, 583
scrolling, 582, 590
selecting multiple items in, 583, 585
using with split panes, 733
values of:
computing when called, 589
editing, 593–595
rendering, 595–599
very long, 589–590
List cell renderers, 595–599
List interface, 704
List models (Swing), 588–593
List selection events, 584
list/ListFrame.java, 585

1037

ListCellRenderer interface, 595, 597
getListCellRendererComponent method, 595–599
ListDataListener interface, 589
ListModel interface
getElementAt, getSize methods, 589, 593

implementing, 588–589, 594
listRendering/FontCellRenderer.java, 598
ListResourceBundle class, 411
ListSelectionEvent class, 584
getValueIsAdjusting method, 584
ListSelectionListener interface, valueChanged

method, 584, 588
ListSelectionModel interface

selection modes, 612
setSelectionMode method, 612, 624
LITTLE_ENDIAN constant (ByteOrder), 123

Little-endian order, 70, 118, 407
Load time, 486
loadClass method
of ClassLoader, 496, 498
of URLClassLoader, 494
loadLibrary method (System), 944, 946
LOBs (large objects), 316–318
creating empty, 318
placing in database, 316
reading, 316
Local hosts, 240
Local names, 198
Local variables, annotating, 466
LocalDate class
and legacy classes, 369
methods of, 356–357, 386, 393
localdates/LocalDates.java, 358
LocalDateTime class, 361
and legacy classes, 369
atZone method, 361
methods of, 386, 393
Locale, 373–377
constructor, 377
debugging, 377
forLanguageTag method, 377
get/setDefault methods, 376–377
getCountry method, 377
getDisplayCountry, getDisplayLanguage methods,
377
getDisplayName method, 376–377, 379
getInstance method, 393
getLanguage method, 377
toLanguageTag method, 375, 377
toString method, 377

From the Library of Hristo Dimov Hristov

1038

Index

Locales, 28, 372–377
and resources bundles, 409–410
current, 401
default, 365, 376
display names of, 376
formatting styles for, 366, 386–387
numbers in, 379, 686
predefined, 375
supported by classes, 376
variants in, 373, 410
LocalTime class, 360–361
and legacy classes, 369
methods of, 360, 386, 393
lock method (FileChannel), 126–128
Locks, 126–128
for the tail portion of a file, 127
shared, 127
unlocking, 127
Log files, 406
Log messages, adding to classes,
481–486
@LogEntry annotation, 481
Logging, code generation for, 455
LoggingPermission class, 520
LoginContext class, 531
constructor, 536
getSubject method, 536
login, logout methods, 531, 536
LoginException, 536
LoginModule interface, methods of, 546
Logins
committed, 540
modules for, 532
custom, 537–546
separating from action code, 539
Long class, MAX_VALUE constant, 127
LONG NVARCHAR data type (SQL), 348
long type
printing, 61
type code for, 87, 961
vs. C types, 947
writing in binary format, 69
LONG VARCHAR data type (SQL), 348
LongBuffer class, 124
longList/LongListFrame.java, 591
longList/WordListModel.java, 592
longs method (Random), 37, 40
LongStream interface, 36–41
average, max, min, sum methods, 37, 39
boxed method, 36, 39

mapToLong method, 36
of method, 39
range, rangeClosed methods, 36, 39
summaryStatistics method, 37, 39
toArray method, 36, 39
LongSummaryStatistics class, 20, 23, 37, 41

Look-and-feel
displaying trees in, 645
handles for subtrees in, 661
hot keys in, 686
selecting multiple nodes in, 665
lookingAt method (Matcher), 140
Lookup tables, 411
LookupOp class, 843–844
constructor, 850
lookupPrintServices method (PrintServiceLookup),
874, 877
lookupStreamPrintServiceFactories method
(StreamPrintServiceFactory), 879
LookupTable class, 844
lostOwnership method (ClipboardOwner), 888,
892
LSB (least significant byte), 70
LSOutput interface, 211
LSSerializer interface, 210
&lt;, entity reference, 148

M
Mac OS X
character encodings in, 404
OpenSSL in, 560
resources in, 408
mail method (Desktop), 932
Mail messages/headers, 277–280
mail/MailTest.java, 279
mailto: URI scheme, 927
main method
executing, 493
setting security managers in, 516
makeShape method (ShapeMaker), 776–777
makeVisible method (JTree), 653, 657
Mandelbrot set, 837–838
Mangling names, 943, 961
Manifest files, 77, 921
map method
of FileChannel, 117, 122
of Optional, 14–15
of Stream, 9–10
Map interface, 817
mapping method (Collectors), 30, 33

From the Library of Hristo Dimov Hristov

Index

Maps
concurrent, 25
merging, 24–27, 43
mapToXxx methods ( XxxStream), 36
mark method
of Buffer, 125–126
of InputStream, 50
Marker annotations, 465
markSupported method (InputStream), 50
MaskFormatter class, 692–693
constructor, 703
get/setInvalidCharacters methods, 692, 703
get/setPlaceholder methods, 703
get/setValidCharacters methods, 692, 703
get/setValueContainsLiteralCharacters methods,
703
getPlaceholderCharacter method, 703
overtype mode, 693
setPlaceholderCharacter method, 693, 703
Mastering Regular Expressions (Friedl), 134
match attribute (XSLT), 224
match/HrefMatch.java, 137
matcher method (Pattern), 134, 140
Matcher class
end method, 135, 137, 140–141
find method, 137, 140
group method, 135, 140–141
groupCount method, 141
lookingAt method, 140
matches method, 134
quoteReplacement method, 141
replaceXxx methods, 139, 141
reset method, 141
start method, 135, 137, 140–141
matches method (Matcher), 134
Matrices, transformations of, 802
max method (of streams), 12, 37, 39–40
MAX_VALUE constant (Long), 127
maxBy method (Collectors), 30, 33
maxoccurs attribute (XML Schema), 174
MD5 algorithm, 548–549
MDI (multiple document interface), 741–742
Memory addresses, vs. serial numbers, 84
Memory mapping, 116–128
modes of, 117
memoryMap/MemoryMapTest.java, 119
Message digests, 547–550
Message signing, 550–553
MessageDigest class
digest method, 549–550

1039

extending, 548
getInstance method, 548–550
reset method, 550
update method, 549–550
MessageFormat class, 400–404, 414
applyPattern method, 401

constructor, 401
format method, 401–402
get/setLocale methods, 402

ignoring the first limit, 404
Messages, formatting, 400–404
Meta-annotations, 456, 472–475
Metadata (databases), 333–343
Metal look-and-feel
hot keys in, 686
internal frames in, 742–744
one-touch expand icons in, 732
selecting multiple nodes in, 665
trees in, 644–645
Method class, 457
Method references, type use annotations in,
468
Method verification errors, 506, 508
Methods
adding logging messages to, 481–486
annotating, 456, 466, 470
calling from native code, 963–970
getters/setters, generated automatically,
480
instance, 963–964
mangling names of, 943, 961
native, 939–1001
of annotation interfaces, 463
overriding, 471
signatures of, 961–963
static, 964–965
vetoable, 748
Microsoft
compiler, 944
invocation API in, 984
ODBC API of, 282
SQL Server, 291
single active statements in, 301
MIME (Multipurpose Internet Mail
Extensions), 824
MIME types, 892–894
for print services, 875
MimeMessage class, methods of, 278
min method (of streams), 12, 37, 39–40
minBy method (Collectors), 30, 33

From the Library of Hristo Dimov Hristov

1040

Index

minoccurs attribute (XML Schema), 174
minus, minusXxx methods (Date and Time API),

353, 356–357, 360, 363
MissingResourceException, 409

Miter join, 788–789
Miter limit, 790
Mixed content (XML), 147
parsing, 166
Model-view-controller design pattern, 588
Modernist painting example, 211
Modified UTF-8, 70–72, 407
and native code, 949–952
Monads, 10
Month enumeration, 355
getDisplayName method, 365, 386
MonthDay class, 357
Mouse, double-clicking on list components,
585
move method (Files), 106, 108
moveColumn method (JTable), 617, 623
moveTo method (Path2D.Float), 775–776, 786
moveToXxx methods (JInternalFrame), 758
moveToXxxRow methods (ResultSet), 325, 327
MSB (most significant byte), 70
Multiple-page printing, 861–864
multipliedBy method (Instant, Duration), 353
MutableTreeNode interface
implementing, 641
setUserObject method, 642, 649
MySQL database, 291

N
\n

as line feed, 61, 154, 405
in e-mails, 278
in regular expressions, 130–131
NameCallback class, 538
constructor, 545
methods of, 545
NamedNodeMap interface, getLength, item methods,
162
names method (Win32RegKey), 987
Namespaces, 196–199
activating processing of, 174
aliases (prefixes) for, 172, 197
of attributes, 198
of child elements, 197
using class loaders as, 496
Nashorn engine, 430–431
National character strings, 348

National Institute of Standards and
Technology, 234, 548
native keyword, 940
Native applications
communicating with Java, 903–921
data transfers between Java and, 888
Native methods, 939–1001
and garbage collection, 951
array elements in, 970–974
class references in, 958
compiling, 943
enumerating keys with, 989
error handling in, 974–979
exceptions in, 975
instance fields in, 956–960
invoking Java constructors in, 965–966
linking to Java, 946
naming, 941–942
overloading, 941
reasons to use, 940
registry access functions in, 988–1001
static, 941
static fields in, 960–961
strings in, 949
native2ascii program, 408, 410, 414
NCHAR data type (SQL), 348
NCHAR, NCLOB data types (SQL), 348
negated method (Instant, Duration), 353
Negative byte values, 693
Nervous text applet, 546
NetBeans, startup plugins for, 922
NetPermission class, 519
Networking, 233–280
blocking worker threads indefinitely,
723
debugging, 233–236
getting huge images from, 826
newBufferedXxx methods (Files), 104
NewDirectByteBuffer function (C), 973
newDirectoryStream method (Files), 111, 114
newDocument method (DocumentBuilder), 209, 212,
227
newDocumentBuilder method (DocumentBuilderFactory),
150, 160, 209
newFactory method (RowSetProvider), 329, 332
newFileSystem method (FileSystems), 115–116
NewGlobalRef function (C), 958
newInputStream method
of Channels, 256
of Files, 104–105

From the Library of Hristo Dimov Hristov

Index

newInstance method
of DocumentBuilderFactory, 150, 160
of SAXParserFactory, 201, 203
of TransformerFactory, 213
of XMLInputFactory, 207
of XMLOutputFactory, 214, 221
of XPathFactory, 191, 195
NewObject function (C), 965, 970, 974
newOutputStream method
of Channels, 250, 257
of Files, 104–105
newPath method (XPathFactory), 195
newSAXParser method (SAXParserFactory), 201, 203
NewString function (C), 953
NewStringUTF function (C), 950–952, 954, 988
newTransformer method (TransformerFactory), 213,

231
NewXxxArray functions (C), 973, 988
next method
of ResultSet, 298, 300, 321
of XMLStreamReader, 208
next, nextOrSame methods (TemporalAdjusters), 359
nextElement method (Enumeration), 659, 987–990
nextPage method (CachedRowSet), 330, 332
NMTOKEN, NMTOKENS attribute types (DTDs), 167–168
Node interface
appendChild method, 209, 212
getAttributes method, 154, 161
getChildNodes method, 151, 161
getFirstChild method, 153, 161
getLastChild method, 154, 161
getLocalName method, 198–199
getNamespaceURI method, 198–199
getNextSibling method, 154, 161
getNodeXxx methods, 154, 161, 198
getParentNode method, 161
getPreviousSibling method, 161

subinterfaces of, 151
Node renderer, 648
nodeChanged method (DefaultTreeModel), 652,
658
NodeList interface, 151
getLength method, 151, 162
item method, 151, 162, 169
Nodes (Swing), 639
adding/removing, 652
changes in, 653
child, 639, 642
collapsed, 654
connecting lines for, 645–646

1041

currently selected, 650
editing, 654, 673
enumerating, 659–661
expanding, 654
handles for, 644, 646, 661
highlighting, 662
identifying, by tree paths, 650
making visible, 653
parent, 639, 642
rendering, 661–664
root, 639–647
row positions of, 652
searching, for a given user object, 660,
666
selecting, 665
user objects for, 642
changing, 652
nodesChanged method (DefaultTreeModel), 658
Nondeterministic parsing, 166
noneMatch method (Stream), 13
Noninterference, of stream operations, 43
@NonNull annotation, 467–468
normalize method (Path), 102–103
Normalized color values, 835
Normalizer class, 395
normalize method, 400
NoSuchAlgorithmException, 550, 573
NoSuchElementException, 15, 990
notFilter method (RowFilter), 615, 625
NotSerializableException, 92
now method (Date and Time API), 352, 356,
360, 363
NT logins, 531
NTLoginModule class, 532–533
NTUserPrincipal class, 533
NullPointerException, 12, 976
Number class
doubleValue method, 378
intValue method, 379
numberFilter method (RowFilter), 615, 625
NumberFormat class, 378–383, 691
format method, 379, 383
get/setXxxDigits methods, 383
getAvailableLocales method, 376, 379, 383
getCurrencyInstance method, 378, 383–384,
691
getIntegerInstance method, 689
getNumberInstance method, 378, 383, 691
getPercentInstance method, 378, 383, 691
is/setGroupingUsed methods, 383

From the Library of Hristo Dimov Hristov

1042

Index

NumberFormat class (continued)
is/setParseIntegerOnly methods, 383
parse method, 378–379, 383
setCurrency method, 384

supported locales, 376
numberFormat/NumberFormatTest.java, 380
NumberFormatException, 683

Numbers
filtering, 615
floating-point, 372, 378–383, 691
formatting, 372, 378–383, 691
supported locales for, 379
with C, 947
in regular expressions, 131, 133
printing, 61
random, 37
reading:
from files, 56
from ZIP archives, 58
using locales, 378
truly random, 570
writing in binary format, 69
NUMERIC data type (SQL), 291, 348
NVARCHAR data type (SQL), 348

O
Object class, clone method, 81, 98

Object inspection tree, 671–680
Object references, and clipboard, 902
Object serialization, 80–100
cloning with, 98–100
file format for, 85–92
MIME type for objects in, 893
modifying default, 92–94
of singletons, 94–95
serial numbers for, 82–83
ObjectInputStream class, 81
constructor, 85
readObject method, 81, 85, 93
ObjectOutputStream class, 80
constructor, 85
defaultWriteObject method, 92
writeObject method, 80, 85, 92
Objects
cloning, 98–100
fingerprints of, 87
life cycle of, 472
MIME types for, 893
printing, 61
reading from an input stream, 81

saving:
in database, 474
in output streams, 80, 82
in text format, 63–67
serializable, 80–85
transferring via clipboard, 898–902
transmitting over network connection, 84
type code for, 87, 961
versioning, 95–98
objectStream/ObjectStreamTest.java, 84
ODBC API, 282, 284
of method
of Date and Time API, 356, 360–363
of DoubleStream, 39
of IntStream, 36, 38
of LongStream, 39
of Optional, 16
of Stream, 5, 8
ofDateAdjuster method (TemporalAdjusters), 359
OffsetDateTime class, 364
ofInstant method (ZonedDateTime), 363
ofLocalizedXxx methods (DateTimeFormatter), 365,
385, 392
ofNullable method (Optional), 16
ofPattern method (DateTimeFormatter), 367
oj literal (SQL), 319
One-touch expand icon, 732
open method
of Desktop, 927, 932
of FileChannel, 117, 122
of SocketChannel, 250, 256
openConnection method (URL), 259, 265
Opened nonleaf icons, 648, 661
openOutputStream method (SimpleJavaFileObject), 445,
449
OpenSSL toolkit, 560–561
openStream method (URL), 257, 265
Operating system
character encodings in, 404
resources in, 408
Optional class, 12–17
creating values of, 16
empty method, 16
flatMap method, 16–19
get method, 15–16
ifPresent method, 14–15, 41
isPresent method, 15–16
map method, 14–15
of, ofNullable methods, 16
orElse method, 12, 14–15, 41

From the Library of Hristo Dimov Hristov

Index

orElseGet method, 14–15, 41
orElseThrow method, 15
optional keyword, 532
optional/OptionalTest.java, 17
OptionalXxx classes, 37, 41

Oracle JVM implementation, 973
order method (ByteBuffer), 118, 123
ORDER BY statement (SQL), 299
orElse method (Optional), 12, 14–15, 41
orElseGet method (Optional), 14–15, 41
orElseThrow method (Optional), 15
orFilter method (RowFilter), 615, 625
org.w3c.dom package, 150
org.w3c.dom.CharacterData API, 162
org.w3c.dom.Document API, 161, 212
org.w3c.dom.Element API, 161, 212
org.w3c.dom.NamedNodeMap API, 162
org.w3c.dom.Node API, 161, 199, 212
org.w3c.dom.NodeList API, 162
org.xml.sax.Attributes API, 204–205
org.xml.sax.ContentHandler API, 204
org.xml.sax.EntityResolver API, 170
org.xml.sax.ErrorHandler API, 171
org.xml.sax.helpers.AttributesImpl API, 232
org.xml.sax.InputSource API, 171
org.xml.sax.SAXParseException API, 171
org.xml.sax.XMLReader API, 232

Outer joins, 319
Outline dragging, 751–760
OutOfMemoryError, 976
output element (XSLT), 224
Output streams, 48–59
and Unicode, 48
buffered, 57–59
byte processing in, 57
byte-oriented, 48
closing, 49, 249
filters for, 55–59
hierarchy of, 51–55
objects in, 80–100
OutputStream class, 48, 52–53, 214
close method, 51
flush method, 49, 51
write method, 48, 50–51
OutputStreamWriter class, 60
OverlappingFileLockException, 127
Overloading, 941
@Override annotation, 470–471
Overtype mode, 693
Overwrite mode, 692

1043

P
\p, \P, in regular expressions, 130
Package class, implementing AnnotatedElement,

457
package-info.java file, 467

Packages
annotating, 466–467, 470
avoiding name clashes with, 196, 496
Packets, 238
Padding schemes, 568
Page setup dialog box, 856–857
Pageable interface
implementing, 862
objects, printing, 874
PageAttributes class (obsolete), 886
pageDialog method (PrinterJob), 856–857, 861
PageFormat class
getHeight, getWidth methods, 854, 861
getImageableXxx methods, 855, 861–862
getOrientation method, 862
Pages
measurements of, 855
multiple, printing, 862–864
orientation of, 802, 856, 862
paint method
of JComponent, 626, 766
of LayerUI, 764
of PanelLayer, 760
Paint, 797–799
Paint interface, 797
paintComponent method
of JComponent, 596–597, 766
of StrokePanel, 791
Paper margins, 854
Paper sizes, 412, 855
parallel method (BaseStream), 41–45
parallel/ParallelStreams.java, 44
parallelStream method (Collection), 2–5,
41–46
Parameter variables, annotating, 466
Parent nodes (Swing), 639, 642
parse method
of DateTimeFormatter, 367
of DocumentBuilder, 160
of LocalXxx , ZonedDateTime, 386, 393
of NumberFormat, 378–379, 383
of SAXParser, 201, 203
of XMLReader, 232
Parsed character data, 165
ParseException, 379, 383, 693

From the Library of Hristo Dimov Hristov

1044

Index

Parsers, 149–162
checking uniqueness of IDs in, 168, 178
pull, 205
validating in, 163
Parsing (XML), 149–162
nondeterministic, 166
with XML Schema, 174
partitioningBy method (Collectors), 28, 31
PasswordCallback class, 538
constructor, 546
get/setPassword methods, 546
getPrompt method, 546
isEchoOn method, 546
Password-protected resources, 261–262
Path interface, 101–103
getParent, getFileName, getRoot methods, 103
normalize, relativize methods, 102–103
resolve, resolveSibling methods, 102–103
toAbsolutePath, toFile methods, 102–103
Path2D class, append, closePath methods, 776, 786
Path2D.Float class
curveTo, lineTo, quadTo methods, 775, 786
moveTo method, 775–776, 786
pathFromAncestorEnumeration method
(DefaultMutableTreeNode), 660
Paths (file system), 101–103
absolute vs. relative, 56, 101–102
checking properties of, 108–109
filtering, 111
relativizing, 102
resolving, 58, 101
root component of, 101
separators in, 56, 101
Paths (graphics)
closing, 776
drawing, 775–776
Paths class, 115
get method, 101, 103
Pattern class, 134
compile method, 134, 139
matcher method, 134, 140
split method, 139–140
splitAsStream method, 6, 8
Patterns, 128–141
#PCDATA element content (DTD), 165
PDF format, printing, 874
peek method (Stream), 11–12
Pentium processor, little-endian order in, 70
Percentages, formatting, 378–383,
691

Performance
of encryption algorithms, 576
of file operations, 116–124
Period class, 357
Perl programming language, regular
expressions in, 134
Permission class
constructor, 530
equals method, 523
extending, 522
getActions method, 523
getName method, 525, 530
hashCode method, 523
implies method, 523–524, 530
Permission files, 511
permission keyword, 517, 520
Permissions, 510–514
call stack of, 513
checking, 509–510
class hierarchy of, 512
commonly used classes for, 517–520
for files, 520
for users, 531
implementing, 522–530
implying other permissions, 524
in policy files, 514–522
mapping code sources to, 510
order of, 523
property, 521
restricting to certain users, 533
socket, 521
targets of, 520–521
permissions/PermissionTest.java, 528
permissions/WordCheckPermission.java, 526
Permutations, of a string, 705–706
@Persistent annotation, 474
Personal data, transferring, 567
Pixels
affine transformations on, 843
antialiasing, 818–819
average value of, 844
composing, 807–817
interpolating, 797–798, 818, 820, 843
reading, 835
setting individual, 835–842
Placeholder characters, in masks, 693
Placeholders, in message formatting,
400–404
PlainDocument class, 681, 689
Plugins, loading, 494

From the Library of Hristo Dimov Hristov

Index

plus, plusXxx methods (Date and Time API),

preOrderEnumeration method (DefaultMutableTreeNode),

353, 356–357, 360, 362–363
PNG format, 823
animated, 921
printing, 874
Points, in typography, 855
Policy class, 511, 515
Policy files, 514–522
and Java Plug-in, 563
building, 563–565
debugging, 564
locations for, 515
parsing, 525
platform-independent, 521
referencing keystores in, 563
system properties in, 521
user roles in, 530–546
visibility of, 525
Policy managers, 514–522
policytool program, 522
Polygons, 769, 776
populate method (CachedRowSet), 330, 332
Pop-up menus, for tray icons, 933
PopupMenu class, 933
Porter–Duff rules, 808–811
Portrait orientation, 856
Ports, 235
blocking, 234
in URIs, 258
position method (Buffer), 126
position function (XPath), 225
POSIX-compliant file systems, 109
PosixFileAttributes interface, 109
POST method (HTML), 269–271
post/PostTest.java, 274
@PostConstruct annotation, 470, 472
PostgreSQL database, 291
connecting to, 295
drivers for, 292
Postorder traversal, 659
postOrderEnumeration method (DefaultMutableTreeNode),
659, 663
PostScript format
printing, 874, 878
writing to, 878
Predefined character class names, 129, 133
Predefined character classes, 130
@PreDestroy annotation, 470, 472
premain method (Instrumentation API),
487

659, 663
Prepared statements, 309–316
caching, 311
executing, 310
PreparedStatement interface
clearParameters method, 316
executeXxx , setXxx methods, 310, 316
prepareStatement method (Connection), 310, 315,
322, 326
previous method (ResultSet), 323, 327
previous, previousOrSame methods (TemporalAdjusters),
359
previousPage method (CachedRowSet), 332
preVisitDirectory, postVisitDirectory methods
of FileVisitor, 112
of SimpleFileVisitor, 115
Primary keys, 320
Primitive types
arrays of, 973
I/O in binary format in, 51
streams of, 36–41
Principal interface, getName method, 537
Principals (logins), 532
print method
of Desktop, 927, 932
of DocPrintJob, 877
of JTable, 602, 604
Print dialog box, 852
displaying page ranges in, 854, 862
native, 853, 857
Print preview, 864–873
Print services, 874–878
document flavors for, 874–875
for images, 876
stream, 878–879
print/PrintComponent.java, 859
print/PrintTestFrame.java, 858
Printable interface
implementing, 852, 857
objects, printing, 874
print method, 852, 860, 862, 864–865
Printer graphics context, 863
PrinterException, 853
PrinterJob class
defaultPage method, 861
getPrinterJob method, 852, 861
pageDialog method, 856–857, 861
print method, 853–854, 861
printDialog method, 852–853, 861

1045

From the Library of Hristo Dimov Hristov

1046

Index

PrinterJob class (continued)
setPageable method, 862, 873
setPrintable method, 861
printf function (C), 947
printf1/Printf1.c, 948
printf1/Printf1.java, 948
printf1/Printf1Test.java, 949
printf2/Printf2.c, 954
printf2/Printf2.java, 954
printf2/Printf2Test.java, 953
printf3/Printf3.c, 967
printf3/Printf3.java, 967
printf3/Printf3Test.java, 966
printf4/Printf4.c, 976
printf4/Printf4.java, 978
printf4/Printf4Test.java, 979

PrintService interface
createPrintJob method, 874, 877
getAttributes method, 886
getName method, 874
printService/PrintServiceTest.java, 876
PrintServiceAttribute interface, 879

Printing, 851–887
clipped areas, 854
counting pages during, 854
images, 852–862
layout of, 862–863
multipage documents, 861–864
number of copies for, 879
page orientation of, 802, 856
paper sizes in, 855
quality of, 882
selecting settings for, 852
starting, 509, 852
text, 852–862
using:
banding for, 854
transformations for, 864
Printing attributes, 879–887
adding, 881
categories of, 881–882
checking values of, 882
hierarchy of, 880
retrieving, 882
PrintJob class (obsolete), 852
PrintJobAttribute interface, 879
printing attributes of, 882–885
PrintJobAttributeSet interface, 880
println method (System.out), 405–406
PrintPreviewCanvas class, 864
PrintPreviewDialog class, 864–873
PrintQuality class, 882
PrintRequestAttribute interface, 879
printing attributes of, 882–885
PrintRequestAttributeSet interface, 852,
880

Privacy Enhanced Mail (PEM) format, 560
Private keys, 550–563, 576
PrivilegedAction interface, 539
implementing, 532
run method, 532, 536
PrivilegedExceptionAction interface, 533
run method, 537
processAnnotations method (ActionListenerInstaller),
457–458
Processing instructions (XML), 149
Processing tools, 455
Processor interface, 476
processXxxEvent methods (LayerUI), 761, 764
Programmer’s Day, 356
Programs. See Applications
Progress bars (Swing), 719–722
completion percentage in, 720
indeterminate, 720
minimum/maximum values of, 719
on a splash screen, 922–923
Progress monitors (Swing), 722–726
cancellation requests in, 723
for input streams, 726–731
timers in, 723
progressBar/ProgressBarFrame.java, 720
ProgressMonitor class, 722–726
close method, 723, 731
constructor, 731
isCanceled method, 723, 731
setMillisToXxx methods, 724
setNote method, 731
setProgress method, 723, 731
progressMonitor/ProgressMonitorFrame.java,
724

printing attributes of, 882–885
PrintServiceAttributeSet interface, 880
PrintServiceLookup class, lookupPrintServices method,

874, 877
PrintStream class, 61
PrintWriter class, 56, 60–62
checkError method, 61–62

constructor, 62
print method, 61–62, 963–964
printf, println methods, 61–62

From the Library of Hristo Dimov Hristov

Index

ProgressMonitorInputStream class, 726–731

constructor, 731
read method, 727
progressMonitorInputStream/TextFrame.java, 728

Properties
constrained, 748–750
generated automatically, 480
Properties class, 144
Property files, 144
character encoding of, 410
event handlers in, 438
for resources bundles, 409–410
for string resources, 408
for strings, 410
no passwords in, 278
Property permissions, 521
@Property annotation, 480
PropertyChangeEvent class
getNewValue method, 750, 759
getPropertyName method, 759
PropertyPermission class, 517
PropertyVetoException class, 744–750
constructor, 760
Protection domains, 512
ProtectionDomain class
constructor, 514
getCodeSource, implies methods, 514
Prototype cell values, 590
Proxy objects, 457
for annotated methods, 458
PUBLIC identifier (DTD), 210
Public certificates, keystore for, 563
Public key ciphers, 550–558, 575–579
performance of, 576
Public Key Cryptography Standard (PKCS)
#5, 568
Pull parsers, 205
PushbackInputStream class, 57
constructor, 59
unread method, 59
put method
of Bindings, 434
of ByteBuffer, 122
of CharBuffer, 124
of ScriptEngine, 433
of ScriptEngineManager, 433
putClientProperty method (JComboBox), 645, 650,
751
putNextEntry method (ZipOutputStream), 77–78
putXxx methods (ByteBuffer), 118, 123

1047

Q
\Q, in regular expressions, 130

QBE (query by example) tools, 287
QuadCurve2D class, 769, 774
QuadCurve2D.Double class, 785

Quadratic curves, 774–775
quadTo method (Path2D.Float), 775, 786

Qualified names, 198
Quantifiers, 129
Queries (databases), 288–290
by example, 287
executing, 298, 309–321
multiple, 301
populating row sets with results of, 330
preparing, 309–316
returning multiple results, 319–320
query/QueryTest.java, 312
&quot;, entity reference, 148
quoteReplacement method (Matcher), 141

R
R programming language, 430, 438
\r line feed character, 61, 154, 405

in e-mails, 278
\r, \R, in regular expressions, 130, 132

Race conditions, 42
Random class, 570

methods of, 37, 40
Random numbers, 37
Random-access files, 72–76
randomAccess/RandomAccessTest.java, 74
RandomAccessFile class, 72–76, 116

constructor, 76
getChannel method, 121
getFilePointer method, 72, 76
length method, 73, 76
seek method, 72, 76

Randomness, 570
range, rangeClosed methods ( XxxStream), 36,

38–39
Raster class
getDataElements method, 837, 841
getPixel, getPixels methods, 836, 841
rasterImage/RasterImageFrame.java, 839
read method
of CipherInputStream, 575
of FileInputStream, 48
of ImageIO, 823, 831
of ImageReader, 832
of InputStream, 48–50

From the Library of Hristo Dimov Hristov

1048

Index

read method (continued)
of ProgressMonitorInputStream, 727
of ZipInputStream, 77
read/fontdialog.xml, 185
read/gridbag.dtd, 187
read/gridbag.xsd, 188
read/GridBagPane.java, 181
read/GridBagTest.java, 179
Readable interface, 52
read method, 53, 55
ReadableByteChannel interface, 250
readAllXxx methods (Files), 104
readAttributes method (Files), 109
Reader class, 48, 52
read method, 51
READER class (DocFlavor), 875
readExternal method (Externalizable), 93–94
readFixedString method (DataIO), 73–74
readLine method (Console), 63
readObject method
of Date, 93
of ObjectInputStream, 81, 85, 93
ReadOnlyBufferException, 117
readResolve method (Serializable), 95
readThumbnail method (ImageReader), 833
readXxx methods (DataInput), 70–71, 81
REAL data type (SQL), 291, 348

Receiver parameters, 469
Rectangle2D class, 769
RectangularShape class, 770
reduce method (Stream), 33–35

Reductions, 12, 33–35
ref attribute (XML Schema), 173

Reflection
accessing fields of another class with, 509
constructing:
class tree with, 665
static field names with, 387
enumerating fields from a variable with,
674
ReflectPermission class, 519
regex/RegexTest.java, 136
regexFilter method (RowFilter), 615, 625
Registry editor, 986, 990
Registry keys, 987–989
Regular expressions, 128–141
escapes in, 64, 129
filtering, 615
formatters for, 694
grouping in, 133, 135–136

in DTDs, 165
predefined character classes in, 129, 133
quantifiers in, 129
replacing all matches with, 139
relative method (ResultSet), 323, 327
Relative URLs, 563
Relativization, of an absolute URL, 259
relativize method (Path), 102–103
releaseSavepoint method (Connection), 345–346
ReleaseStringChars function (C), 953
ReleaseStringUTFChars function (C), 951–952,
954
ReleaseXxxArrayElements functions (C), 972, 974
reload method (DefaultTreeModel), 653, 658
remaining method (Buffer), 125–126
Remote objects, MIME type for, 893
remove method
of AttributeSet, 886
of DocumentFilter, 702
of SystemTray, 936
removeActionListener method (TrayIcon), 937
removeCellEditorListener method (CellEditor), 638
removeColumn method (JTable), 617, 623
removeElement method (DefaultListModel), 595
removeNodeFromParent method (DefaultTreeModel), 652,
658
removeTabAt method (JTabbedPane), 736, 740
removeTreeModelListener method (TreeModel), 672,
680
removeUpdate method (DocumentListener), 682, 685
RenderableImage interface, 874
Rendering (Swing)
cells, 626–638
columns, 609–610
headers, 627
lists, 595–599
nodes, 661–664
Rendering hints, 766, 817–823
Rendering pipeline, 766–768
RenderingHints class, 817, 823
renderQuality/RenderQualityTestFrame.java, 820
Renjin project, 430–431, 439
@Repeatable annotation, 471
replace method (DocumentFilter), 689, 702
replaceXxx methods (Matcher), 139, 141
required keyword, 532
#REQUIRED attribute (DTD), 167
requisite keyword, 532
RescaleOp class, 843, 850
Rescaling operation, 843

From the Library of Hristo Dimov Hristov

Index

reset method
of Buffer, 125–126
of InputStream, 50
of Matcher, 141
of MessageDigest, 550
reshape method (JInternalFrame), 743, 758
resolve, resolveSibling methods (Path),

102–103
resolveEntity method (EntityResolver), 164, 170

Resolving
classes, 492
relative URLs, 259
Resource bundles, 408–413
loading, 410–411
locating, 409–410
lookup tables for, 411
naming, 411
searching for, 411
Resource editor, 408
@Resource annotation, 349, 470, 472
ResourceBundle class
extending, 411–412
getBundle method, 409–412
getKeys method, 412–413
getObject method, 411–412
getString method, 410, 412
getStringArray method, 412
handleGetObject method, 412–413
ResourceBundle.Control class, getCandidateLocales
method, 410
Resources
annotations for managing, 472
hierarchy of, 409
injection, 472
@Resources annotation, 470
Response headers, 262–263
Response page, 268
Result interface, 226–227, 349
Result sets (databases)
accessing columns in, 299
analyzing, 298
closing, 302
for multiple queries, 301
iterating over rows in, 321
metadata for, 334
numbering rows in, 323
order of rows in, 299
retrieving multiple, 319–320
scrollable, 321–324
updatable, 321, 324–328

1049

ResultSet interface, 329
absolute method, 323, 327
beforeFirst, afterLast methods, 323, 327
cancelRowUpdates method, 325, 328
close method, 301

concurrency values, 322, 324, 326, 328
deleteRow method, 325, 328
findColumn method, 301
first, last methods, 323, 327
getBlob,getClob methods, 316–317
getConcurrency method, 323–324, 327
getMetaData method, 334, 343
getRow method, 323, 327
getType method, 323, 326
getWarnings method, 304
getXxx methods, 299, 301
insertRow method, 325, 328
isClosed method, 301
isFirst, isLast, isBeforeFirst, isAfterLast

methods, 324, 327
iteration protocol, 298
moveToXxxRow methods, 325, 327
next method, 298, 300, 321
previous method, 323, 327
relative method, 323, 327
type values, 322, 324, 326, 328
updateObject method, 301
updateXxx methods, 324–325, 328
ResultSetMetaData interface, 334
getColumnXxx methods, 334, 343
Retention policies, 472
@Retention annotation, 456, 470, 472
retire/Retire.java, 415
retire/RetireResources_de.java, 427
retire/RetireResources_zh.java, 427
retire/RetireResources.java, 426
retire/RetireStrings_de.properties, 428
retire/RetireStrings_zh.properties, 428
retire/RetireStrings.properties, 428
Retirement calculator example, 413–428
RETURN_GENERATED_KEYS field (Statement), 321
rewind method (Buffer), 125–126
RFC 2368, 927
RFC 2396, 258
RFC 2616, 261
RFC 2911, 885
RFC 821, 278
RGB color model, 807, 836
Rivest, Ronald, 548
Role-based authentication, 537

From the Library of Hristo Dimov Hristov

1050

Index

rollback method (Connection), 344–346

Root certificate, 563
Root component (file system), 101
Root element (XML), 147, 154
referencing schemas in, 172
Root node (Swing), 639–647
handles for, 646–647
horizontal lines separating children of, 646
rotate method (Graphics2D), 800, 804
Rotation, 800
and interpolating pixels, 818, 843
with center point, 801
Round cap, round join, 788
Round join, 789
Rounded rectangles, 772
RoundEnvironment interface, 477
RoundRectangle2D class, 769, 772
RoundRectangle2D.Double class, 785
Row sets (databases), 328–333
cached, 329–334
constructing, 329
modifying, 330
page size of, 330
RowFilter class, 615–617
include method, 616, 624
xxxFilter methods, 615, 625
RowFilter.Entry class, 616
RowId interface, 348
ROWID data type (SQL), 348
Rows (databases), 285
deleting/inserting, 325
iterating through, 324
order of, in result set, 299
retrieving, 348
selecting, 288
updating, 325
Rows (Swing)
filtering, 615–617
height of, 612
hiding, 616
margins of, 612
position, in a node, 652
resizing, 612
selecting, 602, 612
sorting, 602, 614–615
turning off, 614
RowSet interface, 328–332
execute method, 330, 332
get/setCommand methods, 330, 332
get/setPassword methods, 330–331

get/setURL methods, 330–331
get/setUsername methods, 330–331
RowSetFactory interface, createXxxRowSet methods,

329, 333
RowSetProvider class, newFactory method, 329, 332

RSA algorithm, 551, 576
rsa/RSATest.java, 577
rt.jar file, 493–494

RTF (Rich Text Format), 712
Ruby programming language, 430
run method
of PrivilegedAction, 532, 536
of PrivilegedExceptionAction, 537
of Tool, 447
Runnable interface, 245
Runtime class, exit method, 509
runtimeAnnotations/ActionListenerFor.java, 461
runtimeAnnotations/ActionListenerInstaller.java, 459
RuntimePermission class, 518

S
S (short), type code, 87, 961
\s, \S, in regular expressions, 131
@SafeVarargs annotation, 470

Sample values, 835
Sandbox, 510–514
SASL (Simple Authentication and Security
Layer), 579
Save points (databases), 345
Savepoint interface, getSavepointXxx methods, 347
SAX (Simple API for XML) parser, 149,
199–205
activating namespace processing in, 201
sax/SAXTest.java, 202
SAXParseException class, getXxxNumber methods, 171
SAXParser class, parse method, 201, 203
SAXParserFactory class
is/setNamespaceAware methods, 203
is/setValidating methods, 203
newInstance, newSAXParser methods, 201, 203
setFeature method, 202
SAXResult class, 227
SAXSource class, 226–227
constructor, 231
Scalar functions, 318–319
scale method (Graphics2D), 800, 804
Scaling, 800
and interpolating pixels, 818, 820
Scanner class, 62, 250
useLocale method, 380

From the Library of Hristo Dimov Hristov

Index

Scheduling applications
and time zones, 355, 361
computing dates for, 358–360
schema element (XML Schema), 174
Schemas, 342
Script engines, 430–431
adding variable bindings to, 432
implementing Java interfaces, 435
invoking, 430
invoking functions in, 435–436
script/ScriptTest.java, 439
ScriptContext interface, 433
getXxx/setXxx methods of, 434
ScriptEngine interface
createBindings method, 433
eval method, 431–433
get, put methods, 433
getContext method, 434
ScriptEngineFactory interface
getExtensions method, 431
getMethodCallSyntax method, 435
getMimeTypes method, 431
getNames method, 431
ScriptEngineManager class
get method, 433
getEngineXxx methods, 431
put method, 433
Scripting languages, 430–442
advantages of, 430
supported, 430
Scripts
accessing classes through Java interfaces
in, 436
compiling, 437
executing, 437
concurrently in multiple threads, 432
invoking, 431
multiple, 432
redirecting I/O of, 434
using Java method call syntax in, 435
Scroll pane (Swing)
with lists, 582, 590
with tabbed panes, 736
with tables, 601
with trees, 653–654
scrollPathToVisible method (JTree), 653, 657
Seconds, leap, 352
Secret key, generating, 570
SecretKey interface, 569
SecretKeySpec class, 574

1051

Secure random generator, 570
SecureRandom class, setSeed method, 570

Securing Java (McGraw/Felten), 513
Security, 491–579
bytecode verification, 504–508
class loaders, 492–508
code signing, 561–567
different levels of, 547
digital signatures, 546–567
encryption, 567–579
user authentication, 530–546
Security managers, 509–530
custom, 510
Security policy, 510
SecurityException, 510, 512
SecurityManager class
checkExit method, 509, 512
checkPermission method, 512–513, 523–524
checkRead method, 513
SecurityPermission class, 519
seek method (RandomAccessFile), 72, 76
“Seek forward only” mode (ImageInputStream),
825
select attribute (XSLT), 225
SELECT statement (SQL), 288–289
executing, 298
for LOBs, 316
multiple, in a query, 319
not supported in batch updates, 345
Selection models, 612
separator constant (File), 56
Separators (file system), 56, 101
sequence element (XML Schema), 173
Serial numbers, 82–83
vs. memory addresses, 84
serialClone/SerialCloneTest.java, 98
SerialCloneable class, 98
Serializable interface, 81, 87, 474
readResolve method, 95
@Serializable annotation, 474
SerializablePermission class, 519
Serialization, 80–100
cloning with, 98–100
file format for, 85–92
MIME type for objects in, 893
modifying default, 92–94
of singletons, 94–95
serial numbers for, 82–83
serialTransfer/SerialTransferFrame.java, 900
serialver program, 96

From the Library of Hristo Dimov Hristov

1052

Index

serialVersionUID constant, 96
server/EchoServer.java, 243

Servers
accessing, 257–277
connecting clients to, 236–238
implementing, 241–249
invoking programs, 268
Server-side programs, 267–277
ServerSocket class, 241–249
accept method, 242, 245
close method, 245
constructor, 245
SERVICE_FORMATTED class (DocFlavor), 875
Service provider interfaces, 824
Servlets, 268, 449–454
hot deployment of, 496
Session class, setDebug method, 279
Set interface, containsAll, equals methods, 525
set/Item.java, 485
set/SetTest.java, 486
setAllowsChildren, setAsksAllowsChildren methods
(DefaultMutableTreeNode), 648, 650
setAllowUserInteraction method (URLConnection), 259,
261, 266
setAttribute, setAttributeNS methods (Element), 209,
212
setAutoCommit method (Connection), 346
setAutoCreateRowSorter method (JTable), 602, 604,
614
setAutoResizeMode method (JTable), 611, 622
setBinaryStream method (Blob), 317
SetBooleanArrayRegion function (C), 973
SetBooleanField function (C), 961
setBottomComponent method (JSplitPane), 735
SetByteArrayRegion function (C), 973–974, 988
SetByteField function (C), 961
setCellEditor method (TableColumn), 629, 637
setCellRenderer method
of JList, 597, 599
of TableColumn, 637
setCellSelectionEnabled method (JTable), 613, 622
setCharacterStream method (Clob), 318
SetCharArrayRegion function (C), 973–974
SetCharField function (C), 961
setClip method (Graphics), 805–806, 854
setClosable method (JInternalFrame), 758
setClosed method (JInternalFrame), 748, 758
setClosedIcon method (DefaultTreeCellRenderer), 664
setColumnSelectionAllowed method (JTable), 613, 622
setCommand method (RowSet), 330, 332

setComparator method (DefaultRowSorter), 614, 624
setComponentAt method (JTabbedPane), 740
setComposite method (Graphics2D), 767, 809, 816
setConnectTimeout method (URLConnection), 259,

266
setContentHandler method (XMLReader), 232
setContentPane method (JInternalFrame), 758
setContents method (Clipboard), 889, 891
setContextClassLoader method (Thread), 495, 503
setContinuousLayout method (JSplitPane), 733, 735
setCrc method (ZipEntry), 79
setCurrency method (NumberFormat), 384
setDataElements method (WritableRaster), 837, 841
setDate method (PreparedStatement), 310, 316
setDebug method (Session), 279
setDecomposition method (Collator), 399
setDefault method (Locale), 376–377
setDefaultNamespace method (XMLStreamWriter), 221
setDefaultRenderer method (JTable), 626
setDouble method (PreparedStatement), 310, 316
SetDoubleArrayRegion function (C), 973–974
SetDoubleField function (C), 956, 961
setDoXxx methods (URLConnection), 259–260, 265,

270
setDragEnabled method (of Swing components),

904, 909–910
setDragMode method (JDesktopPane), 751, 757
setDropAction method (TransferSupport), 919
setDropMode method (of Swing components),

913, 919
setEditable method, 714
setEditor method (JSpinner), 710
setEntityResolver method (DocumentBuilder), 164,

170
setErrorHandler method (DocumentBuilder), 170
setErrorWriter method (ScriptContext), 434
setFeature method (SAXParserFactory), 202
setFillsViewportHeight method (JTable), 602, 604
setFixedCellXxx methods (JList), 593
SetFloatArrayRegion function (C), 973–974
SetFloatField function (C), 961
setFocusLostBehavior method (JFormattedTextField),

688, 701
setFrameIcon method (JInternalFrame), 743, 759
setFrom method (MimeMessage), 278
setGroupingUsed method (NumberFormat), 383
setHeaderXxx methods (TableColumn), 627, 637
setIcon method (JInternalFrame), 758
setIconAt method (JTabbedPane), 740
setIconifiable method (JInternalFrame), 758

From the Library of Hristo Dimov Hristov

Index

setIfModifiedSince method (URLConnection), 259,

261, 266
setIgnoringElementContentWhitespace method
(DocumentBuilderFactory), 169, 171
setImage, setImageAutoSize methods (TrayIcon), 936
setImageURL method (SplashScreen), 926
setIndeterminate method (JRootPane), 720, 730
setInput method (ImageReader), 832
setInt method (PreparedStatement), 310, 316
SetIntArrayRegion function (C), 973–974
SetIntField function (C), 956, 961, 989
setInvalidCharacters method (MaskFormatter), 692,

703
setLayerEventMask method (JLayer), 764
setLayoutOrientation method (JList), 587
setLeafIcon method (DefaultTreeCellRenderer), 664
setLeftComponent method (JSplitPane), 735
setLenient method (DateFormat), 691
setLevel method (ZipOutputStream), 78
setLocale method (MessageFormat), 402
setLogWriter method (DriverManager), 296
SetLongArrayRegion function (C), 973–974
SetLongField function (C), 961
setMaximizable method (JInternalFrame), 758
setMaximum method
of JInternalFrame, 745, 758
of JProgressBar, 719, 730
setMaximumXxxDigits, setMinimumXxxDigits methods
(NumberFormat), 383
setMaxWidth method (TableColumn), 611, 623
setMethod method
of ZipEntry, 79
of ZipOutputStream, 78
setMillisToXxx methods (ProgressMonitor), 724
setMinimum method (JProgressBar), 719, 730
setMinWidth method (TableColumn), 611, 623
setMnemonicAt method (JTabbedPane), 737, 741
setName method (NameCallback), 545
setNamespaceAware method
of DocumentBuilderFactory, 174, 198–199, 201, 209
of SAXParserFactory, 203
setNote method (ProgressMonitor), 731
SetObjectArrayElement function (C), 972, 974–975
SetObjectField function (C), 956, 961
setOneTouchExpandable method (JSplitPane), 732,

734
setOpenIcon method (DefaultTreeCellRenderer), 664
setOutput method (ImageWriter), 834
setOutputProperty method (Transformer), 213
setOverwriteMode method (DefaultFormatter), 702

1053

setPage method (JEditorPane), 714, 718
setPageable method (PrinterJob), 862, 873
setPageSize method (CachedRowSet), 330, 332
setPaint method (Graphics2D), 767, 797–798
setParseIntegerOnly method (NumberFormat), 383
setPassword method
of PasswordCallback, 546
of RowSet, 330–331
setPixel, setPixels methods (WritableRaster), 835,

841
setPlaceholder method (MaskFormatter), 703
setPlaceholderCharacter method (MaskFormatter), 693,

703
setPopupMenu method (TrayIcon), 936
setPreferredSize method (JComponent), 685
setPreferredWidth method (TableColumn), 611, 623
setPrefix method (XMLStreamWriter), 221
setPrintable method (PrinterJob), 861
setProgress method (ProgressMonitor), 723, 731
setProperty method (XMLInputFactory), 206–207
setPrototypeCellValue method (JList), 593
setReader method (ScriptContext), 434
setReadTimeout method (URLConnection), 259, 266
setRenderingHint, setRenderingHints methods
(Graphics2D), 766, 817–819, 823
setRequestProperty method (URLConnection), 259,

261, 266
setResizable method
of JInternalFrame, 758
of TableColumn, 611, 623
setRightComponent method (JSplitPane), 735
setRootVisible method (JTree), 647, 649
setRowFilter method (DefaultRowSorter), 615, 624
setRowHeight, setRowMargin, setRowSelectionAllowed
methods (JTable), 612, 622
setRowSorter method (JTable), 614, 623

Sets
comparing, 525
flattening, 10
setSavepoint method (Connection), 346
setSecurityManager method (System), 516
setSeed method (SecureRandom), 570
setSelected method (JInternalFrame), 744, 758
setSelectedIndex method (JTabbedPane), 736, 740
setSelectionMode method
of JList, 583, 587
of ListSelectionModel, 612, 624
SetShortArrayRegion function (C), 973–974
SetShortField function (C), 961
setShowsRootHandles method (JTree), 646, 649

From the Library of Hristo Dimov Hristov

1054

Index

setSize method (ZipEntry), 79
setSortable method (DefaultRowSorter), 614, 624
setSoTimeout method (Socket), 238–239
SetStaticXxxField functions (C), 960–961
setStrength method (Collator), 399
setString method (PreparedStatement), 310, 316
setString, setStringPainted methods (JProgressBar),

720, 730
setStringConverter method (TableRowSorter), 624
setStroke method (Graphics2D), 767, 788, 796
setSubject method (MimeMessage), 278
setTableName method (CachedRowSet), 331–332
setTabXxx methods (JTabbedPane), 737, 741
setText method
of JFormattedTextField, 688
of MimeMessage, 278
setTitleAt method (JTabbedPane), 740
setTooltip method (TrayIcon), 936
setTopComponent method (JSplitPane), 735
setToXxx methods (AffineTransform), 802, 804
setTransferHandler method
of JComponent, 906, 909
of JFrame, 919
setTransform method (Graphics2D), 802, 804
setURL method (RowSet), 330–331
setUseCaches method (URLConnection), 259, 261, 266
setUsername method (RowSet), 330–331
setUserObject method (MutableTreeNode), 642, 649
setValidating method
of DocumentBuilderFactory, 169, 171
of SAXParserFactory, 203
setValidCharacters method (MaskFormatter), 692, 703
setValue method
of AbstractSpinnerModel, 705, 712
of JFormattedTextField, 687–688, 701
of JProgressBar, 719, 730
of JSpinner, 710
of Win32RegKey, 988
setValueAt method (TableModel), 608, 632
setValueContainsLiteralCharacters method
(MaskFormatter), 703
setVisible method (JInternalFrame), 744, 759
setVisibleRowCount method (JList), 583, 587
setWidth method (TableColumn), 611, 623
setWriter method (ScriptContext), 434

SGML (Standard Generalized Markup
Language), 145
SHA-1 algorithm, 86, 547–549
Shape interface, 769, 787
shape/ShapeTest.java, 777

ShapeMaker class
getPointCount method, 776
makeShape method, 776–777
ShapePanel class, 777

Shapes, 769–786
antialiasing, 817
clipping, 766, 805–807
combining, 786–788
control points of, 776–777
creating, 767
drawing, 766–769
filling, 766–767, 797
rendering, 768
transformations of, 766
Shared libraries, 946, 985
initialization blocks in, 947
shear method (Graphics2D), 800, 804
Shear, 800
short type
printing, 61
type code for, 87, 961
vs. C types, 947
writing in binary format, 69
ShortBuffer class, 124
ShortLookupTable class, 844, 851
shouldSelectCell method (CellEditor), 631, 638
show method (JInternalFrame), 759
showInternalXxxDialog methods (JOptionPane), 750
shutdownXxx methods (Socket), 249
Side files, 475
Signatures, 546–567
generating, 962
mangling, 961–963
signed/FileReadApplet.java, 566
Simple types, 172
SimpleDateFormat class, toPattern method, 712
SimpleDoc class, 874, 878
SimpleFileVisitor class, 113
visitFile, visitFileFailed methods, 113, 115
xxxVisitDirectory methods, 115
SimpleJavaFileObject class
extending, 445
getCharContent method, 445, 449
openOutputStream method, 445, 449
SimpleLoginModule class, checkLogin, initialize
methods, 538
SimpleScriptContext class, 433
simpleType element (XML Schema), 172
SimulatedActivity class, 720
Single value annotations, 465

From the Library of Hristo Dimov Hristov

Index

Singletons
of the splash screen, 923
serializing, 94–95
SISC Scheme programming language, 430,
438–439
size method
of BasicFileAttributes, 109
of Files, 108–109
skip method
of InputStream, 50
of Stream, 10–11
skipBytes method (DataInput), 71
SMALLINT data type (SQL), 291, 348
SMTP (Simple Mail Transport Protocol),
277–280
Socket class
connect method, 239
constructor, 238–239
getInputStream method, 237–238, 242
getOutputStream method, 238, 242
isClosed, isConnected methods, 239
isXxxShutdown, shutdownXxx methods, 249
setSoTimeout method, 238–239
Socket permissions, 521
socket/SocketTest.java, 236
SocketChannel class, 250
open method, 250, 256
SocketPermission class, 517
Sockets
half-closing, 249
interrupting, 250–257
opening, 237, 509
timeouts, 238–239
SocketTimeoutException, 238, 266
Software updates, 932
Solaris operating system
compiling invocation API, 984
using Sun compiler, 943
sort method (Collections), 394
sorted method (Stream), 11–12
Source interface, 226, 349
Source files
character encoding of, 407–408
locating, 444
reading from disk, 444
Source-level annotations, 475–480
Space. See Whitespace
SPARC processor, big-endian order in, 70
spinner/PermutationSpinnerModel.java, 708
spinner/SpinnerFrame.java, 706

1055

SpinnerDateModel class, 711
SpinnerListModel class, 704, 711
SpinnerNumberModel class, 704, 711

Spinners (Swing), 703–712
increment value in, 704
traversal order in, 704–705
Splash screens, 921–926
drawing on, 922–923
replacing with follow-up window, 923
SplashScreen class
close method, 926
createGraphics method, 926
get/setImageURL methods, 926
getBounds method, 926
getSplashScreen method, 923, 926
update method, 922, 926
splashScreen/SplashScreenTest.java, 923
split method
of Pattern, 139–140
of String, 64
Split panes (Swing), 732–735
splitAsStream method (Pattern), 6, 8
splitPane/SplitPaneFrame.java, 733
sprint function (C), 954
sprintf function (C), 953
SQL (Structured Query Language), 285–290
changing data inside databases, 290
commands in, 293
data types in, 291, 347–349
equality testing in, 289
escapes in, 318–319
exceptions in, 302–305
executing statements in, 298–301
keywords in, 288
reading instructions from a file, 305
strings in, 289
vs. Java, 311
warnings in, 303
wildcards in, 289
SQLException class, 302–305, 323
and rolling back, 344
and save points, 347
getXxx , iterator methods, 302, 304
SQLPermission class, 520
SQLWarning class, 303, 323
getNextWarning method, 304
SQLXML data type (SQL), 348–349
Square cap, 788–789
Square root, computing, 17
SQuirreL program, 334

From the Library of Hristo Dimov Hristov

1056

Index

SRC, SRC_Xxx composition rules, 809–810
src.jar file, 981

sRGB standard, 837
SSL (Secure Sockets Layer), 579
Standard extensions, 493
StandardCharsets class, 69
StandardJavaFileManager interface, 444–445
getJavaFileObjectsFromXxx methods, 448
start method (Matcher), 135, 137, 140–141
startDocument method (ContentHandler), 204
startElement method (ContentHandler), 200–204
Statement interface, 298–301
addBatch method, 345–347
close, closeOnCompletion methods, 300, 302
execute method, 300, 306, 319, 321
executeBatch method, 346–347
executeLargeBatch method, 347
executeQuery method, 298, 300, 323
executeUpdate method, 298, 300, 321, 344
getMoreResults method, 320
getResultSet method, 300
getUpdateCount method, 300, 320
getWarnings method, 304
isClosed method, 300
RETURN_GENERATED_KEYS field, 321
using for multiple queries, 301
Statements (databases)
closing, 302
complex, 311
concurrently open, 301
executing, 298–301
grouping into transactions, 344–347
in batch updates, 345
multiple, 301
prepared, 309–316
truncations in, 303
Static fields, in native code, 960–961
Static initialization blocks, 944
Static methods, calling from native code,
964–965
StAX parser, 205–208, 214–222
namespace processing in, 206
no indented output in, 214
stax/StAXTest.java, 206
StAXSource class, 226
stopCellEditing method (CellEditor), 631–632, 638
Stored procedures, 318–319
stream method
of Arrays, 8, 36
of Collection, 2–5

Stream interface
collect method, 19, 22, 35
concat method, 11
count method, 3–4, 12
distinct method, 11–12, 43
empty method, 5, 8
filter method, 3–4, 9–10, 13
findAny method, 13
findXxx methods, 13
flatMap method, 10
forEach method, 19, 22
generate method, 5, 8, 36
iterate method, 5, 8, 12, 36
limit method, 10–11, 43
map method, 9–10
max, min methods, 12
of method, 5, 8
peek method, 11–12
reduce method, 33–35
skip method, 10–11
sorted method, 11–12
toArray method, 19, 22
xxxMatch methods, 13

Streaming parsers, 149, 199–208
StreamPrintService class, 878
StreamPrintServiceFactory class, 878
getPrintService method, 878–879
lookupStreamPrintServiceFactories method,

879
StreamResult class, 213, 227

Streams (Java SE 8), 1–46
combining, 11
converting:
between objects and primitive types of,
36
to arrays, 19
creating, 5–8
debugging, 11
empty, 5, 34
encrypted, 574–575
extracting substreams from, 10
filters for, 726
flattening, 10
for print services, 878–879
infinite, 3, 5, 10, 12
input, 150, 726–731
intermediate and terminal operations for,
3, 12
of primitive type values, 36–41
of random numbers, 37

From the Library of Hristo Dimov Hristov

Index

operations on:
noninterference of, 43
threadsafe, 42
ordered, 42
parallel, 2, 13, 19, 41–46
pipeline of, 11
processed lazily, 3, 12, 43
reductions of, 12
sorting, 11
transformations of, 9–12
vs. collections, 3
streams/CountLongWords.java, 4
streams/CreatingStreams.java, 6
streams/PrimitiveTypeStreams.java, 37
StreamSource class, 226
constructor, 231
transform method, 227
String class, 54
charAt method, 9
compareTo method, 393
split method, 64
toLowerCase method, 9
trim method, 153, 379
STRING class (DocFlavor), 875
String parameters, 949–956
StringBuffer class, 54, 124
StringBuilder class, 54, 73, 688, 727
Strings
encoding, 407
in Unicode, 371
fixed-size, I/O of, 73–74
in native code, 949–956
in SQL, 289
internationalizing, 408–410
ordering, 393
patterns for, 128–141
permutations of, 705–706
printing, 61
sorting, 394
splitting, 6
transforming to lowercase, 9
writing in binary format, 69
StringSelection class, 888, 894
stringToValue method (AbstractFormatter), 693, 701
Stroke interface, 788
stroke/StrokeTest.java, 791
StrokePanel class, 791
Strokes, 766, 788–796
antialiasing, 818
dash patterns of, 790

1057

end cap styles of, 788–790
join styles of, 788–789
setting, 767
thickness of, 788
StyledDocument interface, 681
StylePad demo, 682
Stylesheets (XSLT), 222–232
Subject class
doAs, doAsPrivileged methods, 532–533,
536
getPrincipals method, 536
Subjects (logins), 532
subSequence method (CharSequence), 55
subtract method (Area), 787–788
Subtrees (Swing), 644, 661
adding nodes to, 653
collapsed and expanded, 645
Suetonius, Gaius Tranquillus, 498
sufficient keyword, 532
sum method ( XxxStream), 37, 39–40
summarizingXxx methods (Collectors), 20, 23
summaryStatistics method ( XxxSummaryStatistics),
37, 39–40
summingXxx methods (Collectors), 29, 33
Sun compiler, 943
SunJCE ciphers, 568
Superclasses, type use annotations in,
468
Supplier interface, get method, 8
@SupportedAnnotationTypes annotation, 476
SupportedValuesAttribute interface, 879
supportsBatchUpdates method (DatabaseMetaData), 345,
347
supportsResultSetXxx methods (DatabaseMetaData),
323, 328
@SuppressWarnings annotation, 470–471
SVG (Scalable Vector Graphics), 211–212
Swing, 581–764
data transfer in, 904–921
generating dynamic code for, 449
loading time in, 921
Swing components
attaching verifiers to, 690
desktop panes, 741–760
drag-and-drop behavior of, 909–912
editor pane, 712–719
internal frames, 741–760
layers, 760–764
layout managers for, 175–189
lists, 582–588

From the Library of Hristo Dimov Hristov

1058

Index

Swing components (continued)
organizing, 731–764
progress bars, 719–722
progress monitors, 722–726
spinners, 703–712
split panes, 732–735
tabbed panes, 735–741
tables, 599–638
text, 681–719
trees, 639–680
Swing Connection newsletter, 694
SwingWorker class, 720
Symmetric ciphers, 567–569
performance of, 576
SyncProviderException interface, 331–332
System class
console method, 406
loadLibrary method, 944, 946
setSecurityManager method, 516
SYSTEM identifier (DTD), 164, 210
System class loader, 493
System properties, in policy files, 521
System tray, 932–937
System.err class, 61
System.in class, 61
and character encoding, 406
System.out class, 61
and character encoding, 406
println method, 405–406
SystemTray class, 932–937
add method, 932, 936
getSystemTray method, 932, 936
getTrayIconSize method, 936
isSupported method, 932, 936
remove method, 936
systemTray/SystemTrayTest.java, 934

T
t literal (SQL), 318
\t, in regular expressions, 130

Tabbed panes (Swing), 735–741
adding/removing tabs in, 736
labels of, 737
scrolling, 736
tabbedPane/TabbedPaneFrame.java, 738
Table cell renderers, 609, 626
Table index values, 614
Table models (Swing), 600, 604–608
updating after cells were edited, 632
table/TableTest.java, 603

TableCellEditor interface, 629, 631
getTableCellEditorComponent method, 629, 631,

638
tableCellRender/ColorTableCellEditor.java, 635
tableCellRender/ColorTableCellRenderer.java, 635
tableCellRender/PlanetTableModel.java, 633
tableCellRender/TableCellRenderFrame.java, 632
TableCellRenderer interface
getTableCellRendererComponent method, 626, 637

implementing, 626
TableColumn class, 611–612, 617

constructor, 623
setCellEditor method, 629, 637
setCellRenderer method, 637
setHeaderXxx methods, 627, 637
setResizable, setWidth, setXxxWidth methods,

611, 623
TableColumnModel interface, 610
getColumn method, 623
TableModel interface, 614
get/setValueAt methods, 605–606, 608, 632
getColumnClass method, 609, 621
getColumnName method, 606, 608
getXxxCount methods, 605–606, 608

implementing, 605
isCellEditable method, 608, 628
tableModel/InvestmentTable.java, 606
tableRowColumn/PlanetTableFrame.java, 617
TableRowSorter class, 614
setStringConverter method, 624

Tables (databases), 285
changing data in, 290
creating, 290
duplication of data in, 287
inspecting, 287
metadata for, 333
multiple, selecting data from, 289
removing, 295
Tables (Swing), 599–638
cells in:
editing, 628–629
rendering, 626
selecting, 612–614, 626
columns in:
accessing, 610
adding, 617
hiding, 617–625
naming, 606
rearranging, 601
rendering, 609–610

From the Library of Hristo Dimov Hristov

Index

resizing, 602, 611–612
selecting, 612
constructing, 601, 605
headers in, 601
rendering, 627
printing, 602
relationship between classes of, 610
rows in:
filtering, 615–617
hiding, 616
margins of, 612
resizing, 612
selecting, 602, 612
sorting, 602, 614–615
scrolling, 601
TableStringConverter class, toString method, 615,
624
@Target annotation, 456, 470, 472–473
TCP (Transmission Control Protocol), 238
telnet, 233–236
activating/connecting, 234
several windows communicating
simultaneously, 246–247
template element (XSLT), 224
Temporal interface, with method, 359
TemporalAdjuster interface, 359
TemporalAdjusters class, 358–359
test/TestDB.java, 296
@Test annotation, 455
@TestCase, @TestCases annotations, 475
Text, 60–69
copying, 887
drag and drop of, 904–905
encoding of, 67–69
formatting, 887
generating from XML files, 225–227
output, 60–62
printing, 852–862, 874
reading, 62–63
saving objects in, 63–67
transferring via clipboard, 888–892
transmitting through sockets, 241–249
vs. binary data, 60
Text components (Swing), 681–719
hierarchy of, 681
monitoring input in, 682–685
styled, 681, 712
Text fields
committing, 687
editing, 629

1059

formatted, 685–703
input in:
integers, 686
turning to upper/lower case, 690
validating, 524–530, 683, 685–703
losing focus, 687–688
reverting, 687
Text files, encoding of, 405–406
Text nodes (XML)
constructing, 209
retrieving from XML, 153
TextCallbackHandler class, 538
textChange/ColorFrame.java, 683
textFile/TextFileTest.java, 65
textFormat/FormatTestFrame.java, 695
textFormat/IntFilter.java, 698
textFormat/IPAddressFormatter.java, 699
TextLayout class, getXxx methods, 807
TextStyle enumeration, 387
TextSyntax class, 882
TexturePaint class, 797–799
this keyword, 956
annotating, 468–469
Thread class, get/setContextClassLoader methods,
495, 503
threaded/ThreadedEchoServer.java, 247
ThreadedEchoHandler class, 245–248
Threads
blocking, 49, 250–257, 723
executing scripts in, 432
for new pages in JEditorPane, 715
Internet connections with, 245–248
race conditions in, 42
referencing class loaders in, 495–496
Three-tier model, 284–285
Throw, ThrowNew functions (C), 974–975, 979
Throwable class, 974
Thumbnails, 826
Tiling windows, 744, 746–747
Time
current, 352
editing, 691
formatting, 365–368, 385–393
literals for, 318
local, 360–361
measuring, 352–353
parsing, 367
zoned, 361–365
Time class, 369
Time of day service, 234

From the Library of Hristo Dimov Hristov

1060

Index

Time pickers, 705
Time zones, 385
TIME, TIMESTAMP data types (SQL), 291, 318, 348
timeline/TimeLine.java, 354
Timeouts, 238–239
Timer class, 723
Timestamp class, 369
Timestamps, 365
using instants as, 352
TimeZone class, and legacy classes, 369
toAbsolutePath method (Path), 102–103
toArray method
of AttributeSet, 886
of streams, 19, 22, 36, 38–39–40
toCollection method (Collectors), 20, 23
toConcurrentMap method (Collectors), 25, 27
toDays method (Duration), 353
toFile method (Path), 102–103
toFormat method (DateTimeFormatter), 367
toHours method (Duration), 353
toInstant method
of Date, 369
of ZonedDateTime, 361, 363
toLanguageTag method (Locale), 375, 377
toList method (Collectors), 23
toLocalXxx methods (ZonedDateTime), 363
toLowerCase method (String), 9
toMap method (Collectors), 24–27
toMillis, toMinutes, toNanos methods (Duration), 353
toNanoOfDay, toSecondOfDay methods (LocalTime), 360
Tool interface, run method, 447
Toolkit class, getSystemClipboard method, 888, 891
ToolProvider class, getSystemJavaCompiler method,
443
tools.jar file, 443
Tooltips, for tray icons, 932
toPath method (File), 102–103
toPattern method (SimpleDateFormat), 712
Top-level windows, opening, 509
toSeconds method (Duration), 353
toSet method (Collectors), 20, 23, 29
toString method
implementing with annotations, 477–480
of Annotation, 464
of CharSequence, 55
of Currency, 385
of DefaultFormatter, 691
of Locale, 377
of TableStringConverter, 615, 624
of Variable, 674

toZonedDateTime method (GregorianCalendar),

369
Transactions, 344–347
committing/rolling back, 344
error handling in, 346
Transfer handlers, 906–907
adding, 910
Transfer wrapper, 899
Transferable interface, 892–894
getTransferData method, 892
getTransferDataFlavors method, 894
implementing, 888, 894, 902
isDataFlavorSupported method, 892
TransferHandler class, 909–912
canImport method, 912, 918
constructor, 909
createTransferable method, 909, 912
exportAsDrag method, 910, 912
exportDone method, 911–912
getSourceActions method, 909, 912
importData method, 912–914, 918
TransferHandler.DropLocation class, 914
getDropPoint method, 920
TransferSupport class
get/setDropAction methods, 919
getComponent, getDataFlavors methods, 919
getDropLocation method, 914, 919
getSourceDropActions method, 919
getTransferable method, 913
getUserDropAction method, 919
isDrop method, 914, 919
transferText/TextTransferFrame.java, 890
transform method
of Graphics2D, 767, 802, 804
of StreamSource, 227
of Transformer, 213, 226
transform/makehtml.xsl, 227
transform/makeprop.xsl, 228
transform/TransformTest.java, 228
Transformations, 766, 799–804
affine, 802, 843
composing, 800–801
fundamental types of, 800
matrices for, 802
order of, 800
setting, 767
using for printing, 864
Transformer class
setOutputProperty method, 213
transform method, 213, 226

From the Library of Hristo Dimov Hristov

Index

TransformerFactory class
newInstance method, 213
newTransformer method, 213, 231

transient, 92
Transitional events, 584
translate, 800, 804, 864
Translation, 800
Transparency, 807–817
Traversal order
in a spinner, 704–705
in a tree:
breadth-first vs. depth-first, 659
postorder, 659
Tray icons, 932–933
pop-up menus for, 933
tooltips for, 932
TrayIcon class, 933
add/removeActionListener methods, 937
constructor, 936
displayMessage method, 937
get/setImage methods, 936
get/setPopupMenu methods, 936
get/setTooltip methods, 936
is/setImageAutoSize methods, 937
Tree events, 664–671
Tree models
constructing, 641, 672
custom, 671–680
default, 641
Tree parsers, 149
Tree paths, 650–658
constructing, 653, 660
Tree selection listeners, 664
adding to a tree, 664
tree/SimpleTreeFrame.java, 643
TreeCellRenderer interface, 661–664
getTreeCellRendererComponent method, 662–663
implementing, 661
treeEdit/TreeEditFrame.java, 655
TreeModel interface, 640, 650
add/removeTreeModelListener method, 672, 680
getChild method, 680
getChild, getRoot methods, 154, 672–674
getChildCount method, 672–674, 679
getIndexOfChild method, 672, 680
getRoot method, 679
implementing, 154, 641
isLeaf method, 649, 672, 680
valueForPathChanged method, 673, 680
treeModel/ObjectInspectorFrame.java, 675

1061

treeModel/ObjectTreeModel.java, 676
treeModel/Variable.java, 678
TreeModelEvent class, 680
TreeModelListener interface, 672
treeNodesXxx , treeStructureChanged methods, 673,

680
TreeNode interface, 641, 650
children, getChildXxx methods, 658
getAllowsChildren method, 649
getParent method, 658, 660
isLeaf method, 648–649
TreePath class, 651
getLastPathComponent method, 651, 658
treeRender/ClassNameTreeCellRenderer.java, 670
treeRender/ClassTreeFrame.java, 666

Trees (Swing), 639–680
adding listeners to, 664
background color for, 661
connecting lines in, 645–646
displaying, 640–650
editing, 650–658, 673
handles in, 644, 646, 661
hierarchy of classes for, 641
indexes in, 652
infinite, 675
leaves in, 639, 647–648, 661, 672
nodes in, 639, 648, 661, 672
paired with other components, 664
rendering, 661–664
scrolling to newly added nodes, 653–654
structure of, 639
subtrees in, 644
collapsing/expanding, 645
traversals for, 659–661
updating vs. reloading, 653
user objects for, 642
changing, 652
view of, 652–653
with horizontal lines, 646
TreeSelectionEvent class
getPath method, 671
getPaths method, 665, 671
TreeSelectionListener interface
implementing, 664–671
valueChanged method, 664, 666, 671
TreeSelectionModel interface, 665
trim method (String), 153, 379
Troubleshooting. See Debugging
True Odds: How Risks Affect Your Everyday
Life (Walsh), 547

From the Library of Hristo Dimov Hristov

1062

Index

tryLock method (FileChannel)method (Lock),

126–128
try-with-resources statement, 53, 112
closing files with, 110
for database connections, 302
with locks, 127
ts literal (SQL), 318
Type bounds, type use annotations in, 468
TYPE_BYTE_GRAY field (BufferedImage), 838
Type codes, 87, 961
Type definitions, 172
anonymous, 173
nesting, 173
TYPE_INT_ARGB field (BufferedImage), 835–836, 840
Type parameters, annotating, 466
Type use annotations, 467
TYPE_XXX fields (AffineTransformOp), 843, 850
TypeElement interface, 477
Types. See Data types
Typesafe enumerations, 94–95

U
U in masks, 692
\u, in regular expressions, 130

UDP (User Datagram Protocol), 238
UIManager class, 626

Unicode standard
and input/output streams, 48
and native code, 950
character order in, 393
converting to binary data, 60
in property files, 410
in regular expressions, 133
normalization forms in, 394
using for all strings, 371
uninstallUI method (LayerUI), 764
Units of measurement, 148
UNIX operating system
authentications in, 531
file names starting with a period in,
516
Java deployment directory in, 564
line feed in, 61, 405
paths in, 101
UnixLoginModule class, 532
UnixNumericGroupPrincipal class, 532
UnixPrincipal class, 531–532
getName method, 531
UnknownHostException, 237
unordered method (BaseStream), 43, 45

Unparsed external entities, 168
unread method (PushbackInputStream), 59
UnsatisfiedLinkError, 941
UnsupportedFlavorException, 892
until method (LocalDate), 356–357
update method
of Cipher, 568, 571, 573, 575
of MessageDigest, 549–550
of SplashScreen, 922, 926
UPDATE statement (SQL), 290, 310, 324

executing, 298, 300, 316
in batch updates, 345
truncations in, 303
vs. methods of ResultSet, 325
updateObject method (ResultSet), 301
updateXxx methods (ResultSet), 324–325, 328
Upper case, turning characters to, 690
URI class
getXxx methods, 258
no mailto support in, 927
no resource accessing with, 257
URIs (Uniform Resource Identifiers), 257
absolute vs. relative, 258
base, 259
for e-mails, 927
hierarchical, 258
namespace, 196–199
opaque vs. nonopaque, 258
schemes for, 258
URISyntax class, 882
URL class (DocFlavor), 875
URL class (java.lang.Object), 257–259
accepted schemes for, 257
openConnection method, 259, 265
openStream method, 257, 265
URLClassLoader class, 493
constructor, 503
loadClass method, 494
URLConnection class, 257, 259–267
connect method, 259, 262, 266
get/setAllowUserInteraction methods, 259, 261,
266
get/setConnectTimeout methods, 259, 266
get/setDoInput, get/setDoOutput methods, 259–260,
265
get/setIfModifiedSince methods, 259, 261, 266
get/setReadTimeout methods, 259, 266
get/setRequestProperty methods, 259, 261, 266
get/setUseCaches methods, 259, 261, 266
getContent method, 267

From the Library of Hristo Dimov Hristov

Index

getContentXxx , getDate, getExpiration,
getLastModified methods, 260, 263, 267
getHeaderXxx methods, 260–262, 267
getInputStream method, 260, 267, 271, 273
getOutputStream method, 260, 267, 270
getUseCaches method, 266
setDoOutput method, 270
urlConnection/URLConnectionTest.java, 263
URLDecoder class, decode method, 277
URLEncoder class, encode method, 277

URLs (Uniform Resource Locators), 257
attaching parameters to, 269
connections via, 257
constructing from strings, 691
encoding, 269–270
for databases, 292
for local files, 517
for namespace identifiers, 196
relative vs. absolute, 563
for DTDs, 164
resolving, 259
URNs (Uniform Resource Names), 257
US Letter paper, 855
useLocale method (Scanner), 380
User coordinates, 799
User objects, 642
changing, 652
Users
authentication of, 530–546
permissions for, 533
preferences of, 126
UTC (Coordinated Universal Time), 362
UTF-16 standard, 60, 67–68, 70
and native code, 949
in regular expressions, 130
UTF-8 standard, 67–69, 70
for text files, 405–406
modified, 70–72, 407, 949–952

V
V (void), type code, 961
\v, \V, in regular expressions, 131

Validation, 162–189
activating, 168
adding to classes, 92
of input, 683, 685–703
valueChanged method
of ListSelectionListener, 584, 588
of TreeSelectionListener, 664, 666, 671
valueForPathChanged method (TreeModel), 673, 680

1063

value-of element (XSLT), 225

Values
grouping, 28–30
partitioning, 28
valueToString method (AbstractFormatter), 693, 701
VARCHAR data type (SQL), 291, 348
Variable class, 673
toString method, 674
VariableElement interface, 477
Variables
annotating, 456, 467
binding, 432
fields of, 674
initializing, 504
scope of, 433
Variants, in locales, 373, 410
Vendor name, of a reader, 825
verifier/VerifierTest.java, 507
Verifiers, 504–508, 690
verify method (InputVerifier), 690
VeriSign, Inc., 555, 557, 561
Version number, of a reader, 825
Versioning, 95–98
VERTICAL_SPLIT value (JSplitPane), 732
VERTICAL, VERTICAL_WRAP values (JList), 583
Vetoable change listeners, 748
VetoableChangeListener interface
implementing, 749
vetoableChange method, 749, 759
Vetoing, 748–750
view/ViewDB.java, 335
visitFile, visitFileFailed methods
of FileVisitor, 112
of SimpleFileVisitor, 113, 115
Visual representation, 284

W
\w, \W, in regular expressions, 131
walk method (Files), 110
walkFileTree method (Files), 112–114
warning method (ErrorHandler), 170–171

Warnings
in applets, 526
in SQL, 303
suppressing, 471
WBMP format, 823
WeakReference object, 675
Web applications, connection management
in, 349–350
Web containers, 472

From the Library of Hristo Dimov Hristov

1064

Index

Web crawlers, 200
with SAX parser, 201–202
with StAX parser, 206
Web pages
dynamic, 449–454
separating applet class loaders for, 496
WebRowSet interface, 329
WHERE statement (SQL), 289
Whitespace
ignoring, while parsing, 153
in e-mail URIs, 270, 927
in regular expressions, 131, 133
in XML Schema, 174
Wildcards, type use annotations in, 468
Wilde, Oscar, 372
win32reg/Win32RegKey.c, 993
win32reg/Win32RegKey.java, 991
win32reg/Win32RegKeyTest.java, 1000
Win32RegKey class, 987, 990
get/setValue methods, 987–988
names method, 987
Win32RegKeyNameEnumeration class, 989–990
Windows operating system
activating telnet in, 234
authentication in, 533
character encodings in, 404
classpath in, 292
compiling invocation API, 984
cut and paste in, 887
drag and drop in, 904
dynamic linking in, 981
frame dragging in, 751
glob syntax in, 112
Java deployment directory in, 564, 566
line feed in, 61, 405
multiple document interface of, 741–742
paths in, 56, 101
permissions in, 520
registry, accessing from native code,
985–1001
resources in, 408
system tray in, 932
using Microsoft compiler, 944
Windows look-and-feel
cascading/tiling in, 744
trees in, 645
with method (Temporal), 359
withLocale method (DateTimeFormatter), 365, 392
withXxx methods (Date and Time API), 356,
360, 363

WordCheckPermission class, 524–530

Words
counting, in a book, 2
in regular expressions, 131
Working directory, 56
wrap method (ByteBuffer), 123, 125
WritableByteChannel interface, 250
WritableRaster class, 835
setDataElements method, 837, 841
setPixel, setPixels methods, 835, 841
write method
of CipherOutputStream, 575
of Files, 104
of ImageIO, 824, 831
of ImageWriter, 827, 834
of OutputStream, 48, 50–51
write/RectangleComponent.java, 218
write/XMLWriteFrame.java, 215
write/XMLWriteTest.java, 215
writeExternal method (Externalizable), 93–94
writeFixedString method (DataIO), 73–74
writeInsert method (ImageWriter), 827, 834
writeObject method
of Date, 93
of ObjectOutputStream, 80, 85, 92
Writer class, 48, 52–53
write method, 51
writeUTF method (DataOutput), 70, 72
writeXxx methods (DataOutput), 69, 72, 81
writeXxx methods (XMLStreamWriter), 214,
221–222

X
X Window System
cut and paste in, 887
frame dragging in, 751
X.509 format, 554
\x, in regular expressions, 130
XHTML (Extensible Hypertext Markup
Language), 200
XML (Extensible Markup Language), 143–232
annotated version of the standard, 146
case sensitivity of, 146
end and empty tags in, 146
hierarchical structures in, 144–145
in databases, 349
Java support of, 494
namespaces in, 196–199
using for layout description, 175–189
vs. HTML, 146

From the Library of Hristo Dimov Hristov

Index

XML documents
DTDs in, 147, 163–164
format of, 145
generating, 208–222
from non-XML legacy data, 227
HTML files from, 222–225
plain text from, 225–227
locating information in, 190–196
parsing, 149–162
structure of, 146–149–150, 163
validating, 162–189
with/without namespaces, 209–210
writing, 210–211
with StAX, 214–222
XML Schema, 163, 172–174
attributes in, 174
parsing with, 174
referencing in XML documents, 172
repeated elements in, 174
type definitions in, 172
anonymous, 173
nesting, 173
whitespace in, 174
XMLInputFactory class
createXMLStreamReader method, 207
newInstance method, 207
setProperty method, 206–207
xmlns attribute (XSLT), 197
XMLOutputFactory class
createXMLStreamWriter method, 214, 221
newInstance method, 214, 221
XMLReader interface
implementing, 226
parse method, 232
setContentHandler method, 232
XMLStreamReader interface
getAttributeXxx methods, 206, 208
getName, getLocalName, getText methods, 208
hasNext, next methods, 208
isXxx methods, 208
XMLStreamWriter interface, 214
close method, 222
setDefaultNamespace, setPrefix methods,
221
writeXxx methods, 214, 221–222
XOR composition rule, 810
XPath, 190–196
elements/attributes in, 190
expressions in, 191

1065

XPath interface, evaluate method, 191, 196
xpath/XPathTester.java, 192
XPathFactory class
newInstance method, 191, 195
newPath method, 195
xs:, xsd: prefixes (XSL Schema), 172
xsd:attribute element (XML Schema), 174
xsd:choice element (XML Schema), 173
xsd:complexType element (XML Schema), 173
xsd:element element (XML Schema), 172
xsd:enumeration element (XML Schema), 172
xsd:schema element (XML Schema), 174
xsd:sequence element (XML Schema), 173
xsd:simpleType element (XML Schema), 172
xsl:apply-templates element (XSLT), 224
xsl:output element (XSLT), 224
xsl:template element (XSLT), 224
xsl:value-of element (XSLT), 225

XSLT (Extensible Stylesheet Language
Transformations), 210, 222–232
copying attribute values in, 225
templates in, 224
XSLT processor, 222

Y
Year, YearMonth classes, 357

Years, leap, 356

Z
Z (boolean), type code, 87, 961
\z, \Z, in regular expressions, 132

ZIP archives, 77–80
reading, 77
numbers from, 58
writing, 77
ZipEntry class, methods of, 79
ZipFile class, methods of, 80
ZipInputStream class, 51, 77
closeEntry, getNextEntry methods, 77–78
constructor, 78
read method, 77
ZipOutputStream class, 51, 77
closeEntry, putNextEntry methods, 77–78
constructor, 78
setLevel, setMethod methods, 78
ZonedDateTime class
and legacy classes, 369
methods of, 361–365, 369, 386, 393
zonedtimes/ZonedTimes.java, 364

From the Library of Hristo Dimov Hristov


